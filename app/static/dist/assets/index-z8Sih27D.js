var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);import{l as Pr,f as Dr,a as Hr,b as Ir,M as Ua,F as Mr}from"./about-BdlHKEOl.js";import{d as Fr,A as Ur,r as Q,o as qr,e as Yr,w as ut,H as zr,b as Jr}from"./vue-DqnmULX3.js";import{r as jr,g as Vr}from"./lodash-BwctMegf.js";var f0=Wr((I0,kt)=>{function hs(e,t){return function(){return e.apply(t,arguments)}}const{toString:Gr}=Object.prototype,{getPrototypeOf:Sa}=Object,Nt=(e=>t=>{const a=Gr.call(t);return e[a]||(e[a]=a.slice(8,-1).toLowerCase())})(Object.create(null)),ne=e=>(e=e.toLowerCase(),t=>Nt(t)===e),Ot=e=>t=>typeof t===e,{isArray:Me}=Array,Xe=Ot("undefined");function $r(e){return e!==null&&!Xe(e)&&e.constructor!==null&&!Xe(e.constructor)&&Z(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}const fs=ne("ArrayBuffer");function Kr(e){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(e):t=e&&e.buffer&&fs(e.buffer),t}const Zr=Ot("string"),Z=Ot("function"),_s=Ot("number"),xt=e=>e!==null&&typeof e=="object",Xr=e=>e===!0||e===!1,pt=e=>{if(Nt(e)!=="object")return!1;const t=Sa(e);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Qr=ne("Date"),ei=ne("File"),ti=ne("Blob"),ai=ne("FileList"),si=e=>xt(e)&&Z(e.pipe),ri=e=>{let t;return e&&(typeof FormData=="function"&&e instanceof FormData||Z(e.append)&&((t=Nt(e))==="formdata"||t==="object"&&Z(e.toString)&&e.toString()==="[object FormData]"))},ii=ne("URLSearchParams"),[oi,ni,li,ci]=["ReadableStream","Request","Response","Headers"].map(ne),di=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function at(e,t,{allOwnKeys:a=!1}={}){if(e===null||typeof e>"u")return;let s,r;if(typeof e!="object"&&(e=[e]),Me(e))for(s=0,r=e.length;s<r;s++)t.call(null,e[s],s,e);else{const i=a?Object.getOwnPropertyNames(e):Object.keys(e),o=i.length;let n;for(s=0;s<o;s++)n=i[s],t.call(null,e[n],n,e)}}function Ss(e,t){t=t.toLowerCase();const a=Object.keys(e);let s=a.length,r;for(;s-- >0;)if(r=a[s],t===r.toLowerCase())return r;return null}const Le=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,ks=e=>!Xe(e)&&e!==Le;function ra(){const{caseless:e}=ks(this)&&this||{},t={},a=(s,r)=>{const i=e&&Ss(t,r)||r;pt(t[i])&&pt(s)?t[i]=ra(t[i],s):pt(s)?t[i]=ra({},s):Me(s)?t[i]=s.slice():t[i]=s};for(let s=0,r=arguments.length;s<r;s++)arguments[s]&&at(arguments[s],a);return t}const ui=(e,t,a,{allOwnKeys:s}={})=>(at(t,(r,i)=>{a&&Z(r)?e[i]=hs(r,a):e[i]=r},{allOwnKeys:s}),e),pi=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),mi=(e,t,a,s)=>{e.prototype=Object.create(t.prototype,s),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),a&&Object.assign(e.prototype,a)},hi=(e,t,a,s)=>{let r,i,o;const n={};if(t=t||{},e==null)return t;do{for(r=Object.getOwnPropertyNames(e),i=r.length;i-- >0;)o=r[i],(!s||s(o,e,t))&&!n[o]&&(t[o]=e[o],n[o]=!0);e=a!==!1&&Sa(e)}while(e&&(!a||a(e,t))&&e!==Object.prototype);return t},fi=(e,t,a)=>{e=String(e),(a===void 0||a>e.length)&&(a=e.length),a-=t.length;const s=e.indexOf(t,a);return s!==-1&&s===a},_i=e=>{if(!e)return null;if(Me(e))return e;let t=e.length;if(!_s(t))return null;const a=new Array(t);for(;t-- >0;)a[t]=e[t];return a},Si=(e=>t=>e&&t instanceof e)(typeof Uint8Array<"u"&&Sa(Uint8Array)),ki=(e,t)=>{const s=(e&&e[Symbol.iterator]).call(e);let r;for(;(r=s.next())&&!r.done;){const i=r.value;t.call(e,i[0],i[1])}},Ti=(e,t)=>{let a;const s=[];for(;(a=e.exec(t))!==null;)s.push(a);return s},Bi=ne("HTMLFormElement"),Ei=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(a,s,r){return s.toUpperCase()+r}),qa=(({hasOwnProperty:e})=>(t,a)=>e.call(t,a))(Object.prototype),Ri=ne("RegExp"),Ts=(e,t)=>{const a=Object.getOwnPropertyDescriptors(e),s={};at(a,(r,i)=>{let o;(o=t(r,i,e))!==!1&&(s[i]=o||r)}),Object.defineProperties(e,s)},wi=e=>{Ts(e,(t,a)=>{if(Z(e)&&["arguments","caller","callee"].indexOf(a)!==-1)return!1;const s=e[a];if(Z(s)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+a+"'")})}})},gi=(e,t)=>{const a={},s=r=>{r.forEach(i=>{a[i]=!0})};return Me(e)?s(e):s(String(e).split(t)),a},Ai=()=>{},Li=(e,t)=>e!=null&&Number.isFinite(e=+e)?e:t;function yi(e){return!!(e&&Z(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}const bi=e=>{const t=new Array(10),a=(s,r)=>{if(xt(s)){if(t.indexOf(s)>=0)return;if(!("toJSON"in s)){t[r]=s;const i=Me(s)?[]:{};return at(s,(o,n)=>{const d=a(o,r+1);!Xe(d)&&(i[n]=d)}),t[r]=void 0,i}}return s};return a(e,0)},Ni=ne("AsyncFunction"),Oi=e=>e&&(xt(e)||Z(e))&&Z(e.then)&&Z(e.catch),Bs=((e,t)=>e?setImmediate:t?((a,s)=>(Le.addEventListener("message",({source:r,data:i})=>{r===Le&&i===a&&s.length&&s.shift()()},!1),r=>{s.push(r),Le.postMessage(a,"*")}))(`axios@${Math.random()}`,[]):a=>setTimeout(a))(typeof setImmediate=="function",Z(Le.postMessage)),xi=typeof queueMicrotask<"u"?queueMicrotask.bind(Le):typeof process<"u"&&process.nextTick||Bs,c={isArray:Me,isArrayBuffer:fs,isBuffer:$r,isFormData:ri,isArrayBufferView:Kr,isString:Zr,isNumber:_s,isBoolean:Xr,isObject:xt,isPlainObject:pt,isReadableStream:oi,isRequest:ni,isResponse:li,isHeaders:ci,isUndefined:Xe,isDate:Qr,isFile:ei,isBlob:ti,isRegExp:Ri,isFunction:Z,isStream:si,isURLSearchParams:ii,isTypedArray:Si,isFileList:ai,forEach:at,merge:ra,extend:ui,trim:di,stripBOM:pi,inherits:mi,toFlatObject:hi,kindOf:Nt,kindOfTest:ne,endsWith:fi,toArray:_i,forEachEntry:ki,matchAll:Ti,isHTMLForm:Bi,hasOwnProperty:qa,hasOwnProp:qa,reduceDescriptors:Ts,freezeMethods:wi,toObjectSet:gi,toCamelCase:Ei,noop:Ai,toFiniteNumber:Li,findKey:Ss,global:Le,isContextDefined:ks,isSpecCompliantForm:yi,toJSONObject:bi,isAsyncFn:Ni,isThenable:Oi,setImmediate:Bs,asap:xi};function E(e,t,a,s,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",t&&(this.code=t),a&&(this.config=a),s&&(this.request=s),r&&(this.response=r,this.status=r.status?r.status:null)}c.inherits(E,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:c.toJSONObject(this.config),code:this.code,status:this.status}}});const Es=E.prototype,Rs={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Rs[e]={value:e}});Object.defineProperties(E,Rs);Object.defineProperty(Es,"isAxiosError",{value:!0});E.from=(e,t,a,s,r,i)=>{const o=Object.create(Es);return c.toFlatObject(e,o,function(d){return d!==Error.prototype},n=>n!=="isAxiosError"),E.call(o,e.message,t,a,s,r),o.cause=e,o.name=e.name,i&&Object.assign(o,i),o};const Ci=null;function ia(e){return c.isPlainObject(e)||c.isArray(e)}function ws(e){return c.endsWith(e,"[]")?e.slice(0,-2):e}function Ya(e,t,a){return e?e.concat(t).map(function(r,i){return r=ws(r),!a&&i?"["+r+"]":r}).join(a?".":""):t}function vi(e){return c.isArray(e)&&!e.some(ia)}const Wi=c.toFlatObject(c,{},null,function(t){return/^is[A-Z]/.test(t)});function Ct(e,t,a){if(!c.isObject(e))throw new TypeError("target must be an object");t=t||new FormData,a=c.toFlatObject(a,{metaTokens:!0,dots:!1,indexes:!1},!1,function(B,S){return!c.isUndefined(S[B])});const s=a.metaTokens,r=a.visitor||u,i=a.dots,o=a.indexes,d=(a.Blob||typeof Blob<"u"&&Blob)&&c.isSpecCompliantForm(t);if(!c.isFunction(r))throw new TypeError("visitor must be a function");function l(h){if(h===null)return"";if(c.isDate(h))return h.toISOString();if(!d&&c.isBlob(h))throw new E("Blob is not supported. Use a Buffer instead.");return c.isArrayBuffer(h)||c.isTypedArray(h)?d&&typeof Blob=="function"?new Blob([h]):Buffer.from(h):h}function u(h,B,S){let O=h;if(h&&!S&&typeof h=="object"){if(c.endsWith(B,"{}"))B=s?B:B.slice(0,-2),h=JSON.stringify(h);else if(c.isArray(h)&&vi(h)||(c.isFileList(h)||c.endsWith(B,"[]"))&&(O=c.toArray(h)))return B=ws(B),O.forEach(function(W,$){!(c.isUndefined(W)||W===null)&&t.append(o===!0?Ya([B],$,i):o===null?B:B+"[]",l(W))}),!1}return ia(h)?!0:(t.append(Ya(S,B,i),l(h)),!1)}const m=[],R=Object.assign(Wi,{defaultVisitor:u,convertValue:l,isVisitable:ia});function b(h,B){if(!c.isUndefined(h)){if(m.indexOf(h)!==-1)throw Error("Circular reference detected in "+B.join("."));m.push(h),c.forEach(h,function(O,v){(!(c.isUndefined(O)||O===null)&&r.call(t,O,c.isString(v)?v.trim():v,B,R))===!0&&b(O,B?B.concat(v):[v])}),m.pop()}}if(!c.isObject(e))throw new TypeError("data must be an object");return b(e),t}function za(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(s){return t[s]})}function ka(e,t){this._pairs=[],e&&Ct(e,this,t)}const gs=ka.prototype;gs.append=function(t,a){this._pairs.push([t,a])};gs.toString=function(t){const a=t?function(s){return t.call(this,s,za)}:za;return this._pairs.map(function(r){return a(r[0])+"="+a(r[1])},"").join("&")};function Pi(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function As(e,t,a){if(!t)return e;const s=a&&a.encode||Pi;c.isFunction(a)&&(a={serialize:a});const r=a&&a.serialize;let i;if(r?i=r(t,a):i=c.isURLSearchParams(t)?t.toString():new ka(t,a).toString(s),i){const o=e.indexOf("#");o!==-1&&(e=e.slice(0,o)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e}class Ja{constructor(){this.handlers=[]}use(t,a,s){return this.handlers.push({fulfilled:t,rejected:a,synchronous:s?s.synchronous:!1,runWhen:s?s.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){c.forEach(this.handlers,function(s){s!==null&&t(s)})}}const Ls={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Di=typeof URLSearchParams<"u"?URLSearchParams:ka,Hi=typeof FormData<"u"?FormData:null,Ii=typeof Blob<"u"?Blob:null,Mi={isBrowser:!0,classes:{URLSearchParams:Di,FormData:Hi,Blob:Ii},protocols:["http","https","file","blob","url","data"]},Ta=typeof window<"u"&&typeof document<"u",oa=typeof navigator=="object"&&navigator||void 0,Fi=Ta&&(!oa||["ReactNative","NativeScript","NS"].indexOf(oa.product)<0),Ui=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",qi=Ta&&window.location.href||"http://localhost",Yi=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:Ta,hasStandardBrowserEnv:Fi,hasStandardBrowserWebWorkerEnv:Ui,navigator:oa,origin:qi},Symbol.toStringTag,{value:"Module"})),U={...Yi,...Mi};function zi(e,t){return Ct(e,new U.classes.URLSearchParams,Object.assign({visitor:function(a,s,r,i){return U.isNode&&c.isBuffer(a)?(this.append(s,a.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},t))}function Ji(e){return c.matchAll(/\w+|\[(\w*)]/g,e).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ji(e){const t={},a=Object.keys(e);let s;const r=a.length;let i;for(s=0;s<r;s++)i=a[s],t[i]=e[i];return t}function ys(e){function t(a,s,r,i){let o=a[i++];if(o==="__proto__")return!0;const n=Number.isFinite(+o),d=i>=a.length;return o=!o&&c.isArray(r)?r.length:o,d?(c.hasOwnProp(r,o)?r[o]=[r[o],s]:r[o]=s,!n):((!r[o]||!c.isObject(r[o]))&&(r[o]=[]),t(a,s,r[o],i)&&c.isArray(r[o])&&(r[o]=ji(r[o])),!n)}if(c.isFormData(e)&&c.isFunction(e.entries)){const a={};return c.forEachEntry(e,(s,r)=>{t(Ji(s),r,a,0)}),a}return null}function Vi(e,t,a){if(c.isString(e))try{return(t||JSON.parse)(e),c.trim(e)}catch(s){if(s.name!=="SyntaxError")throw s}return(a||JSON.stringify)(e)}const st={transitional:Ls,adapter:["xhr","http","fetch"],transformRequest:[function(t,a){const s=a.getContentType()||"",r=s.indexOf("application/json")>-1,i=c.isObject(t);if(i&&c.isHTMLForm(t)&&(t=new FormData(t)),c.isFormData(t))return r?JSON.stringify(ys(t)):t;if(c.isArrayBuffer(t)||c.isBuffer(t)||c.isStream(t)||c.isFile(t)||c.isBlob(t)||c.isReadableStream(t))return t;if(c.isArrayBufferView(t))return t.buffer;if(c.isURLSearchParams(t))return a.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let n;if(i){if(s.indexOf("application/x-www-form-urlencoded")>-1)return zi(t,this.formSerializer).toString();if((n=c.isFileList(t))||s.indexOf("multipart/form-data")>-1){const d=this.env&&this.env.FormData;return Ct(n?{"files[]":t}:t,d&&new d,this.formSerializer)}}return i||r?(a.setContentType("application/json",!1),Vi(t)):t}],transformResponse:[function(t){const a=this.transitional||st.transitional,s=a&&a.forcedJSONParsing,r=this.responseType==="json";if(c.isResponse(t)||c.isReadableStream(t))return t;if(t&&c.isString(t)&&(s&&!this.responseType||r)){const o=!(a&&a.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(n){if(o)throw n.name==="SyntaxError"?E.from(n,E.ERR_BAD_RESPONSE,this,null,this.response):n}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:U.classes.FormData,Blob:U.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};c.forEach(["delete","get","head","post","put","patch"],e=>{st.headers[e]={}});const Gi=c.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),$i=e=>{const t={};let a,s,r;return e&&e.split(`
`).forEach(function(o){r=o.indexOf(":"),a=o.substring(0,r).trim().toLowerCase(),s=o.substring(r+1).trim(),!(!a||t[a]&&Gi[a])&&(a==="set-cookie"?t[a]?t[a].push(s):t[a]=[s]:t[a]=t[a]?t[a]+", "+s:s)}),t},ja=Symbol("internals");function Ye(e){return e&&String(e).trim().toLowerCase()}function mt(e){return e===!1||e==null?e:c.isArray(e)?e.map(mt):String(e)}function Ki(e){const t=Object.create(null),a=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let s;for(;s=a.exec(e);)t[s[1]]=s[2];return t}const Zi=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function Vt(e,t,a,s,r){if(c.isFunction(s))return s.call(this,t,a);if(r&&(t=a),!!c.isString(t)){if(c.isString(s))return t.indexOf(s)!==-1;if(c.isRegExp(s))return s.test(t)}}function Xi(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(t,a,s)=>a.toUpperCase()+s)}function Qi(e,t){const a=c.toCamelCase(" "+t);["get","set","has"].forEach(s=>{Object.defineProperty(e,s+a,{value:function(r,i,o){return this[s].call(this,t,r,i,o)},configurable:!0})})}let V=class{constructor(t){t&&this.set(t)}set(t,a,s){const r=this;function i(n,d,l){const u=Ye(d);if(!u)throw new Error("header name must be a non-empty string");const m=c.findKey(r,u);(!m||r[m]===void 0||l===!0||l===void 0&&r[m]!==!1)&&(r[m||d]=mt(n))}const o=(n,d)=>c.forEach(n,(l,u)=>i(l,u,d));if(c.isPlainObject(t)||t instanceof this.constructor)o(t,a);else if(c.isString(t)&&(t=t.trim())&&!Zi(t))o($i(t),a);else if(c.isHeaders(t))for(const[n,d]of t.entries())i(d,n,s);else t!=null&&i(a,t,s);return this}get(t,a){if(t=Ye(t),t){const s=c.findKey(this,t);if(s){const r=this[s];if(!a)return r;if(a===!0)return Ki(r);if(c.isFunction(a))return a.call(this,r,s);if(c.isRegExp(a))return a.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,a){if(t=Ye(t),t){const s=c.findKey(this,t);return!!(s&&this[s]!==void 0&&(!a||Vt(this,this[s],s,a)))}return!1}delete(t,a){const s=this;let r=!1;function i(o){if(o=Ye(o),o){const n=c.findKey(s,o);n&&(!a||Vt(s,s[n],n,a))&&(delete s[n],r=!0)}}return c.isArray(t)?t.forEach(i):i(t),r}clear(t){const a=Object.keys(this);let s=a.length,r=!1;for(;s--;){const i=a[s];(!t||Vt(this,this[i],i,t,!0))&&(delete this[i],r=!0)}return r}normalize(t){const a=this,s={};return c.forEach(this,(r,i)=>{const o=c.findKey(s,i);if(o){a[o]=mt(r),delete a[i];return}const n=t?Xi(i):String(i).trim();n!==i&&delete a[i],a[n]=mt(r),s[n]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){const a=Object.create(null);return c.forEach(this,(s,r)=>{s!=null&&s!==!1&&(a[r]=t&&c.isArray(s)?s.join(", "):s)}),a}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,a])=>t+": "+a).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...a){const s=new this(t);return a.forEach(r=>s.set(r)),s}static accessor(t){const s=(this[ja]=this[ja]={accessors:{}}).accessors,r=this.prototype;function i(o){const n=Ye(o);s[n]||(Qi(r,o),s[n]=!0)}return c.isArray(t)?t.forEach(i):i(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);c.reduceDescriptors(V.prototype,({value:e},t)=>{let a=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(s){this[a]=s}}});c.freezeMethods(V);function Gt(e,t){const a=this||st,s=t||a,r=V.from(s.headers);let i=s.data;return c.forEach(e,function(n){i=n.call(a,i,r.normalize(),t?t.status:void 0)}),r.normalize(),i}function bs(e){return!!(e&&e.__CANCEL__)}function Fe(e,t,a){E.call(this,e??"canceled",E.ERR_CANCELED,t,a),this.name="CanceledError"}c.inherits(Fe,E,{__CANCEL__:!0});function Ns(e,t,a){const s=a.config.validateStatus;!a.status||!s||s(a.status)?e(a):t(new E("Request failed with status code "+a.status,[E.ERR_BAD_REQUEST,E.ERR_BAD_RESPONSE][Math.floor(a.status/100)-4],a.config,a.request,a))}function eo(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}function to(e,t){e=e||10;const a=new Array(e),s=new Array(e);let r=0,i=0,o;return t=t!==void 0?t:1e3,function(d){const l=Date.now(),u=s[i];o||(o=l),a[r]=d,s[r]=l;let m=i,R=0;for(;m!==r;)R+=a[m++],m=m%e;if(r=(r+1)%e,r===i&&(i=(i+1)%e),l-o<t)return;const b=u&&l-u;return b?Math.round(R*1e3/b):void 0}}function ao(e,t){let a=0,s=1e3/t,r,i;const o=(l,u=Date.now())=>{a=u,r=null,i&&(clearTimeout(i),i=null),e.apply(null,l)};return[(...l)=>{const u=Date.now(),m=u-a;m>=s?o(l,u):(r=l,i||(i=setTimeout(()=>{i=null,o(r)},s-m)))},()=>r&&o(r)]}const Tt=(e,t,a=3)=>{let s=0;const r=to(50,250);return ao(i=>{const o=i.loaded,n=i.lengthComputable?i.total:void 0,d=o-s,l=r(d),u=o<=n;s=o;const m={loaded:o,total:n,progress:n?o/n:void 0,bytes:d,rate:l||void 0,estimated:l&&n&&u?(n-o)/l:void 0,event:i,lengthComputable:n!=null,[t?"download":"upload"]:!0};e(m)},a)},Va=(e,t)=>{const a=e!=null;return[s=>t[0]({lengthComputable:a,total:e,loaded:s}),t[1]]},Ga=e=>(...t)=>c.asap(()=>e(...t)),so=U.hasStandardBrowserEnv?((e,t)=>a=>(a=new URL(a,U.origin),e.protocol===a.protocol&&e.host===a.host&&(t||e.port===a.port)))(new URL(U.origin),U.navigator&&/(msie|trident)/i.test(U.navigator.userAgent)):()=>!0,ro=U.hasStandardBrowserEnv?{write(e,t,a,s,r,i){const o=[e+"="+encodeURIComponent(t)];c.isNumber(a)&&o.push("expires="+new Date(a).toGMTString()),c.isString(s)&&o.push("path="+s),c.isString(r)&&o.push("domain="+r),i===!0&&o.push("secure"),document.cookie=o.join("; ")},read(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function io(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function oo(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}function Os(e,t,a){let s=!io(t);return e&&s||a==!1?oo(e,t):t}const $a=e=>e instanceof V?{...e}:e;function Oe(e,t){t=t||{};const a={};function s(l,u,m,R){return c.isPlainObject(l)&&c.isPlainObject(u)?c.merge.call({caseless:R},l,u):c.isPlainObject(u)?c.merge({},u):c.isArray(u)?u.slice():u}function r(l,u,m,R){if(c.isUndefined(u)){if(!c.isUndefined(l))return s(void 0,l,m,R)}else return s(l,u,m,R)}function i(l,u){if(!c.isUndefined(u))return s(void 0,u)}function o(l,u){if(c.isUndefined(u)){if(!c.isUndefined(l))return s(void 0,l)}else return s(void 0,u)}function n(l,u,m){if(m in t)return s(l,u);if(m in e)return s(void 0,l)}const d={url:i,method:i,data:i,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:n,headers:(l,u,m)=>r($a(l),$a(u),m,!0)};return c.forEach(Object.keys(Object.assign({},e,t)),function(u){const m=d[u]||r,R=m(e[u],t[u],u);c.isUndefined(R)&&m!==n||(a[u]=R)}),a}const xs=e=>{const t=Oe({},e);let{data:a,withXSRFToken:s,xsrfHeaderName:r,xsrfCookieName:i,headers:o,auth:n}=t;t.headers=o=V.from(o),t.url=As(Os(t.baseURL,t.url,t.allowAbsoluteUrls),e.params,e.paramsSerializer),n&&o.set("Authorization","Basic "+btoa((n.username||"")+":"+(n.password?unescape(encodeURIComponent(n.password)):"")));let d;if(c.isFormData(a)){if(U.hasStandardBrowserEnv||U.hasStandardBrowserWebWorkerEnv)o.setContentType(void 0);else if((d=o.getContentType())!==!1){const[l,...u]=d?d.split(";").map(m=>m.trim()).filter(Boolean):[];o.setContentType([l||"multipart/form-data",...u].join("; "))}}if(U.hasStandardBrowserEnv&&(s&&c.isFunction(s)&&(s=s(t)),s||s!==!1&&so(t.url))){const l=r&&i&&ro.read(i);l&&o.set(r,l)}return t},no=typeof XMLHttpRequest<"u",lo=no&&function(e){return new Promise(function(a,s){const r=xs(e);let i=r.data;const o=V.from(r.headers).normalize();let{responseType:n,onUploadProgress:d,onDownloadProgress:l}=r,u,m,R,b,h;function B(){b&&b(),h&&h(),r.cancelToken&&r.cancelToken.unsubscribe(u),r.signal&&r.signal.removeEventListener("abort",u)}let S=new XMLHttpRequest;S.open(r.method.toUpperCase(),r.url,!0),S.timeout=r.timeout;function O(){if(!S)return;const W=V.from("getAllResponseHeaders"in S&&S.getAllResponseHeaders()),k={data:!n||n==="text"||n==="json"?S.responseText:S.response,status:S.status,statusText:S.statusText,headers:W,config:e,request:S};Ns(function(se){a(se),B()},function(se){s(se),B()},k),S=null}"onloadend"in S?S.onloadend=O:S.onreadystatechange=function(){!S||S.readyState!==4||S.status===0&&!(S.responseURL&&S.responseURL.indexOf("file:")===0)||setTimeout(O)},S.onabort=function(){S&&(s(new E("Request aborted",E.ECONNABORTED,e,S)),S=null)},S.onerror=function(){s(new E("Network Error",E.ERR_NETWORK,e,S)),S=null},S.ontimeout=function(){let $=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded";const k=r.transitional||Ls;r.timeoutErrorMessage&&($=r.timeoutErrorMessage),s(new E($,k.clarifyTimeoutError?E.ETIMEDOUT:E.ECONNABORTED,e,S)),S=null},i===void 0&&o.setContentType(null),"setRequestHeader"in S&&c.forEach(o.toJSON(),function($,k){S.setRequestHeader(k,$)}),c.isUndefined(r.withCredentials)||(S.withCredentials=!!r.withCredentials),n&&n!=="json"&&(S.responseType=r.responseType),l&&([R,h]=Tt(l,!0),S.addEventListener("progress",R)),d&&S.upload&&([m,b]=Tt(d),S.upload.addEventListener("progress",m),S.upload.addEventListener("loadend",b)),(r.cancelToken||r.signal)&&(u=W=>{S&&(s(!W||W.type?new Fe(null,e,S):W),S.abort(),S=null)},r.cancelToken&&r.cancelToken.subscribe(u),r.signal&&(r.signal.aborted?u():r.signal.addEventListener("abort",u)));const v=eo(r.url);if(v&&U.protocols.indexOf(v)===-1){s(new E("Unsupported protocol "+v+":",E.ERR_BAD_REQUEST,e));return}S.send(i||null)})},co=(e,t)=>{const{length:a}=e=e?e.filter(Boolean):[];if(t||a){let s=new AbortController,r;const i=function(l){if(!r){r=!0,n();const u=l instanceof Error?l:this.reason;s.abort(u instanceof E?u:new Fe(u instanceof Error?u.message:u))}};let o=t&&setTimeout(()=>{o=null,i(new E(`timeout ${t} of ms exceeded`,E.ETIMEDOUT))},t);const n=()=>{e&&(o&&clearTimeout(o),o=null,e.forEach(l=>{l.unsubscribe?l.unsubscribe(i):l.removeEventListener("abort",i)}),e=null)};e.forEach(l=>l.addEventListener("abort",i));const{signal:d}=s;return d.unsubscribe=()=>c.asap(n),d}},uo=function*(e,t){let a=e.byteLength;if(a<t){yield e;return}let s=0,r;for(;s<a;)r=s+t,yield e.slice(s,r),s=r},po=async function*(e,t){for await(const a of mo(e))yield*uo(a,t)},mo=async function*(e){if(e[Symbol.asyncIterator]){yield*e;return}const t=e.getReader();try{for(;;){const{done:a,value:s}=await t.read();if(a)break;yield s}}finally{await t.cancel()}},Ka=(e,t,a,s)=>{const r=po(e,t);let i=0,o,n=d=>{o||(o=!0,s&&s(d))};return new ReadableStream({async pull(d){try{const{done:l,value:u}=await r.next();if(l){n(),d.close();return}let m=u.byteLength;if(a){let R=i+=m;a(R)}d.enqueue(new Uint8Array(u))}catch(l){throw n(l),l}},cancel(d){return n(d),r.return()}},{highWaterMark:2})},vt=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Cs=vt&&typeof ReadableStream=="function",ho=vt&&(typeof TextEncoder=="function"?(e=>t=>e.encode(t))(new TextEncoder):async e=>new Uint8Array(await new Response(e).arrayBuffer())),vs=(e,...t)=>{try{return!!e(...t)}catch{return!1}},fo=Cs&&vs(()=>{let e=!1;const t=new Request(U.origin,{body:new ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type");return e&&!t}),Za=64*1024,na=Cs&&vs(()=>c.isReadableStream(new Response("").body)),Bt={stream:na&&(e=>e.body)};vt&&(e=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!Bt[t]&&(Bt[t]=c.isFunction(e[t])?a=>a[t]():(a,s)=>{throw new E(`Response type '${t}' is not supported`,E.ERR_NOT_SUPPORT,s)})})})(new Response);const _o=async e=>{if(e==null)return 0;if(c.isBlob(e))return e.size;if(c.isSpecCompliantForm(e))return(await new Request(U.origin,{method:"POST",body:e}).arrayBuffer()).byteLength;if(c.isArrayBufferView(e)||c.isArrayBuffer(e))return e.byteLength;if(c.isURLSearchParams(e)&&(e=e+""),c.isString(e))return(await ho(e)).byteLength},So=async(e,t)=>{const a=c.toFiniteNumber(e.getContentLength());return a??_o(t)},ko=vt&&(async e=>{let{url:t,method:a,data:s,signal:r,cancelToken:i,timeout:o,onDownloadProgress:n,onUploadProgress:d,responseType:l,headers:u,withCredentials:m="same-origin",fetchOptions:R}=xs(e);l=l?(l+"").toLowerCase():"text";let b=co([r,i&&i.toAbortSignal()],o),h;const B=b&&b.unsubscribe&&(()=>{b.unsubscribe()});let S;try{if(d&&fo&&a!=="get"&&a!=="head"&&(S=await So(u,s))!==0){let k=new Request(t,{method:"POST",body:s,duplex:"half"}),P;if(c.isFormData(s)&&(P=k.headers.get("content-type"))&&u.setContentType(P),k.body){const[se,J]=Va(S,Tt(Ga(d)));s=Ka(k.body,Za,se,J)}}c.isString(m)||(m=m?"include":"omit");const O="credentials"in Request.prototype;h=new Request(t,{...R,signal:b,method:a.toUpperCase(),headers:u.normalize().toJSON(),body:s,duplex:"half",credentials:O?m:void 0});let v=await fetch(h);const W=na&&(l==="stream"||l==="response");if(na&&(n||W&&B)){const k={};["status","statusText","headers"].forEach(Ce=>{k[Ce]=v[Ce]});const P=c.toFiniteNumber(v.headers.get("content-length")),[se,J]=n&&Va(P,Tt(Ga(n),!0))||[];v=new Response(Ka(v.body,Za,se,()=>{J&&J(),B&&B()}),k)}l=l||"text";let $=await Bt[c.findKey(Bt,l)||"text"](v,e);return!W&&B&&B(),await new Promise((k,P)=>{Ns(k,P,{data:$,headers:V.from(v.headers),status:v.status,statusText:v.statusText,config:e,request:h})})}catch(O){throw B&&B(),O&&O.name==="TypeError"&&/fetch/i.test(O.message)?Object.assign(new E("Network Error",E.ERR_NETWORK,e,h),{cause:O.cause||O}):E.from(O,O&&O.code,e,h)}}),la={http:Ci,xhr:lo,fetch:ko};c.forEach(la,(e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch{}Object.defineProperty(e,"adapterName",{value:t})}});const Xa=e=>`- ${e}`,To=e=>c.isFunction(e)||e===null||e===!1,Ws={getAdapter:e=>{e=c.isArray(e)?e:[e];const{length:t}=e;let a,s;const r={};for(let i=0;i<t;i++){a=e[i];let o;if(s=a,!To(a)&&(s=la[(o=String(a)).toLowerCase()],s===void 0))throw new E(`Unknown adapter '${o}'`);if(s)break;r[o||"#"+i]=s}if(!s){const i=Object.entries(r).map(([n,d])=>`adapter ${n} `+(d===!1?"is not supported by the environment":"is not available in the build"));let o=t?i.length>1?`since :
`+i.map(Xa).join(`
`):" "+Xa(i[0]):"as no adapter specified";throw new E("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return s},adapters:la};function $t(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Fe(null,e)}function Qa(e){return $t(e),e.headers=V.from(e.headers),e.data=Gt.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),Ws.getAdapter(e.adapter||st.adapter)(e).then(function(s){return $t(e),s.data=Gt.call(e,e.transformResponse,s),s.headers=V.from(s.headers),s},function(s){return bs(s)||($t(e),s&&s.response&&(s.response.data=Gt.call(e,e.transformResponse,s.response),s.response.headers=V.from(s.response.headers))),Promise.reject(s)})}const Ps="1.8.3",Wt={};["object","boolean","number","function","string","symbol"].forEach((e,t)=>{Wt[e]=function(s){return typeof s===e||"a"+(t<1?"n ":" ")+e}});const es={};Wt.transitional=function(t,a,s){function r(i,o){return"[Axios v"+Ps+"] Transitional option '"+i+"'"+o+(s?". "+s:"")}return(i,o,n)=>{if(t===!1)throw new E(r(o," has been removed"+(a?" in "+a:"")),E.ERR_DEPRECATED);return a&&!es[o]&&(es[o]=!0,console.warn(r(o," has been deprecated since v"+a+" and will be removed in the near future"))),t?t(i,o,n):!0}};Wt.spelling=function(t){return(a,s)=>(console.warn(`${s} is likely a misspelling of ${t}`),!0)};function Bo(e,t,a){if(typeof e!="object")throw new E("options must be an object",E.ERR_BAD_OPTION_VALUE);const s=Object.keys(e);let r=s.length;for(;r-- >0;){const i=s[r],o=t[i];if(o){const n=e[i],d=n===void 0||o(n,i,e);if(d!==!0)throw new E("option "+i+" must be "+d,E.ERR_BAD_OPTION_VALUE);continue}if(a!==!0)throw new E("Unknown option "+i,E.ERR_BAD_OPTION)}}const ht={assertOptions:Bo,validators:Wt},ce=ht.validators;let be=class{constructor(t){this.defaults=t,this.interceptors={request:new Ja,response:new Ja}}async request(t,a){try{return await this._request(t,a)}catch(s){if(s instanceof Error){let r={};Error.captureStackTrace?Error.captureStackTrace(r):r=new Error;const i=r.stack?r.stack.replace(/^.+\n/,""):"";try{s.stack?i&&!String(s.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(s.stack+=`
`+i):s.stack=i}catch{}}throw s}}_request(t,a){typeof t=="string"?(a=a||{},a.url=t):a=t||{},a=Oe(this.defaults,a);const{transitional:s,paramsSerializer:r,headers:i}=a;s!==void 0&&ht.assertOptions(s,{silentJSONParsing:ce.transitional(ce.boolean),forcedJSONParsing:ce.transitional(ce.boolean),clarifyTimeoutError:ce.transitional(ce.boolean)},!1),r!=null&&(c.isFunction(r)?a.paramsSerializer={serialize:r}:ht.assertOptions(r,{encode:ce.function,serialize:ce.function},!0)),a.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?a.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:a.allowAbsoluteUrls=!0),ht.assertOptions(a,{baseUrl:ce.spelling("baseURL"),withXsrfToken:ce.spelling("withXSRFToken")},!0),a.method=(a.method||this.defaults.method||"get").toLowerCase();let o=i&&c.merge(i.common,i[a.method]);i&&c.forEach(["delete","get","head","post","put","patch","common"],h=>{delete i[h]}),a.headers=V.concat(o,i);const n=[];let d=!0;this.interceptors.request.forEach(function(B){typeof B.runWhen=="function"&&B.runWhen(a)===!1||(d=d&&B.synchronous,n.unshift(B.fulfilled,B.rejected))});const l=[];this.interceptors.response.forEach(function(B){l.push(B.fulfilled,B.rejected)});let u,m=0,R;if(!d){const h=[Qa.bind(this),void 0];for(h.unshift.apply(h,n),h.push.apply(h,l),R=h.length,u=Promise.resolve(a);m<R;)u=u.then(h[m++],h[m++]);return u}R=n.length;let b=a;for(m=0;m<R;){const h=n[m++],B=n[m++];try{b=h(b)}catch(S){B.call(this,S);break}}try{u=Qa.call(this,b)}catch(h){return Promise.reject(h)}for(m=0,R=l.length;m<R;)u=u.then(l[m++],l[m++]);return u}getUri(t){t=Oe(this.defaults,t);const a=Os(t.baseURL,t.url,t.allowAbsoluteUrls);return As(a,t.params,t.paramsSerializer)}};c.forEach(["delete","get","head","options"],function(t){be.prototype[t]=function(a,s){return this.request(Oe(s||{},{method:t,url:a,data:(s||{}).data}))}});c.forEach(["post","put","patch"],function(t){function a(s){return function(i,o,n){return this.request(Oe(n||{},{method:t,headers:s?{"Content-Type":"multipart/form-data"}:{},url:i,data:o}))}}be.prototype[t]=a(),be.prototype[t+"Form"]=a(!0)});let Eo=class Ds{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let a;this.promise=new Promise(function(i){a=i});const s=this;this.promise.then(r=>{if(!s._listeners)return;let i=s._listeners.length;for(;i-- >0;)s._listeners[i](r);s._listeners=null}),this.promise.then=r=>{let i;const o=new Promise(n=>{s.subscribe(n),i=n}).then(r);return o.cancel=function(){s.unsubscribe(i)},o},t(function(i,o,n){s.reason||(s.reason=new Fe(i,o,n),a(s.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;const a=this._listeners.indexOf(t);a!==-1&&this._listeners.splice(a,1)}toAbortSignal(){const t=new AbortController,a=s=>{t.abort(s)};return this.subscribe(a),t.signal.unsubscribe=()=>this.unsubscribe(a),t.signal}static source(){let t;return{token:new Ds(function(r){t=r}),cancel:t}}};function Ro(e){return function(a){return e.apply(null,a)}}function wo(e){return c.isObject(e)&&e.isAxiosError===!0}const ca={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(ca).forEach(([e,t])=>{ca[t]=e});function Hs(e){const t=new be(e),a=hs(be.prototype.request,t);return c.extend(a,be.prototype,t,{allOwnKeys:!0}),c.extend(a,t,null,{allOwnKeys:!0}),a.create=function(r){return Hs(Oe(e,r))},a}const H=Hs(st);H.Axios=be;H.CanceledError=Fe;H.CancelToken=Eo;H.isCancel=bs;H.VERSION=Ps;H.toFormData=Ct;H.AxiosError=E;H.Cancel=H.CanceledError;H.all=function(t){return Promise.all(t)};H.spread=Ro;H.isAxiosError=wo;H.mergeConfig=Oe;H.AxiosHeaders=V;H.formToJSON=e=>ys(c.isHTMLForm(e)?new FormData(e):e);H.getAdapter=Ws.getAdapter;H.HttpStatusCode=ca;H.default=H;const{Axios:R0,AxiosError:w0,CanceledError:g0,isCancel:A0,CancelToken:L0,VERSION:y0,all:b0,Cancel:N0,isAxiosError:O0,spread:x0,toFormData:C0,AxiosHeaders:v0,HttpStatusCode:W0,formToJSON:P0,getAdapter:D0,mergeConfig:H0}=H;//! moment.js
//! version : 2.29.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var Is;function f(){return Is.apply(null,arguments)}function go(e){Is=e}function ie(e){return e instanceof Array||Object.prototype.toString.call(e)==="[object Array]"}function Ne(e){return e!=null&&Object.prototype.toString.call(e)==="[object Object]"}function L(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function Ba(e){if(Object.getOwnPropertyNames)return Object.getOwnPropertyNames(e).length===0;var t;for(t in e)if(L(e,t))return!1;return!0}function j(e){return e===void 0}function Te(e){return typeof e=="number"||Object.prototype.toString.call(e)==="[object Number]"}function rt(e){return e instanceof Date||Object.prototype.toString.call(e)==="[object Date]"}function Ms(e,t){var a=[],s,r=e.length;for(s=0;s<r;++s)a.push(t(e[s],s));return a}function Re(e,t){for(var a in t)L(t,a)&&(e[a]=t[a]);return L(t,"toString")&&(e.toString=t.toString),L(t,"valueOf")&&(e.valueOf=t.valueOf),e}function pe(e,t,a,s){return cr(e,t,a,s,!0).utc()}function Ao(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function w(e){return e._pf==null&&(e._pf=Ao()),e._pf}var da;Array.prototype.some?da=Array.prototype.some:da=function(e){var t=Object(this),a=t.length>>>0,s;for(s=0;s<a;s++)if(s in t&&e.call(this,t[s],s,t))return!0;return!1};function Ea(e){if(e._isValid==null){var t=w(e),a=da.call(t.parsedDateParts,function(r){return r!=null}),s=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidEra&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&a);if(e._strict&&(s=s&&t.charsLeftOver===0&&t.unusedTokens.length===0&&t.bigHour===void 0),Object.isFrozen==null||!Object.isFrozen(e))e._isValid=s;else return s}return e._isValid}function Pt(e){var t=pe(NaN);return e!=null?Re(w(t),e):w(t).userInvalidated=!0,t}var ts=f.momentProperties=[],Kt=!1;function Ra(e,t){var a,s,r,i=ts.length;if(j(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),j(t._i)||(e._i=t._i),j(t._f)||(e._f=t._f),j(t._l)||(e._l=t._l),j(t._strict)||(e._strict=t._strict),j(t._tzm)||(e._tzm=t._tzm),j(t._isUTC)||(e._isUTC=t._isUTC),j(t._offset)||(e._offset=t._offset),j(t._pf)||(e._pf=w(t)),j(t._locale)||(e._locale=t._locale),i>0)for(a=0;a<i;a++)s=ts[a],r=t[s],j(r)||(e[s]=r);return e}function it(e){Ra(this,e),this._d=new Date(e._d!=null?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),Kt===!1&&(Kt=!0,f.updateOffset(this),Kt=!1)}function oe(e){return e instanceof it||e!=null&&e._isAMomentObject!=null}function Fs(e){f.suppressDeprecationWarnings===!1&&typeof console<"u"&&console.warn&&console.warn("Deprecation warning: "+e)}function te(e,t){var a=!0;return Re(function(){if(f.deprecationHandler!=null&&f.deprecationHandler(null,e),a){var s=[],r,i,o,n=arguments.length;for(i=0;i<n;i++){if(r="",typeof arguments[i]=="object"){r+=`
[`+i+"] ";for(o in arguments[0])L(arguments[0],o)&&(r+=o+": "+arguments[0][o]+", ");r=r.slice(0,-2)}else r=arguments[i];s.push(r)}Fs(e+`
Arguments: `+Array.prototype.slice.call(s).join("")+`
`+new Error().stack),a=!1}return t.apply(this,arguments)},t)}var as={};function Us(e,t){f.deprecationHandler!=null&&f.deprecationHandler(e,t),as[e]||(Fs(t),as[e]=!0)}f.suppressDeprecationWarnings=!1;f.deprecationHandler=null;function me(e){return typeof Function<"u"&&e instanceof Function||Object.prototype.toString.call(e)==="[object Function]"}function Lo(e){var t,a;for(a in e)L(e,a)&&(t=e[a],me(t)?this[a]=t:this["_"+a]=t);this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}function ua(e,t){var a=Re({},e),s;for(s in t)L(t,s)&&(Ne(e[s])&&Ne(t[s])?(a[s]={},Re(a[s],e[s]),Re(a[s],t[s])):t[s]!=null?a[s]=t[s]:delete a[s]);for(s in e)L(e,s)&&!L(t,s)&&Ne(e[s])&&(a[s]=Re({},a[s]));return a}function wa(e){e!=null&&this.set(e)}var pa;Object.keys?pa=Object.keys:pa=function(e){var t,a=[];for(t in e)L(e,t)&&a.push(t);return a};var yo={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"};function bo(e,t,a){var s=this._calendar[e]||this._calendar.sameElse;return me(s)?s.call(t,a):s}function ue(e,t,a){var s=""+Math.abs(e),r=t-s.length,i=e>=0;return(i?a?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+s}var ga=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,lt=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Zt={},De={};function T(e,t,a,s){var r=s;typeof s=="string"&&(r=function(){return this[s]()}),e&&(De[e]=r),t&&(De[t[0]]=function(){return ue(r.apply(this,arguments),t[1],t[2])}),a&&(De[a]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function No(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function Oo(e){var t=e.match(ga),a,s;for(a=0,s=t.length;a<s;a++)De[t[a]]?t[a]=De[t[a]]:t[a]=No(t[a]);return function(r){var i="",o;for(o=0;o<s;o++)i+=me(t[o])?t[o].call(r,e):t[o];return i}}function ft(e,t){return e.isValid()?(t=qs(t,e.localeData()),Zt[t]=Zt[t]||Oo(t),Zt[t](e)):e.localeData().invalidDate()}function qs(e,t){var a=5;function s(r){return t.longDateFormat(r)||r}for(lt.lastIndex=0;a>=0&&lt.test(e);)e=e.replace(lt,s),lt.lastIndex=0,a-=1;return e}var xo={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};function Co(e){var t=this._longDateFormat[e],a=this._longDateFormat[e.toUpperCase()];return t||!a?t:(this._longDateFormat[e]=a.match(ga).map(function(s){return s==="MMMM"||s==="MM"||s==="DD"||s==="dddd"?s.slice(1):s}).join(""),this._longDateFormat[e])}var vo="Invalid date";function Wo(){return this._invalidDate}var Po="%d",Do=/\d{1,2}/;function Ho(e){return this._ordinal.replace("%d",e)}var Io={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",w:"a week",ww:"%d weeks",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};function Mo(e,t,a,s){var r=this._relativeTime[a];return me(r)?r(e,t,a,s):r.replace(/%d/i,e)}function Fo(e,t){var a=this._relativeTime[e>0?"future":"past"];return me(a)?a(t):a.replace(/%s/i,t)}var $e={};function Y(e,t){var a=e.toLowerCase();$e[a]=$e[a+"s"]=$e[t]=e}function ae(e){return typeof e=="string"?$e[e]||$e[e.toLowerCase()]:void 0}function Aa(e){var t={},a,s;for(s in e)L(e,s)&&(a=ae(s),a&&(t[a]=e[s]));return t}var Ys={};function z(e,t){Ys[e]=t}function Uo(e){var t=[],a;for(a in e)L(e,a)&&t.push({unit:a,priority:Ys[a]});return t.sort(function(s,r){return s.priority-r.priority}),t}function Dt(e){return e%4===0&&e%100!==0||e%400===0}function ee(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function g(e){var t=+e,a=0;return t!==0&&isFinite(t)&&(a=ee(t)),a}function Ue(e,t){return function(a){return a!=null?(zs(this,e,a),f.updateOffset(this,t),this):Et(this,e)}}function Et(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function zs(e,t,a){e.isValid()&&!isNaN(a)&&(t==="FullYear"&&Dt(e.year())&&e.month()===1&&e.date()===29?(a=g(a),e._d["set"+(e._isUTC?"UTC":"")+t](a,e.month(),qt(a,e.month()))):e._d["set"+(e._isUTC?"UTC":"")+t](a))}function qo(e){return e=ae(e),me(this[e])?this[e]():this}function Yo(e,t){if(typeof e=="object"){e=Aa(e);var a=Uo(e),s,r=a.length;for(s=0;s<r;s++)this[a[s].unit](e[a[s].unit])}else if(e=ae(e),me(this[e]))return this[e](t);return this}var Js=/\d/,X=/\d\d/,js=/\d{3}/,La=/\d{4}/,Ht=/[+-]?\d{6}/,C=/\d\d?/,Vs=/\d\d\d\d?/,Gs=/\d\d\d\d\d\d?/,It=/\d{1,3}/,ya=/\d{1,4}/,Mt=/[+-]?\d{1,6}/,qe=/\d+/,Ft=/[+-]?\d+/,zo=/Z|[+-]\d\d:?\d\d/gi,Ut=/Z|[+-]\d\d(?::?\d\d)?/gi,Jo=/[+-]?\d+(\.\d{1,3})?/,ot=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Rt;Rt={};function _(e,t,a){Rt[e]=me(t)?t:function(s,r){return s&&a?a:t}}function jo(e,t){return L(Rt,e)?Rt[e](t._strict,t._locale):new RegExp(Vo(e))}function Vo(e){return K(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(t,a,s,r,i){return a||s||r||i}))}function K(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var ma={};function N(e,t){var a,s=t,r;for(typeof e=="string"&&(e=[e]),Te(t)&&(s=function(i,o){o[t]=g(i)}),r=e.length,a=0;a<r;a++)ma[e[a]]=s}function nt(e,t){N(e,function(a,s,r,i){r._w=r._w||{},t(a,r._w,r,i)})}function Go(e,t,a){t!=null&&L(ma,e)&&ma[e](t,a._a,a,e)}var q=0,_e=1,de=2,F=3,re=4,Se=5,ye=6,$o=7,Ko=8;function Zo(e,t){return(e%t+t)%t}var I;Array.prototype.indexOf?I=Array.prototype.indexOf:I=function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1};function qt(e,t){if(isNaN(e)||isNaN(t))return NaN;var a=Zo(t,12);return e+=(t-a)/12,a===1?Dt(e)?29:28:31-a%7%2}T("M",["MM",2],"Mo",function(){return this.month()+1});T("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)});T("MMMM",0,0,function(e){return this.localeData().months(this,e)});Y("month","M");z("month",8);_("M",C);_("MM",C,X);_("MMM",function(e,t){return t.monthsShortRegex(e)});_("MMMM",function(e,t){return t.monthsRegex(e)});N(["M","MM"],function(e,t){t[_e]=g(e)-1});N(["MMM","MMMM"],function(e,t,a,s){var r=a._locale.monthsParse(e,s,a._strict);r!=null?t[_e]=r:w(a).invalidMonth=e});var Xo="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),$s="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),Ks=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Qo=ot,en=ot;function tn(e,t){return e?ie(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Ks).test(t)?"format":"standalone"][e.month()]:ie(this._months)?this._months:this._months.standalone}function an(e,t){return e?ie(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Ks.test(t)?"format":"standalone"][e.month()]:ie(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function sn(e,t,a){var s,r,i,o=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],s=0;s<12;++s)i=pe([2e3,s]),this._shortMonthsParse[s]=this.monthsShort(i,"").toLocaleLowerCase(),this._longMonthsParse[s]=this.months(i,"").toLocaleLowerCase();return a?t==="MMM"?(r=I.call(this._shortMonthsParse,o),r!==-1?r:null):(r=I.call(this._longMonthsParse,o),r!==-1?r:null):t==="MMM"?(r=I.call(this._shortMonthsParse,o),r!==-1?r:(r=I.call(this._longMonthsParse,o),r!==-1?r:null)):(r=I.call(this._longMonthsParse,o),r!==-1?r:(r=I.call(this._shortMonthsParse,o),r!==-1?r:null))}function rn(e,t,a){var s,r,i;if(this._monthsParseExact)return sn.call(this,e,t,a);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),s=0;s<12;s++){if(r=pe([2e3,s]),a&&!this._longMonthsParse[s]&&(this._longMonthsParse[s]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[s]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),!a&&!this._monthsParse[s]&&(i="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[s]=new RegExp(i.replace(".",""),"i")),a&&t==="MMMM"&&this._longMonthsParse[s].test(e))return s;if(a&&t==="MMM"&&this._shortMonthsParse[s].test(e))return s;if(!a&&this._monthsParse[s].test(e))return s}}function Zs(e,t){var a;if(!e.isValid())return e;if(typeof t=="string"){if(/^\d+$/.test(t))t=g(t);else if(t=e.localeData().monthsParse(t),!Te(t))return e}return a=Math.min(e.date(),qt(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,a),e}function Xs(e){return e!=null?(Zs(this,e),f.updateOffset(this,!0),this):Et(this,"Month")}function on(){return qt(this.year(),this.month())}function nn(e){return this._monthsParseExact?(L(this,"_monthsRegex")||Qs.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(L(this,"_monthsShortRegex")||(this._monthsShortRegex=Qo),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)}function ln(e){return this._monthsParseExact?(L(this,"_monthsRegex")||Qs.call(this),e?this._monthsStrictRegex:this._monthsRegex):(L(this,"_monthsRegex")||(this._monthsRegex=en),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)}function Qs(){function e(o,n){return n.length-o.length}var t=[],a=[],s=[],r,i;for(r=0;r<12;r++)i=pe([2e3,r]),t.push(this.monthsShort(i,"")),a.push(this.months(i,"")),s.push(this.months(i,"")),s.push(this.monthsShort(i,""));for(t.sort(e),a.sort(e),s.sort(e),r=0;r<12;r++)t[r]=K(t[r]),a[r]=K(a[r]);for(r=0;r<24;r++)s[r]=K(s[r]);this._monthsRegex=new RegExp("^("+s.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+t.join("|")+")","i")}T("Y",0,0,function(){var e=this.year();return e<=9999?ue(e,4):"+"+e});T(0,["YY",2],0,function(){return this.year()%100});T(0,["YYYY",4],0,"year");T(0,["YYYYY",5],0,"year");T(0,["YYYYYY",6,!0],0,"year");Y("year","y");z("year",1);_("Y",Ft);_("YY",C,X);_("YYYY",ya,La);_("YYYYY",Mt,Ht);_("YYYYYY",Mt,Ht);N(["YYYYY","YYYYYY"],q);N("YYYY",function(e,t){t[q]=e.length===2?f.parseTwoDigitYear(e):g(e)});N("YY",function(e,t){t[q]=f.parseTwoDigitYear(e)});N("Y",function(e,t){t[q]=parseInt(e,10)});function Ke(e){return Dt(e)?366:365}f.parseTwoDigitYear=function(e){return g(e)+(g(e)>68?1900:2e3)};var er=Ue("FullYear",!0);function cn(){return Dt(this.year())}function dn(e,t,a,s,r,i,o){var n;return e<100&&e>=0?(n=new Date(e+400,t,a,s,r,i,o),isFinite(n.getFullYear())&&n.setFullYear(e)):n=new Date(e,t,a,s,r,i,o),n}function Qe(e){var t,a;return e<100&&e>=0?(a=Array.prototype.slice.call(arguments),a[0]=e+400,t=new Date(Date.UTC.apply(null,a)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)):t=new Date(Date.UTC.apply(null,arguments)),t}function wt(e,t,a){var s=7+t-a,r=(7+Qe(e,0,s).getUTCDay()-t)%7;return-r+s-1}function tr(e,t,a,s,r){var i=(7+a-s)%7,o=wt(e,s,r),n=1+7*(t-1)+i+o,d,l;return n<=0?(d=e-1,l=Ke(d)+n):n>Ke(e)?(d=e+1,l=n-Ke(e)):(d=e,l=n),{year:d,dayOfYear:l}}function et(e,t,a){var s=wt(e.year(),t,a),r=Math.floor((e.dayOfYear()-s-1)/7)+1,i,o;return r<1?(o=e.year()-1,i=r+ke(o,t,a)):r>ke(e.year(),t,a)?(i=r-ke(e.year(),t,a),o=e.year()+1):(o=e.year(),i=r),{week:i,year:o}}function ke(e,t,a){var s=wt(e,t,a),r=wt(e+1,t,a);return(Ke(e)-s+r)/7}T("w",["ww",2],"wo","week");T("W",["WW",2],"Wo","isoWeek");Y("week","w");Y("isoWeek","W");z("week",5);z("isoWeek",5);_("w",C);_("ww",C,X);_("W",C);_("WW",C,X);nt(["w","ww","W","WW"],function(e,t,a,s){t[s.substr(0,1)]=g(e)});function un(e){return et(e,this._week.dow,this._week.doy).week}var pn={dow:0,doy:6};function mn(){return this._week.dow}function hn(){return this._week.doy}function fn(e){var t=this.localeData().week(this);return e==null?t:this.add((e-t)*7,"d")}function _n(e){var t=et(this,1,4).week;return e==null?t:this.add((e-t)*7,"d")}T("d",0,"do","day");T("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)});T("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)});T("dddd",0,0,function(e){return this.localeData().weekdays(this,e)});T("e",0,0,"weekday");T("E",0,0,"isoWeekday");Y("day","d");Y("weekday","e");Y("isoWeekday","E");z("day",11);z("weekday",11);z("isoWeekday",11);_("d",C);_("e",C);_("E",C);_("dd",function(e,t){return t.weekdaysMinRegex(e)});_("ddd",function(e,t){return t.weekdaysShortRegex(e)});_("dddd",function(e,t){return t.weekdaysRegex(e)});nt(["dd","ddd","dddd"],function(e,t,a,s){var r=a._locale.weekdaysParse(e,s,a._strict);r!=null?t.d=r:w(a).invalidWeekday=e});nt(["d","e","E"],function(e,t,a,s){t[s]=g(e)});function Sn(e,t){return typeof e!="string"?e:isNaN(e)?(e=t.weekdaysParse(e),typeof e=="number"?e:null):parseInt(e,10)}function kn(e,t){return typeof e=="string"?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}function ba(e,t){return e.slice(t,7).concat(e.slice(0,t))}var Tn="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),ar="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Bn="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),En=ot,Rn=ot,wn=ot;function gn(e,t){var a=ie(this._weekdays)?this._weekdays:this._weekdays[e&&e!==!0&&this._weekdays.isFormat.test(t)?"format":"standalone"];return e===!0?ba(a,this._week.dow):e?a[e.day()]:a}function An(e){return e===!0?ba(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort}function Ln(e){return e===!0?ba(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin}function yn(e,t,a){var s,r,i,o=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],s=0;s<7;++s)i=pe([2e3,1]).day(s),this._minWeekdaysParse[s]=this.weekdaysMin(i,"").toLocaleLowerCase(),this._shortWeekdaysParse[s]=this.weekdaysShort(i,"").toLocaleLowerCase(),this._weekdaysParse[s]=this.weekdays(i,"").toLocaleLowerCase();return a?t==="dddd"?(r=I.call(this._weekdaysParse,o),r!==-1?r:null):t==="ddd"?(r=I.call(this._shortWeekdaysParse,o),r!==-1?r:null):(r=I.call(this._minWeekdaysParse,o),r!==-1?r:null):t==="dddd"?(r=I.call(this._weekdaysParse,o),r!==-1||(r=I.call(this._shortWeekdaysParse,o),r!==-1)?r:(r=I.call(this._minWeekdaysParse,o),r!==-1?r:null)):t==="ddd"?(r=I.call(this._shortWeekdaysParse,o),r!==-1||(r=I.call(this._weekdaysParse,o),r!==-1)?r:(r=I.call(this._minWeekdaysParse,o),r!==-1?r:null)):(r=I.call(this._minWeekdaysParse,o),r!==-1||(r=I.call(this._weekdaysParse,o),r!==-1)?r:(r=I.call(this._shortWeekdaysParse,o),r!==-1?r:null))}function bn(e,t,a){var s,r,i;if(this._weekdaysParseExact)return yn.call(this,e,t,a);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),s=0;s<7;s++){if(r=pe([2e3,1]).day(s),a&&!this._fullWeekdaysParse[s]&&(this._fullWeekdaysParse[s]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[s]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[s]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[s]||(i="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[s]=new RegExp(i.replace(".",""),"i")),a&&t==="dddd"&&this._fullWeekdaysParse[s].test(e))return s;if(a&&t==="ddd"&&this._shortWeekdaysParse[s].test(e))return s;if(a&&t==="dd"&&this._minWeekdaysParse[s].test(e))return s;if(!a&&this._weekdaysParse[s].test(e))return s}}function Nn(e){if(!this.isValid())return e!=null?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return e!=null?(e=Sn(e,this.localeData()),this.add(e-t,"d")):t}function On(e){if(!this.isValid())return e!=null?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return e==null?t:this.add(e-t,"d")}function xn(e){if(!this.isValid())return e!=null?this:NaN;if(e!=null){var t=kn(e,this.localeData());return this.day(this.day()%7?t:t-7)}else return this.day()||7}function Cn(e){return this._weekdaysParseExact?(L(this,"_weekdaysRegex")||Na.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(L(this,"_weekdaysRegex")||(this._weekdaysRegex=En),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)}function vn(e){return this._weekdaysParseExact?(L(this,"_weekdaysRegex")||Na.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(L(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Rn),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Wn(e){return this._weekdaysParseExact?(L(this,"_weekdaysRegex")||Na.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(L(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=wn),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Na(){function e(u,m){return m.length-u.length}var t=[],a=[],s=[],r=[],i,o,n,d,l;for(i=0;i<7;i++)o=pe([2e3,1]).day(i),n=K(this.weekdaysMin(o,"")),d=K(this.weekdaysShort(o,"")),l=K(this.weekdays(o,"")),t.push(n),a.push(d),s.push(l),r.push(n),r.push(d),r.push(l);t.sort(e),a.sort(e),s.sort(e),r.sort(e),this._weekdaysRegex=new RegExp("^("+r.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+t.join("|")+")","i")}function Oa(){return this.hours()%12||12}function Pn(){return this.hours()||24}T("H",["HH",2],0,"hour");T("h",["hh",2],0,Oa);T("k",["kk",2],0,Pn);T("hmm",0,0,function(){return""+Oa.apply(this)+ue(this.minutes(),2)});T("hmmss",0,0,function(){return""+Oa.apply(this)+ue(this.minutes(),2)+ue(this.seconds(),2)});T("Hmm",0,0,function(){return""+this.hours()+ue(this.minutes(),2)});T("Hmmss",0,0,function(){return""+this.hours()+ue(this.minutes(),2)+ue(this.seconds(),2)});function sr(e,t){T(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}sr("a",!0);sr("A",!1);Y("hour","h");z("hour",13);function rr(e,t){return t._meridiemParse}_("a",rr);_("A",rr);_("H",C);_("h",C);_("k",C);_("HH",C,X);_("hh",C,X);_("kk",C,X);_("hmm",Vs);_("hmmss",Gs);_("Hmm",Vs);_("Hmmss",Gs);N(["H","HH"],F);N(["k","kk"],function(e,t,a){var s=g(e);t[F]=s===24?0:s});N(["a","A"],function(e,t,a){a._isPm=a._locale.isPM(e),a._meridiem=e});N(["h","hh"],function(e,t,a){t[F]=g(e),w(a).bigHour=!0});N("hmm",function(e,t,a){var s=e.length-2;t[F]=g(e.substr(0,s)),t[re]=g(e.substr(s)),w(a).bigHour=!0});N("hmmss",function(e,t,a){var s=e.length-4,r=e.length-2;t[F]=g(e.substr(0,s)),t[re]=g(e.substr(s,2)),t[Se]=g(e.substr(r)),w(a).bigHour=!0});N("Hmm",function(e,t,a){var s=e.length-2;t[F]=g(e.substr(0,s)),t[re]=g(e.substr(s))});N("Hmmss",function(e,t,a){var s=e.length-4,r=e.length-2;t[F]=g(e.substr(0,s)),t[re]=g(e.substr(s,2)),t[Se]=g(e.substr(r))});function Dn(e){return(e+"").toLowerCase().charAt(0)==="p"}var Hn=/[ap]\.?m?\.?/i,In=Ue("Hours",!0);function Mn(e,t,a){return e>11?a?"pm":"PM":a?"am":"AM"}var ir={calendar:yo,longDateFormat:xo,invalidDate:vo,ordinal:Po,dayOfMonthOrdinalParse:Do,relativeTime:Io,months:Xo,monthsShort:$s,week:pn,weekdays:Tn,weekdaysMin:Bn,weekdaysShort:ar,meridiemParse:Hn},D={},ze={},tt;function Fn(e,t){var a,s=Math.min(e.length,t.length);for(a=0;a<s;a+=1)if(e[a]!==t[a])return a;return s}function ss(e){return e&&e.toLowerCase().replace("_","-")}function Un(e){for(var t=0,a,s,r,i;t<e.length;){for(i=ss(e[t]).split("-"),a=i.length,s=ss(e[t+1]),s=s?s.split("-"):null;a>0;){if(r=Yt(i.slice(0,a).join("-")),r)return r;if(s&&s.length>=a&&Fn(i,s)>=a-1)break;a--}t++}return tt}function qn(e){return e.match("^[^/\\\\]*$")!=null}function Yt(e){var t=null,a;if(D[e]===void 0&&typeof kt<"u"&&kt&&kt.exports&&qn(e))try{t=tt._abbr,a=require,a("./locale/"+e),ge(t)}catch{D[e]=null}return D[e]}function ge(e,t){var a;return e&&(j(t)?a=Be(e):a=xa(e,t),a?tt=a:typeof console<"u"&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),tt._abbr}function xa(e,t){if(t!==null){var a,s=ir;if(t.abbr=e,D[e]!=null)Us("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),s=D[e]._config;else if(t.parentLocale!=null)if(D[t.parentLocale]!=null)s=D[t.parentLocale]._config;else if(a=Yt(t.parentLocale),a!=null)s=a._config;else return ze[t.parentLocale]||(ze[t.parentLocale]=[]),ze[t.parentLocale].push({name:e,config:t}),null;return D[e]=new wa(ua(s,t)),ze[e]&&ze[e].forEach(function(r){xa(r.name,r.config)}),ge(e),D[e]}else return delete D[e],null}function Yn(e,t){if(t!=null){var a,s,r=ir;D[e]!=null&&D[e].parentLocale!=null?D[e].set(ua(D[e]._config,t)):(s=Yt(e),s!=null&&(r=s._config),t=ua(r,t),s==null&&(t.abbr=e),a=new wa(t),a.parentLocale=D[e],D[e]=a),ge(e)}else D[e]!=null&&(D[e].parentLocale!=null?(D[e]=D[e].parentLocale,e===ge()&&ge(e)):D[e]!=null&&delete D[e]);return D[e]}function Be(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return tt;if(!ie(e)){if(t=Yt(e),t)return t;e=[e]}return Un(e)}function zn(){return pa(D)}function Ca(e){var t,a=e._a;return a&&w(e).overflow===-2&&(t=a[_e]<0||a[_e]>11?_e:a[de]<1||a[de]>qt(a[q],a[_e])?de:a[F]<0||a[F]>24||a[F]===24&&(a[re]!==0||a[Se]!==0||a[ye]!==0)?F:a[re]<0||a[re]>59?re:a[Se]<0||a[Se]>59?Se:a[ye]<0||a[ye]>999?ye:-1,w(e)._overflowDayOfYear&&(t<q||t>de)&&(t=de),w(e)._overflowWeeks&&t===-1&&(t=$o),w(e)._overflowWeekday&&t===-1&&(t=Ko),w(e).overflow=t),e}var Jn=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,jn=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Vn=/Z|[+-]\d\d(?::?\d\d)?/,ct=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/],["YYYYMM",/\d{6}/,!1],["YYYY",/\d{4}/,!1]],Xt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Gn=/^\/?Date\((-?\d+)/i,$n=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Kn={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function or(e){var t,a,s=e._i,r=Jn.exec(s)||jn.exec(s),i,o,n,d,l=ct.length,u=Xt.length;if(r){for(w(e).iso=!0,t=0,a=l;t<a;t++)if(ct[t][1].exec(r[1])){o=ct[t][0],i=ct[t][2]!==!1;break}if(o==null){e._isValid=!1;return}if(r[3]){for(t=0,a=u;t<a;t++)if(Xt[t][1].exec(r[3])){n=(r[2]||" ")+Xt[t][0];break}if(n==null){e._isValid=!1;return}}if(!i&&n!=null){e._isValid=!1;return}if(r[4])if(Vn.exec(r[4]))d="Z";else{e._isValid=!1;return}e._f=o+(n||"")+(d||""),Wa(e)}else e._isValid=!1}function Zn(e,t,a,s,r,i){var o=[Xn(e),$s.indexOf(t),parseInt(a,10),parseInt(s,10),parseInt(r,10)];return i&&o.push(parseInt(i,10)),o}function Xn(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}function Qn(e){return e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}function el(e,t,a){if(e){var s=ar.indexOf(e),r=new Date(t[0],t[1],t[2]).getDay();if(s!==r)return w(a).weekdayMismatch=!0,a._isValid=!1,!1}return!0}function tl(e,t,a){if(e)return Kn[e];if(t)return 0;var s=parseInt(a,10),r=s%100,i=(s-r)/100;return i*60+r}function nr(e){var t=$n.exec(Qn(e._i)),a;if(t){if(a=Zn(t[4],t[3],t[2],t[5],t[6],t[7]),!el(t[1],a,e))return;e._a=a,e._tzm=tl(t[8],t[9],t[10]),e._d=Qe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),w(e).rfc2822=!0}else e._isValid=!1}function al(e){var t=Gn.exec(e._i);if(t!==null){e._d=new Date(+t[1]);return}if(or(e),e._isValid===!1)delete e._isValid;else return;if(nr(e),e._isValid===!1)delete e._isValid;else return;e._strict?e._isValid=!1:f.createFromInputFallback(e)}f.createFromInputFallback=te("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))});function We(e,t,a){return e??t??a}function sl(e){var t=new Date(f.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}function va(e){var t,a,s=[],r,i,o;if(!e._d){for(r=sl(e),e._w&&e._a[de]==null&&e._a[_e]==null&&rl(e),e._dayOfYear!=null&&(o=We(e._a[q],r[q]),(e._dayOfYear>Ke(o)||e._dayOfYear===0)&&(w(e)._overflowDayOfYear=!0),a=Qe(o,0,e._dayOfYear),e._a[_e]=a.getUTCMonth(),e._a[de]=a.getUTCDate()),t=0;t<3&&e._a[t]==null;++t)e._a[t]=s[t]=r[t];for(;t<7;t++)e._a[t]=s[t]=e._a[t]==null?t===2?1:0:e._a[t];e._a[F]===24&&e._a[re]===0&&e._a[Se]===0&&e._a[ye]===0&&(e._nextDay=!0,e._a[F]=0),e._d=(e._useUTC?Qe:dn).apply(null,s),i=e._useUTC?e._d.getUTCDay():e._d.getDay(),e._tzm!=null&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[F]=24),e._w&&typeof e._w.d<"u"&&e._w.d!==i&&(w(e).weekdayMismatch=!0)}}function rl(e){var t,a,s,r,i,o,n,d,l;t=e._w,t.GG!=null||t.W!=null||t.E!=null?(i=1,o=4,a=We(t.GG,e._a[q],et(x(),1,4).year),s=We(t.W,1),r=We(t.E,1),(r<1||r>7)&&(d=!0)):(i=e._locale._week.dow,o=e._locale._week.doy,l=et(x(),i,o),a=We(t.gg,e._a[q],l.year),s=We(t.w,l.week),t.d!=null?(r=t.d,(r<0||r>6)&&(d=!0)):t.e!=null?(r=t.e+i,(t.e<0||t.e>6)&&(d=!0)):r=i),s<1||s>ke(a,i,o)?w(e)._overflowWeeks=!0:d!=null?w(e)._overflowWeekday=!0:(n=tr(a,s,r,i,o),e._a[q]=n.year,e._dayOfYear=n.dayOfYear)}f.ISO_8601=function(){};f.RFC_2822=function(){};function Wa(e){if(e._f===f.ISO_8601){or(e);return}if(e._f===f.RFC_2822){nr(e);return}e._a=[],w(e).empty=!0;var t=""+e._i,a,s,r,i,o,n=t.length,d=0,l,u;for(r=qs(e._f,e._locale).match(ga)||[],u=r.length,a=0;a<u;a++)i=r[a],s=(t.match(jo(i,e))||[])[0],s&&(o=t.substr(0,t.indexOf(s)),o.length>0&&w(e).unusedInput.push(o),t=t.slice(t.indexOf(s)+s.length),d+=s.length),De[i]?(s?w(e).empty=!1:w(e).unusedTokens.push(i),Go(i,s,e)):e._strict&&!s&&w(e).unusedTokens.push(i);w(e).charsLeftOver=n-d,t.length>0&&w(e).unusedInput.push(t),e._a[F]<=12&&w(e).bigHour===!0&&e._a[F]>0&&(w(e).bigHour=void 0),w(e).parsedDateParts=e._a.slice(0),w(e).meridiem=e._meridiem,e._a[F]=il(e._locale,e._a[F],e._meridiem),l=w(e).era,l!==null&&(e._a[q]=e._locale.erasConvertYear(l,e._a[q])),va(e),Ca(e)}function il(e,t,a){var s;return a==null?t:e.meridiemHour!=null?e.meridiemHour(t,a):(e.isPM!=null&&(s=e.isPM(a),s&&t<12&&(t+=12),!s&&t===12&&(t=0)),t)}function ol(e){var t,a,s,r,i,o,n=!1,d=e._f.length;if(d===0){w(e).invalidFormat=!0,e._d=new Date(NaN);return}for(r=0;r<d;r++)i=0,o=!1,t=Ra({},e),e._useUTC!=null&&(t._useUTC=e._useUTC),t._f=e._f[r],Wa(t),Ea(t)&&(o=!0),i+=w(t).charsLeftOver,i+=w(t).unusedTokens.length*10,w(t).score=i,n?i<s&&(s=i,a=t):(s==null||i<s||o)&&(s=i,a=t,o&&(n=!0));Re(e,a||t)}function nl(e){if(!e._d){var t=Aa(e._i),a=t.day===void 0?t.date:t.day;e._a=Ms([t.year,t.month,a,t.hour,t.minute,t.second,t.millisecond],function(s){return s&&parseInt(s,10)}),va(e)}}function ll(e){var t=new it(Ca(lr(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}function lr(e){var t=e._i,a=e._f;return e._locale=e._locale||Be(e._l),t===null||a===void 0&&t===""?Pt({nullInput:!0}):(typeof t=="string"&&(e._i=t=e._locale.preparse(t)),oe(t)?new it(Ca(t)):(rt(t)?e._d=t:ie(a)?ol(e):a?Wa(e):cl(e),Ea(e)||(e._d=null),e))}function cl(e){var t=e._i;j(t)?e._d=new Date(f.now()):rt(t)?e._d=new Date(t.valueOf()):typeof t=="string"?al(e):ie(t)?(e._a=Ms(t.slice(0),function(a){return parseInt(a,10)}),va(e)):Ne(t)?nl(e):Te(t)?e._d=new Date(t):f.createFromInputFallback(e)}function cr(e,t,a,s,r){var i={};return(t===!0||t===!1)&&(s=t,t=void 0),(a===!0||a===!1)&&(s=a,a=void 0),(Ne(e)&&Ba(e)||ie(e)&&e.length===0)&&(e=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=r,i._l=a,i._i=e,i._f=t,i._strict=s,ll(i)}function x(e,t,a,s){return cr(e,t,a,s,!1)}var dl=te("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=x.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:Pt()}),ul=te("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=x.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:Pt()});function dr(e,t){var a,s;if(t.length===1&&ie(t[0])&&(t=t[0]),!t.length)return x();for(a=t[0],s=1;s<t.length;++s)(!t[s].isValid()||t[s][e](a))&&(a=t[s]);return a}function pl(){var e=[].slice.call(arguments,0);return dr("isBefore",e)}function ml(){var e=[].slice.call(arguments,0);return dr("isAfter",e)}var hl=function(){return Date.now?Date.now():+new Date},Je=["year","quarter","month","week","day","hour","minute","second","millisecond"];function fl(e){var t,a=!1,s,r=Je.length;for(t in e)if(L(e,t)&&!(I.call(Je,t)!==-1&&(e[t]==null||!isNaN(e[t]))))return!1;for(s=0;s<r;++s)if(e[Je[s]]){if(a)return!1;parseFloat(e[Je[s]])!==g(e[Je[s]])&&(a=!0)}return!0}function _l(){return this._isValid}function Sl(){return le(NaN)}function zt(e){var t=Aa(e),a=t.year||0,s=t.quarter||0,r=t.month||0,i=t.week||t.isoWeek||0,o=t.day||0,n=t.hour||0,d=t.minute||0,l=t.second||0,u=t.millisecond||0;this._isValid=fl(t),this._milliseconds=+u+l*1e3+d*6e4+n*1e3*60*60,this._days=+o+i*7,this._months=+r+s*3+a*12,this._data={},this._locale=Be(),this._bubble()}function _t(e){return e instanceof zt}function ha(e){return e<0?Math.round(-1*e)*-1:Math.round(e)}function kl(e,t,a){var s=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),i=0,o;for(o=0;o<s;o++)g(e[o])!==g(t[o])&&i++;return i+r}function ur(e,t){T(e,0,0,function(){var a=this.utcOffset(),s="+";return a<0&&(a=-a,s="-"),s+ue(~~(a/60),2)+t+ue(~~a%60,2)})}ur("Z",":");ur("ZZ","");_("Z",Ut);_("ZZ",Ut);N(["Z","ZZ"],function(e,t,a){a._useUTC=!0,a._tzm=Pa(Ut,e)});var Tl=/([\+\-]|\d\d)/gi;function Pa(e,t){var a=(t||"").match(e),s,r,i;return a===null?null:(s=a[a.length-1]||[],r=(s+"").match(Tl)||["-",0,0],i=+(r[1]*60)+g(r[2]),i===0?0:r[0]==="+"?i:-i)}function Da(e,t){var a,s;return t._isUTC?(a=t.clone(),s=(oe(e)||rt(e)?e.valueOf():x(e).valueOf())-a.valueOf(),a._d.setTime(a._d.valueOf()+s),f.updateOffset(a,!1),a):x(e).local()}function fa(e){return-Math.round(e._d.getTimezoneOffset())}f.updateOffset=function(){};function Bl(e,t,a){var s=this._offset||0,r;if(!this.isValid())return e!=null?this:NaN;if(e!=null){if(typeof e=="string"){if(e=Pa(Ut,e),e===null)return this}else Math.abs(e)<16&&!a&&(e=e*60);return!this._isUTC&&t&&(r=fa(this)),this._offset=e,this._isUTC=!0,r!=null&&this.add(r,"m"),s!==e&&(!t||this._changeInProgress?hr(this,le(e-s,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,f.updateOffset(this,!0),this._changeInProgress=null)),this}else return this._isUTC?s:fa(this)}function El(e,t){return e!=null?(typeof e!="string"&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}function Rl(e){return this.utcOffset(0,e)}function wl(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(fa(this),"m")),this}function gl(){if(this._tzm!=null)this.utcOffset(this._tzm,!1,!0);else if(typeof this._i=="string"){var e=Pa(zo,this._i);e!=null?this.utcOffset(e):this.utcOffset(0,!0)}return this}function Al(e){return this.isValid()?(e=e?x(e).utcOffset():0,(this.utcOffset()-e)%60===0):!1}function Ll(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function yl(){if(!j(this._isDSTShifted))return this._isDSTShifted;var e={},t;return Ra(e,this),e=lr(e),e._a?(t=e._isUTC?pe(e._a):x(e._a),this._isDSTShifted=this.isValid()&&kl(e._a,t.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}function bl(){return this.isValid()?!this._isUTC:!1}function Nl(){return this.isValid()?this._isUTC:!1}function pr(){return this.isValid()?this._isUTC&&this._offset===0:!1}var Ol=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,xl=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function le(e,t){var a=e,s=null,r,i,o;return _t(e)?a={ms:e._milliseconds,d:e._days,M:e._months}:Te(e)||!isNaN(+e)?(a={},t?a[t]=+e:a.milliseconds=+e):(s=Ol.exec(e))?(r=s[1]==="-"?-1:1,a={y:0,d:g(s[de])*r,h:g(s[F])*r,m:g(s[re])*r,s:g(s[Se])*r,ms:g(ha(s[ye]*1e3))*r}):(s=xl.exec(e))?(r=s[1]==="-"?-1:1,a={y:Ae(s[2],r),M:Ae(s[3],r),w:Ae(s[4],r),d:Ae(s[5],r),h:Ae(s[6],r),m:Ae(s[7],r),s:Ae(s[8],r)}):a==null?a={}:typeof a=="object"&&("from"in a||"to"in a)&&(o=Cl(x(a.from),x(a.to)),a={},a.ms=o.milliseconds,a.M=o.months),i=new zt(a),_t(e)&&L(e,"_locale")&&(i._locale=e._locale),_t(e)&&L(e,"_isValid")&&(i._isValid=e._isValid),i}le.fn=zt.prototype;le.invalid=Sl;function Ae(e,t){var a=e&&parseFloat(e.replace(",","."));return(isNaN(a)?0:a)*t}function rs(e,t){var a={};return a.months=t.month()-e.month()+(t.year()-e.year())*12,e.clone().add(a.months,"M").isAfter(t)&&--a.months,a.milliseconds=+t-+e.clone().add(a.months,"M"),a}function Cl(e,t){var a;return e.isValid()&&t.isValid()?(t=Da(t,e),e.isBefore(t)?a=rs(e,t):(a=rs(t,e),a.milliseconds=-a.milliseconds,a.months=-a.months),a):{milliseconds:0,months:0}}function mr(e,t){return function(a,s){var r,i;return s!==null&&!isNaN(+s)&&(Us(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),i=a,a=s,s=i),r=le(a,s),hr(this,r,e),this}}function hr(e,t,a,s){var r=t._milliseconds,i=ha(t._days),o=ha(t._months);e.isValid()&&(s=s??!0,o&&Zs(e,Et(e,"Month")+o*a),i&&zs(e,"Date",Et(e,"Date")+i*a),r&&e._d.setTime(e._d.valueOf()+r*a),s&&f.updateOffset(e,i||o))}var vl=mr(1,"add"),Wl=mr(-1,"subtract");function fr(e){return typeof e=="string"||e instanceof String}function Pl(e){return oe(e)||rt(e)||fr(e)||Te(e)||Hl(e)||Dl(e)||e===null||e===void 0}function Dl(e){var t=Ne(e)&&!Ba(e),a=!1,s=["years","year","y","months","month","M","days","day","d","dates","date","D","hours","hour","h","minutes","minute","m","seconds","second","s","milliseconds","millisecond","ms"],r,i,o=s.length;for(r=0;r<o;r+=1)i=s[r],a=a||L(e,i);return t&&a}function Hl(e){var t=ie(e),a=!1;return t&&(a=e.filter(function(s){return!Te(s)&&fr(e)}).length===0),t&&a}function Il(e){var t=Ne(e)&&!Ba(e),a=!1,s=["sameDay","nextDay","lastDay","nextWeek","lastWeek","sameElse"],r,i;for(r=0;r<s.length;r+=1)i=s[r],a=a||L(e,i);return t&&a}function Ml(e,t){var a=e.diff(t,"days",!0);return a<-6?"sameElse":a<-1?"lastWeek":a<0?"lastDay":a<1?"sameDay":a<2?"nextDay":a<7?"nextWeek":"sameElse"}function Fl(e,t){arguments.length===1&&(arguments[0]?Pl(arguments[0])?(e=arguments[0],t=void 0):Il(arguments[0])&&(t=arguments[0],e=void 0):(e=void 0,t=void 0));var a=e||x(),s=Da(a,this).startOf("day"),r=f.calendarFormat(this,s)||"sameElse",i=t&&(me(t[r])?t[r].call(this,a):t[r]);return this.format(i||this.localeData().calendar(r,this,x(a)))}function Ul(){return new it(this)}function ql(e,t){var a=oe(e)?e:x(e);return this.isValid()&&a.isValid()?(t=ae(t)||"millisecond",t==="millisecond"?this.valueOf()>a.valueOf():a.valueOf()<this.clone().startOf(t).valueOf()):!1}function Yl(e,t){var a=oe(e)?e:x(e);return this.isValid()&&a.isValid()?(t=ae(t)||"millisecond",t==="millisecond"?this.valueOf()<a.valueOf():this.clone().endOf(t).valueOf()<a.valueOf()):!1}function zl(e,t,a,s){var r=oe(e)?e:x(e),i=oe(t)?t:x(t);return this.isValid()&&r.isValid()&&i.isValid()?(s=s||"()",(s[0]==="("?this.isAfter(r,a):!this.isBefore(r,a))&&(s[1]===")"?this.isBefore(i,a):!this.isAfter(i,a))):!1}function Jl(e,t){var a=oe(e)?e:x(e),s;return this.isValid()&&a.isValid()?(t=ae(t)||"millisecond",t==="millisecond"?this.valueOf()===a.valueOf():(s=a.valueOf(),this.clone().startOf(t).valueOf()<=s&&s<=this.clone().endOf(t).valueOf())):!1}function jl(e,t){return this.isSame(e,t)||this.isAfter(e,t)}function Vl(e,t){return this.isSame(e,t)||this.isBefore(e,t)}function Gl(e,t,a){var s,r,i;if(!this.isValid())return NaN;if(s=Da(e,this),!s.isValid())return NaN;switch(r=(s.utcOffset()-this.utcOffset())*6e4,t=ae(t),t){case"year":i=St(this,s)/12;break;case"month":i=St(this,s);break;case"quarter":i=St(this,s)/3;break;case"second":i=(this-s)/1e3;break;case"minute":i=(this-s)/6e4;break;case"hour":i=(this-s)/36e5;break;case"day":i=(this-s-r)/864e5;break;case"week":i=(this-s-r)/6048e5;break;default:i=this-s}return a?i:ee(i)}function St(e,t){if(e.date()<t.date())return-St(t,e);var a=(t.year()-e.year())*12+(t.month()-e.month()),s=e.clone().add(a,"months"),r,i;return t-s<0?(r=e.clone().add(a-1,"months"),i=(t-s)/(s-r)):(r=e.clone().add(a+1,"months"),i=(t-s)/(r-s)),-(a+i)||0}f.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";f.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";function $l(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function Kl(e){if(!this.isValid())return null;var t=e!==!0,a=t?this.clone().utc():this;return a.year()<0||a.year()>9999?ft(a,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):me(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+this.utcOffset()*60*1e3).toISOString().replace("Z",ft(a,"Z")):ft(a,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")}function Zl(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="",a,s,r,i;return this.isLocal()||(e=this.utcOffset()===0?"moment.utc":"moment.parseZone",t="Z"),a="["+e+'("]',s=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r="-MM-DD[T]HH:mm:ss.SSS",i=t+'[")]',this.format(a+s+r+i)}function Xl(e){e||(e=this.isUtc()?f.defaultFormatUtc:f.defaultFormat);var t=ft(this,e);return this.localeData().postformat(t)}function Ql(e,t){return this.isValid()&&(oe(e)&&e.isValid()||x(e).isValid())?le({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function ec(e){return this.from(x(),e)}function tc(e,t){return this.isValid()&&(oe(e)&&e.isValid()||x(e).isValid())?le({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function ac(e){return this.to(x(),e)}function _r(e){var t;return e===void 0?this._locale._abbr:(t=Be(e),t!=null&&(this._locale=t),this)}var Sr=te("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return e===void 0?this.localeData():this.locale(e)});function kr(){return this._locale}var gt=1e3,He=60*gt,At=60*He,Tr=(365*400+97)*24*At;function Ie(e,t){return(e%t+t)%t}function Br(e,t,a){return e<100&&e>=0?new Date(e+400,t,a)-Tr:new Date(e,t,a).valueOf()}function Er(e,t,a){return e<100&&e>=0?Date.UTC(e+400,t,a)-Tr:Date.UTC(e,t,a)}function sc(e){var t,a;if(e=ae(e),e===void 0||e==="millisecond"||!this.isValid())return this;switch(a=this._isUTC?Er:Br,e){case"year":t=a(this.year(),0,1);break;case"quarter":t=a(this.year(),this.month()-this.month()%3,1);break;case"month":t=a(this.year(),this.month(),1);break;case"week":t=a(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=a(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=a(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=Ie(t+(this._isUTC?0:this.utcOffset()*He),At);break;case"minute":t=this._d.valueOf(),t-=Ie(t,He);break;case"second":t=this._d.valueOf(),t-=Ie(t,gt);break}return this._d.setTime(t),f.updateOffset(this,!0),this}function rc(e){var t,a;if(e=ae(e),e===void 0||e==="millisecond"||!this.isValid())return this;switch(a=this._isUTC?Er:Br,e){case"year":t=a(this.year()+1,0,1)-1;break;case"quarter":t=a(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=a(this.year(),this.month()+1,1)-1;break;case"week":t=a(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=a(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=a(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=At-Ie(t+(this._isUTC?0:this.utcOffset()*He),At)-1;break;case"minute":t=this._d.valueOf(),t+=He-Ie(t,He)-1;break;case"second":t=this._d.valueOf(),t+=gt-Ie(t,gt)-1;break}return this._d.setTime(t),f.updateOffset(this,!0),this}function ic(){return this._d.valueOf()-(this._offset||0)*6e4}function oc(){return Math.floor(this.valueOf()/1e3)}function nc(){return new Date(this.valueOf())}function lc(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]}function cc(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}}function dc(){return this.isValid()?this.toISOString():null}function uc(){return Ea(this)}function pc(){return Re({},w(this))}function mc(){return w(this).overflow}function hc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}T("N",0,0,"eraAbbr");T("NN",0,0,"eraAbbr");T("NNN",0,0,"eraAbbr");T("NNNN",0,0,"eraName");T("NNNNN",0,0,"eraNarrow");T("y",["y",1],"yo","eraYear");T("y",["yy",2],0,"eraYear");T("y",["yyy",3],0,"eraYear");T("y",["yyyy",4],0,"eraYear");_("N",Ha);_("NN",Ha);_("NNN",Ha);_("NNNN",Ac);_("NNNNN",Lc);N(["N","NN","NNN","NNNN","NNNNN"],function(e,t,a,s){var r=a._locale.erasParse(e,s,a._strict);r?w(a).era=r:w(a).invalidEra=e});_("y",qe);_("yy",qe);_("yyy",qe);_("yyyy",qe);_("yo",yc);N(["y","yy","yyy","yyyy"],q);N(["yo"],function(e,t,a,s){var r;a._locale._eraYearOrdinalRegex&&(r=e.match(a._locale._eraYearOrdinalRegex)),a._locale.eraYearOrdinalParse?t[q]=a._locale.eraYearOrdinalParse(e,r):t[q]=parseInt(e,10)});function fc(e,t){var a,s,r,i=this._eras||Be("en")._eras;for(a=0,s=i.length;a<s;++a){switch(typeof i[a].since){case"string":r=f(i[a].since).startOf("day"),i[a].since=r.valueOf();break}switch(typeof i[a].until){case"undefined":i[a].until=1/0;break;case"string":r=f(i[a].until).startOf("day").valueOf(),i[a].until=r.valueOf();break}}return i}function _c(e,t,a){var s,r,i=this.eras(),o,n,d;for(e=e.toUpperCase(),s=0,r=i.length;s<r;++s)if(o=i[s].name.toUpperCase(),n=i[s].abbr.toUpperCase(),d=i[s].narrow.toUpperCase(),a)switch(t){case"N":case"NN":case"NNN":if(n===e)return i[s];break;case"NNNN":if(o===e)return i[s];break;case"NNNNN":if(d===e)return i[s];break}else if([o,n,d].indexOf(e)>=0)return i[s]}function Sc(e,t){var a=e.since<=e.until?1:-1;return t===void 0?f(e.since).year():f(e.since).year()+(t-e.offset)*a}function kc(){var e,t,a,s=this.localeData().eras();for(e=0,t=s.length;e<t;++e)if(a=this.clone().startOf("day").valueOf(),s[e].since<=a&&a<=s[e].until||s[e].until<=a&&a<=s[e].since)return s[e].name;return""}function Tc(){var e,t,a,s=this.localeData().eras();for(e=0,t=s.length;e<t;++e)if(a=this.clone().startOf("day").valueOf(),s[e].since<=a&&a<=s[e].until||s[e].until<=a&&a<=s[e].since)return s[e].narrow;return""}function Bc(){var e,t,a,s=this.localeData().eras();for(e=0,t=s.length;e<t;++e)if(a=this.clone().startOf("day").valueOf(),s[e].since<=a&&a<=s[e].until||s[e].until<=a&&a<=s[e].since)return s[e].abbr;return""}function Ec(){var e,t,a,s,r=this.localeData().eras();for(e=0,t=r.length;e<t;++e)if(a=r[e].since<=r[e].until?1:-1,s=this.clone().startOf("day").valueOf(),r[e].since<=s&&s<=r[e].until||r[e].until<=s&&s<=r[e].since)return(this.year()-f(r[e].since).year())*a+r[e].offset;return this.year()}function Rc(e){return L(this,"_erasNameRegex")||Ia.call(this),e?this._erasNameRegex:this._erasRegex}function wc(e){return L(this,"_erasAbbrRegex")||Ia.call(this),e?this._erasAbbrRegex:this._erasRegex}function gc(e){return L(this,"_erasNarrowRegex")||Ia.call(this),e?this._erasNarrowRegex:this._erasRegex}function Ha(e,t){return t.erasAbbrRegex(e)}function Ac(e,t){return t.erasNameRegex(e)}function Lc(e,t){return t.erasNarrowRegex(e)}function yc(e,t){return t._eraYearOrdinalRegex||qe}function Ia(){var e=[],t=[],a=[],s=[],r,i,o=this.eras();for(r=0,i=o.length;r<i;++r)t.push(K(o[r].name)),e.push(K(o[r].abbr)),a.push(K(o[r].narrow)),s.push(K(o[r].name)),s.push(K(o[r].abbr)),s.push(K(o[r].narrow));this._erasRegex=new RegExp("^("+s.join("|")+")","i"),this._erasNameRegex=new RegExp("^("+t.join("|")+")","i"),this._erasAbbrRegex=new RegExp("^("+e.join("|")+")","i"),this._erasNarrowRegex=new RegExp("^("+a.join("|")+")","i")}T(0,["gg",2],0,function(){return this.weekYear()%100});T(0,["GG",2],0,function(){return this.isoWeekYear()%100});function Jt(e,t){T(0,[e,e.length],0,t)}Jt("gggg","weekYear");Jt("ggggg","weekYear");Jt("GGGG","isoWeekYear");Jt("GGGGG","isoWeekYear");Y("weekYear","gg");Y("isoWeekYear","GG");z("weekYear",1);z("isoWeekYear",1);_("G",Ft);_("g",Ft);_("GG",C,X);_("gg",C,X);_("GGGG",ya,La);_("gggg",ya,La);_("GGGGG",Mt,Ht);_("ggggg",Mt,Ht);nt(["gggg","ggggg","GGGG","GGGGG"],function(e,t,a,s){t[s.substr(0,2)]=g(e)});nt(["gg","GG"],function(e,t,a,s){t[s]=f.parseTwoDigitYear(e)});function bc(e){return Rr.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Nc(e){return Rr.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)}function Oc(){return ke(this.year(),1,4)}function xc(){return ke(this.isoWeekYear(),1,4)}function Cc(){var e=this.localeData()._week;return ke(this.year(),e.dow,e.doy)}function vc(){var e=this.localeData()._week;return ke(this.weekYear(),e.dow,e.doy)}function Rr(e,t,a,s,r){var i;return e==null?et(this,s,r).year:(i=ke(e,s,r),t>i&&(t=i),Wc.call(this,e,t,a,s,r))}function Wc(e,t,a,s,r){var i=tr(e,t,a,s,r),o=Qe(i.year,0,i.dayOfYear);return this.year(o.getUTCFullYear()),this.month(o.getUTCMonth()),this.date(o.getUTCDate()),this}T("Q",0,"Qo","quarter");Y("quarter","Q");z("quarter",7);_("Q",Js);N("Q",function(e,t){t[_e]=(g(e)-1)*3});function Pc(e){return e==null?Math.ceil((this.month()+1)/3):this.month((e-1)*3+this.month()%3)}T("D",["DD",2],"Do","date");Y("date","D");z("date",9);_("D",C);_("DD",C,X);_("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient});N(["D","DD"],de);N("Do",function(e,t){t[de]=g(e.match(C)[0])});var wr=Ue("Date",!0);T("DDD",["DDDD",3],"DDDo","dayOfYear");Y("dayOfYear","DDD");z("dayOfYear",4);_("DDD",It);_("DDDD",js);N(["DDD","DDDD"],function(e,t,a){a._dayOfYear=g(e)});function Dc(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return e==null?t:this.add(e-t,"d")}T("m",["mm",2],0,"minute");Y("minute","m");z("minute",14);_("m",C);_("mm",C,X);N(["m","mm"],re);var Hc=Ue("Minutes",!1);T("s",["ss",2],0,"second");Y("second","s");z("second",15);_("s",C);_("ss",C,X);N(["s","ss"],Se);var Ic=Ue("Seconds",!1);T("S",0,0,function(){return~~(this.millisecond()/100)});T(0,["SS",2],0,function(){return~~(this.millisecond()/10)});T(0,["SSS",3],0,"millisecond");T(0,["SSSS",4],0,function(){return this.millisecond()*10});T(0,["SSSSS",5],0,function(){return this.millisecond()*100});T(0,["SSSSSS",6],0,function(){return this.millisecond()*1e3});T(0,["SSSSSSS",7],0,function(){return this.millisecond()*1e4});T(0,["SSSSSSSS",8],0,function(){return this.millisecond()*1e5});T(0,["SSSSSSSSS",9],0,function(){return this.millisecond()*1e6});Y("millisecond","ms");z("millisecond",16);_("S",It,Js);_("SS",It,X);_("SSS",It,js);var we,gr;for(we="SSSS";we.length<=9;we+="S")_(we,qe);function Mc(e,t){t[ye]=g(("0."+e)*1e3)}for(we="S";we.length<=9;we+="S")N(we,Mc);gr=Ue("Milliseconds",!1);T("z",0,0,"zoneAbbr");T("zz",0,0,"zoneName");function Fc(){return this._isUTC?"UTC":""}function Uc(){return this._isUTC?"Coordinated Universal Time":""}var p=it.prototype;p.add=vl;p.calendar=Fl;p.clone=Ul;p.diff=Gl;p.endOf=rc;p.format=Xl;p.from=Ql;p.fromNow=ec;p.to=tc;p.toNow=ac;p.get=qo;p.invalidAt=mc;p.isAfter=ql;p.isBefore=Yl;p.isBetween=zl;p.isSame=Jl;p.isSameOrAfter=jl;p.isSameOrBefore=Vl;p.isValid=uc;p.lang=Sr;p.locale=_r;p.localeData=kr;p.max=ul;p.min=dl;p.parsingFlags=pc;p.set=Yo;p.startOf=sc;p.subtract=Wl;p.toArray=lc;p.toObject=cc;p.toDate=nc;p.toISOString=Kl;p.inspect=Zl;typeof Symbol<"u"&&Symbol.for!=null&&(p[Symbol.for("nodejs.util.inspect.custom")]=function(){return"Moment<"+this.format()+">"});p.toJSON=dc;p.toString=$l;p.unix=oc;p.valueOf=ic;p.creationData=hc;p.eraName=kc;p.eraNarrow=Tc;p.eraAbbr=Bc;p.eraYear=Ec;p.year=er;p.isLeapYear=cn;p.weekYear=bc;p.isoWeekYear=Nc;p.quarter=p.quarters=Pc;p.month=Xs;p.daysInMonth=on;p.week=p.weeks=fn;p.isoWeek=p.isoWeeks=_n;p.weeksInYear=Cc;p.weeksInWeekYear=vc;p.isoWeeksInYear=Oc;p.isoWeeksInISOWeekYear=xc;p.date=wr;p.day=p.days=Nn;p.weekday=On;p.isoWeekday=xn;p.dayOfYear=Dc;p.hour=p.hours=In;p.minute=p.minutes=Hc;p.second=p.seconds=Ic;p.millisecond=p.milliseconds=gr;p.utcOffset=Bl;p.utc=Rl;p.local=wl;p.parseZone=gl;p.hasAlignedHourOffset=Al;p.isDST=Ll;p.isLocal=bl;p.isUtcOffset=Nl;p.isUtc=pr;p.isUTC=pr;p.zoneAbbr=Fc;p.zoneName=Uc;p.dates=te("dates accessor is deprecated. Use date instead.",wr);p.months=te("months accessor is deprecated. Use month instead",Xs);p.years=te("years accessor is deprecated. Use year instead",er);p.zone=te("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",El);p.isDSTShifted=te("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",yl);function qc(e){return x(e*1e3)}function Yc(){return x.apply(null,arguments).parseZone()}function Ar(e){return e}var y=wa.prototype;y.calendar=bo;y.longDateFormat=Co;y.invalidDate=Wo;y.ordinal=Ho;y.preparse=Ar;y.postformat=Ar;y.relativeTime=Mo;y.pastFuture=Fo;y.set=Lo;y.eras=fc;y.erasParse=_c;y.erasConvertYear=Sc;y.erasAbbrRegex=wc;y.erasNameRegex=Rc;y.erasNarrowRegex=gc;y.months=tn;y.monthsShort=an;y.monthsParse=rn;y.monthsRegex=ln;y.monthsShortRegex=nn;y.week=un;y.firstDayOfYear=hn;y.firstDayOfWeek=mn;y.weekdays=gn;y.weekdaysMin=Ln;y.weekdaysShort=An;y.weekdaysParse=bn;y.weekdaysRegex=Cn;y.weekdaysShortRegex=vn;y.weekdaysMinRegex=Wn;y.isPM=Dn;y.meridiem=Mn;function Lt(e,t,a,s){var r=Be(),i=pe().set(s,t);return r[a](i,e)}function Lr(e,t,a){if(Te(e)&&(t=e,e=void 0),e=e||"",t!=null)return Lt(e,t,a,"month");var s,r=[];for(s=0;s<12;s++)r[s]=Lt(e,s,a,"month");return r}function Ma(e,t,a,s){typeof e=="boolean"?(Te(t)&&(a=t,t=void 0),t=t||""):(t=e,a=t,e=!1,Te(t)&&(a=t,t=void 0),t=t||"");var r=Be(),i=e?r._week.dow:0,o,n=[];if(a!=null)return Lt(t,(a+i)%7,s,"day");for(o=0;o<7;o++)n[o]=Lt(t,(o+i)%7,s,"day");return n}function zc(e,t){return Lr(e,t,"months")}function Jc(e,t){return Lr(e,t,"monthsShort")}function jc(e,t,a){return Ma(e,t,a,"weekdays")}function Vc(e,t,a){return Ma(e,t,a,"weekdaysShort")}function Gc(e,t,a){return Ma(e,t,a,"weekdaysMin")}ge("en",{eras:[{since:"0001-01-01",until:1/0,offset:1,name:"Anno Domini",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"Before Christ",narrow:"BC",abbr:"BC"}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,a=g(e%100/10)===1?"th":t===1?"st":t===2?"nd":t===3?"rd":"th";return e+a}});f.lang=te("moment.lang is deprecated. Use moment.locale instead.",ge);f.langData=te("moment.langData is deprecated. Use moment.localeData instead.",Be);var he=Math.abs;function $c(){var e=this._data;return this._milliseconds=he(this._milliseconds),this._days=he(this._days),this._months=he(this._months),e.milliseconds=he(e.milliseconds),e.seconds=he(e.seconds),e.minutes=he(e.minutes),e.hours=he(e.hours),e.months=he(e.months),e.years=he(e.years),this}function yr(e,t,a,s){var r=le(t,a);return e._milliseconds+=s*r._milliseconds,e._days+=s*r._days,e._months+=s*r._months,e._bubble()}function Kc(e,t){return yr(this,e,t,1)}function Zc(e,t){return yr(this,e,t,-1)}function is(e){return e<0?Math.floor(e):Math.ceil(e)}function Xc(){var e=this._milliseconds,t=this._days,a=this._months,s=this._data,r,i,o,n,d;return e>=0&&t>=0&&a>=0||e<=0&&t<=0&&a<=0||(e+=is(_a(a)+t)*864e5,t=0,a=0),s.milliseconds=e%1e3,r=ee(e/1e3),s.seconds=r%60,i=ee(r/60),s.minutes=i%60,o=ee(i/60),s.hours=o%24,t+=ee(o/24),d=ee(br(t)),a+=d,t-=is(_a(d)),n=ee(a/12),a%=12,s.days=t,s.months=a,s.years=n,this}function br(e){return e*4800/146097}function _a(e){return e*146097/4800}function Qc(e){if(!this.isValid())return NaN;var t,a,s=this._milliseconds;if(e=ae(e),e==="month"||e==="quarter"||e==="year")switch(t=this._days+s/864e5,a=this._months+br(t),e){case"month":return a;case"quarter":return a/3;case"year":return a/12}else switch(t=this._days+Math.round(_a(this._months)),e){case"week":return t/7+s/6048e5;case"day":return t+s/864e5;case"hour":return t*24+s/36e5;case"minute":return t*1440+s/6e4;case"second":return t*86400+s/1e3;case"millisecond":return Math.floor(t*864e5)+s;default:throw new Error("Unknown unit "+e)}}function ed(){return this.isValid()?this._milliseconds+this._days*864e5+this._months%12*2592e6+g(this._months/12)*31536e6:NaN}function Ee(e){return function(){return this.as(e)}}var td=Ee("ms"),ad=Ee("s"),sd=Ee("m"),rd=Ee("h"),id=Ee("d"),od=Ee("w"),nd=Ee("M"),ld=Ee("Q"),cd=Ee("y");function dd(){return le(this)}function ud(e){return e=ae(e),this.isValid()?this[e+"s"]():NaN}function xe(e){return function(){return this.isValid()?this._data[e]:NaN}}var pd=xe("milliseconds"),md=xe("seconds"),hd=xe("minutes"),fd=xe("hours"),_d=xe("days"),Sd=xe("months"),kd=xe("years");function Td(){return ee(this.days()/7)}var fe=Math.round,Pe={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function Bd(e,t,a,s,r){return r.relativeTime(t||1,!!a,e,s)}function Ed(e,t,a,s){var r=le(e).abs(),i=fe(r.as("s")),o=fe(r.as("m")),n=fe(r.as("h")),d=fe(r.as("d")),l=fe(r.as("M")),u=fe(r.as("w")),m=fe(r.as("y")),R=i<=a.ss&&["s",i]||i<a.s&&["ss",i]||o<=1&&["m"]||o<a.m&&["mm",o]||n<=1&&["h"]||n<a.h&&["hh",n]||d<=1&&["d"]||d<a.d&&["dd",d];return a.w!=null&&(R=R||u<=1&&["w"]||u<a.w&&["ww",u]),R=R||l<=1&&["M"]||l<a.M&&["MM",l]||m<=1&&["y"]||["yy",m],R[2]=t,R[3]=+e>0,R[4]=s,Bd.apply(null,R)}function Rd(e){return e===void 0?fe:typeof e=="function"?(fe=e,!0):!1}function wd(e,t){return Pe[e]===void 0?!1:t===void 0?Pe[e]:(Pe[e]=t,e==="s"&&(Pe.ss=t-1),!0)}function gd(e,t){if(!this.isValid())return this.localeData().invalidDate();var a=!1,s=Pe,r,i;return typeof e=="object"&&(t=e,e=!1),typeof e=="boolean"&&(a=e),typeof t=="object"&&(s=Object.assign({},Pe,t),t.s!=null&&t.ss==null&&(s.ss=t.s-1)),r=this.localeData(),i=Ed(this,!a,s,r),a&&(i=r.pastFuture(+this,i)),r.postformat(i)}var Qt=Math.abs;function ve(e){return(e>0)-(e<0)||+e}function jt(){if(!this.isValid())return this.localeData().invalidDate();var e=Qt(this._milliseconds)/1e3,t=Qt(this._days),a=Qt(this._months),s,r,i,o,n=this.asSeconds(),d,l,u,m;return n?(s=ee(e/60),r=ee(s/60),e%=60,s%=60,i=ee(a/12),a%=12,o=e?e.toFixed(3).replace(/\.?0+$/,""):"",d=n<0?"-":"",l=ve(this._months)!==ve(n)?"-":"",u=ve(this._days)!==ve(n)?"-":"",m=ve(this._milliseconds)!==ve(n)?"-":"",d+"P"+(i?l+i+"Y":"")+(a?l+a+"M":"")+(t?u+t+"D":"")+(r||s||e?"T":"")+(r?m+r+"H":"")+(s?m+s+"M":"")+(e?m+o+"S":"")):"P0D"}var A=zt.prototype;A.isValid=_l;A.abs=$c;A.add=Kc;A.subtract=Zc;A.as=Qc;A.asMilliseconds=td;A.asSeconds=ad;A.asMinutes=sd;A.asHours=rd;A.asDays=id;A.asWeeks=od;A.asMonths=nd;A.asQuarters=ld;A.asYears=cd;A.valueOf=ed;A._bubble=Xc;A.clone=dd;A.get=ud;A.milliseconds=pd;A.seconds=md;A.minutes=hd;A.hours=fd;A.days=_d;A.weeks=Td;A.months=Sd;A.years=kd;A.humanize=gd;A.toISOString=jt;A.toString=jt;A.toJSON=jt;A.locale=_r;A.localeData=kr;A.toIsoString=te("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",jt);A.lang=Sr;T("X",0,0,"unix");T("x",0,0,"valueOf");_("x",Ft);_("X",Jo);N("X",function(e,t,a){a._d=new Date(parseFloat(e)*1e3)});N("x",function(e,t,a){a._d=new Date(g(e))});//! moment.js
f.version="2.29.4";go(x);f.fn=p;f.min=pl;f.max=ml;f.now=hl;f.utc=pe;f.unix=qc;f.months=zc;f.isDate=rt;f.locale=ge;f.invalid=Pt;f.duration=le;f.isMoment=oe;f.weekdays=jc;f.parseZone=Yc;f.localeData=Be;f.isDuration=_t;f.monthsShort=Jc;f.weekdaysMin=Gc;f.defineLocale=xa;f.updateLocale=Yn;f.locales=zn;f.weekdaysShort=Vc;f.normalizeUnits=ae;f.relativeTimeRounding=Rd;f.relativeTimeThreshold=wd;f.calendarFormat=Ml;f.prototype=p;f.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"};function Ad(e){if(e===null||e===!0||e===!1)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}function G(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function M(e){G(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||typeof e=="object"&&t==="[object Date]"?new Date(e.getTime()):typeof e=="number"||t==="[object Number]"?new Date(e):((typeof e=="string"||t==="[object String]")&&typeof console<"u"&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn(new Error().stack)),new Date(NaN))}function yt(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function Ze(e,t){G(2,arguments);var a=M(e),s=M(t),r=a.getTime()-s.getTime();return r<0?-1:r>0?1:r}var Nr=6e4,Or=36e5;function Ld(e,t){G(2,arguments);var a=M(e),s=M(t),r=a.getFullYear()-s.getFullYear(),i=a.getMonth()-s.getMonth();return r*12+i}function yd(e,t){return G(2,arguments),M(e).getTime()-M(t).getTime()}var os={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(e){return e<0?Math.ceil(e):Math.floor(e)}},bd="trunc";function Nd(e){return e?os[e]:os[bd]}function Od(e){G(1,arguments);var t=M(e);return t.setHours(23,59,59,999),t}function xd(e){G(1,arguments);var t=M(e),a=t.getMonth();return t.setFullYear(t.getFullYear(),a+1,0),t.setHours(23,59,59,999),t}function Cd(e){G(1,arguments);var t=M(e);return Od(t).getTime()===xd(t).getTime()}function vd(e,t){G(2,arguments);var a=M(e),s=M(t),r=Ze(a,s),i=Math.abs(Ld(a,s)),o;if(i<1)o=0;else{a.getMonth()===1&&a.getDate()>27&&a.setDate(30),a.setMonth(a.getMonth()-r*i);var n=Ze(a,s)===-r;Cd(M(e))&&i===1&&Ze(e,s)===1&&(n=!1),o=r*(i-Number(n))}return o===0?0:o}function Wd(e,t,a){G(2,arguments);var s=yd(e,t)/1e3;return Nd(void 0)(s)}var Pd={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},Dd=function(e,t,a){var s,r=Pd[e];return typeof r=="string"?s=r:t===1?s=r.one:s=r.other.replace("{{count}}",t.toString()),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?"in "+s:s+" ago":s},Hd=Dd;function ea(e){return function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},a=t.width?String(t.width):e.defaultWidth,s=e.formats[a]||e.formats[e.defaultWidth];return s}}var Id={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},Md={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},Fd={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Ud={date:ea({formats:Id,defaultWidth:"full"}),time:ea({formats:Md,defaultWidth:"full"}),dateTime:ea({formats:Fd,defaultWidth:"full"})},qd=Ud,Yd={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},zd=function(e,t,a,s){return Yd[e]},Jd=zd;function je(e){return function(t,a){var s=a||{},r=s.context?String(s.context):"standalone",i;if(r==="formatting"&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,n=s.width?String(s.width):o;i=e.formattingValues[n]||e.formattingValues[o]}else{var d=e.defaultWidth,l=s.width?String(s.width):e.defaultWidth;i=e.values[l]||e.values[d]}var u=e.argumentCallback?e.argumentCallback(t):t;return i[u]}}var jd={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},Vd={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},Gd={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},$d={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},Kd={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},Zd={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},Xd=function(e,t){var a=Number(e),s=a%100;if(s>20||s<10)switch(s%10){case 1:return a+"st";case 2:return a+"nd";case 3:return a+"rd"}return a+"th"},Qd={ordinalNumber:Xd,era:je({values:jd,defaultWidth:"wide"}),quarter:je({values:Vd,defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:je({values:Gd,defaultWidth:"wide"}),day:je({values:$d,defaultWidth:"wide"}),dayPeriod:je({values:Kd,defaultWidth:"wide",formattingValues:Zd,defaultFormattingWidth:"wide"})},eu=Qd;function Ve(e){return function(t){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=a.width,r=s&&e.matchPatterns[s]||e.matchPatterns[e.defaultMatchWidth],i=t.match(r);if(!i)return null;var o=i[0],n=s&&e.parsePatterns[s]||e.parsePatterns[e.defaultParseWidth],d=Array.isArray(n)?au(n,function(m){return m.test(o)}):tu(n,function(m){return m.test(o)}),l;l=e.valueCallback?e.valueCallback(d):d,l=a.valueCallback?a.valueCallback(l):l;var u=t.slice(o.length);return{value:l,rest:u}}}function tu(e,t){for(var a in e)if(e.hasOwnProperty(a)&&t(e[a]))return a}function au(e,t){for(var a=0;a<e.length;a++)if(t(e[a]))return a}function su(e){return function(t){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=t.match(e.matchPattern);if(!s)return null;var r=s[0],i=t.match(e.parsePattern);if(!i)return null;var o=e.valueCallback?e.valueCallback(i[0]):i[0];o=a.valueCallback?a.valueCallback(o):o;var n=t.slice(r.length);return{value:o,rest:n}}}var ru=/^(\d+)(th|st|nd|rd)?/i,iu=/\d+/i,ou={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},nu={any:[/^b/i,/^(a|c)/i]},lu={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},cu={any:[/1/i,/2/i,/3/i,/4/i]},du={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},uu={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},pu={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},mu={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},hu={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},fu={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},_u={ordinalNumber:su({matchPattern:ru,parsePattern:iu,valueCallback:function(e){return parseInt(e,10)}}),era:Ve({matchPatterns:ou,defaultMatchWidth:"wide",parsePatterns:nu,defaultParseWidth:"any"}),quarter:Ve({matchPatterns:lu,defaultMatchWidth:"wide",parsePatterns:cu,defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:Ve({matchPatterns:du,defaultMatchWidth:"wide",parsePatterns:uu,defaultParseWidth:"any"}),day:Ve({matchPatterns:pu,defaultMatchWidth:"wide",parsePatterns:mu,defaultParseWidth:"any"}),dayPeriod:Ve({matchPatterns:hu,defaultMatchWidth:"any",parsePatterns:fu,defaultParseWidth:"any"})},Su=_u,ku={code:"en-US",formatDistance:Hd,formatLong:qd,formatRelative:Jd,localize:eu,match:Su,options:{weekStartsOn:0,firstWeekContainsDate:1}},xr=ku;function Tu(e,t){if(e==null)throw new TypeError("assign requires that input parameter not be null or undefined");t=t||{};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}function Cr(e){return Tu({},e)}var ns=1440,Bu=2520,ta=43200,Eu=86400;function Ru(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};G(2,arguments);var s=a.locale||xr;if(!s.formatDistance)throw new RangeError("locale must contain formatDistance property");var r=Ze(e,t);if(isNaN(r))throw new RangeError("Invalid time value");var i=Cr(a);i.addSuffix=!!a.addSuffix,i.comparison=r;var o,n;r>0?(o=M(t),n=M(e)):(o=M(e),n=M(t));var d=Wd(n,o),l=(yt(n)-yt(o))/1e3,u=Math.round((d-l)/60),m;if(u<2)return a.includeSeconds?d<5?s.formatDistance("lessThanXSeconds",5,i):d<10?s.formatDistance("lessThanXSeconds",10,i):d<20?s.formatDistance("lessThanXSeconds",20,i):d<40?s.formatDistance("halfAMinute",null,i):d<60?s.formatDistance("lessThanXMinutes",1,i):s.formatDistance("xMinutes",1,i):u===0?s.formatDistance("lessThanXMinutes",1,i):s.formatDistance("xMinutes",u,i);if(u<45)return s.formatDistance("xMinutes",u,i);if(u<90)return s.formatDistance("aboutXHours",1,i);if(u<ns){var R=Math.round(u/60);return s.formatDistance("aboutXHours",R,i)}else{if(u<Bu)return s.formatDistance("xDays",1,i);if(u<ta){var b=Math.round(u/ns);return s.formatDistance("xDays",b,i)}else if(u<Eu)return m=Math.round(u/ta),s.formatDistance("aboutXMonths",m,i)}if(m=vd(n,o),m<12){var h=Math.round(u/ta);return s.formatDistance("xMonths",h,i)}else{var B=m%12,S=Math.floor(m/12);return B<3?s.formatDistance("aboutXYears",S,i):B<9?s.formatDistance("overXYears",S,i):s.formatDistance("almostXYears",S+1,i)}}var ls=1e3*60,bt=60*24,cs=bt*30,ds=bt*365;function wu(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};G(2,arguments);var s=a.locale||xr;if(!s.formatDistance)throw new RangeError("locale must contain localize.formatDistance property");var r=Ze(e,t);if(isNaN(r))throw new RangeError("Invalid time value");var i=Cr(a);i.addSuffix=!!a.addSuffix,i.comparison=r;var o,n;r>0?(o=M(t),n=M(e)):(o=M(e),n=M(t));var d=a.roundingMethod==null?"round":String(a.roundingMethod),l;if(d==="floor")l=Math.floor;else if(d==="ceil")l=Math.ceil;else if(d==="round")l=Math.round;else throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");var u=n.getTime()-o.getTime(),m=u/ls,R=yt(n)-yt(o),b=(u-R)/ls,h;if(a.unit==null?m<1?h="second":m<60?h="minute":m<bt?h="hour":b<cs?h="day":b<ds?h="month":h="year":h=String(a.unit),h==="second"){var B=l(u/1e3);return s.formatDistance("xSeconds",B,i)}else if(h==="minute"){var S=l(m);return s.formatDistance("xMinutes",S,i)}else if(h==="hour"){var O=l(m/60);return s.formatDistance("xHours",O,i)}else if(h==="day"){var v=l(b/bt);return s.formatDistance("xDays",v,i)}else if(h==="month"){var W=l(b/cs);return W===12&&a.unit!=="month"?s.formatDistance("xYears",1,i):s.formatDistance("xMonths",W,i)}else if(h==="year"){var $=l(b/ds);return s.formatDistance("xYears",$,i)}throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'")}function gu(e,t){return G(1,arguments),Ru(e,Date.now(),t)}function Au(e,t){return G(1,arguments),wu(e,Date.now(),t)}function Lu(e,t){G(1,arguments);var a={},s=a.additionalDigits==null?2:Ad(a.additionalDigits);if(s!==2&&s!==1&&s!==0)throw new RangeError("additionalDigits must be 0, 1 or 2");if(!(typeof e=="string"||Object.prototype.toString.call(e)==="[object String]"))return new Date(NaN);var r=Ou(e),i;if(r.date){var o=xu(r.date,s);i=Cu(o.restDateString,o.year)}if(!i||isNaN(i.getTime()))return new Date(NaN);var n=i.getTime(),d=0,l;if(r.time&&(d=vu(r.time),isNaN(d)))return new Date(NaN);if(r.timezone){if(l=Wu(r.timezone),isNaN(l))return new Date(NaN)}else{var u=new Date(n+d),m=new Date(0);return m.setFullYear(u.getUTCFullYear(),u.getUTCMonth(),u.getUTCDate()),m.setHours(u.getUTCHours(),u.getUTCMinutes(),u.getUTCSeconds(),u.getUTCMilliseconds()),m}return new Date(n+d+l)}var dt={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},yu=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,bu=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,Nu=/^([+-])(\d{2})(?::?(\d{2}))?$/;function Ou(e){var t={},a=e.split(dt.dateTimeDelimiter),s;if(a.length>2)return t;if(/:/.test(a[0])?s=a[0]:(t.date=a[0],s=a[1],dt.timeZoneDelimiter.test(t.date)&&(t.date=e.split(dt.timeZoneDelimiter)[0],s=e.substr(t.date.length,e.length))),s){var r=dt.timezone.exec(s);r?(t.time=s.replace(r[1],""),t.timezone=r[1]):t.time=s}return t}function xu(e,t){var a=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),s=e.match(a);if(!s)return{year:NaN,restDateString:""};var r=s[1]?parseInt(s[1]):null,i=s[2]?parseInt(s[2]):null;return{year:i===null?r:i*100,restDateString:e.slice((s[1]||s[2]).length)}}function Cu(e,t){if(t===null)return new Date(NaN);var a=e.match(yu);if(!a)return new Date(NaN);var s=!!a[4],r=Ge(a[1]),i=Ge(a[2])-1,o=Ge(a[3]),n=Ge(a[4]),d=Ge(a[5])-1;if(s)return Mu(t,n,d)?Pu(t,n,d):new Date(NaN);var l=new Date(0);return!Hu(t,i,o)||!Iu(t,r)?new Date(NaN):(l.setUTCFullYear(t,i,Math.max(r,o)),l)}function Ge(e){return e?parseInt(e):1}function vu(e){var t=e.match(bu);if(!t)return NaN;var a=aa(t[1]),s=aa(t[2]),r=aa(t[3]);return Fu(a,s,r)?a*Or+s*Nr+r*1e3:NaN}function aa(e){return e&&parseFloat(e.replace(",","."))||0}function Wu(e){if(e==="Z")return 0;var t=e.match(Nu);if(!t)return 0;var a=t[1]==="+"?-1:1,s=parseInt(t[2]),r=t[3]&&parseInt(t[3])||0;return Uu(s,r)?a*(s*Or+r*Nr):NaN}function Pu(e,t,a){var s=new Date(0);s.setUTCFullYear(e,0,4);var r=s.getUTCDay()||7,i=(t-1)*7+a+1-r;return s.setUTCDate(s.getUTCDate()+i),s}var Du=[31,null,31,30,31,30,31,31,30,31,30,31];function vr(e){return e%400===0||e%4===0&&e%100!==0}function Hu(e,t,a){return t>=0&&t<=11&&a>=1&&a<=(Du[t]||(vr(e)?29:28))}function Iu(e,t){return t>=1&&t<=(vr(e)?366:365)}function Mu(e,t,a){return t>=1&&t<=53&&a>=0&&a<=6}function Fu(e,t,a){return e===24?t===0&&a===0:a>=0&&a<60&&t>=0&&t<60&&e>=0&&e<25}function Uu(e,t){return t>=0&&t<=59}var qu=(e,t={},a)=>{var s,r;return typeof e=="string"&&(e=Lu(e)),t.useStrict?Au(e,{addSuffix:(s=t.addSuffix)!=null?s:!0,locale:a,unit:t.unit,roundingMethod:t.roundingMethod}):gu(e,{includeSeconds:t.includeSeconds,addSuffix:(r=t.addSuffix)!=null?r:!0,locale:a})};const Yu=(e={})=>{const t=e.name||"Timeago";return Fr({name:t,props:{datetime:{type:[String,Number,Date],required:!0},title:{type:[String,Boolean],required:!1,default:null},autoUpdate:{type:[Number,Boolean],required:!1,default:null},converter:{type:Function,required:!1,default:null},converterOptions:{type:Object,required:!1,default:null},locale:{type:Object,required:!1,default:null}},setup(a){const s=Q();qr(()=>{n()}),Yr(()=>{d()});const r=l=>(a.converter||qu)(l||a.datetime,a.converterOptions||e.converterOptions,a.locale||e.locale),i=Q(r()),o=l=>{i.value=r(l)},n=()=>{if(a.autoUpdate){const l=a.autoUpdate===!0?60:a.autoUpdate;s.value=setInterval(()=>{o(a.datetime)},l*1e3)}},d=()=>{s.value&&(clearInterval(s.value),s.value=void 0)};return ut(()=>a.autoUpdate,l=>{d(),l&&n()}),ut(()=>[a.datetime,a.converter],()=>{o()}),ut(()=>a.converterOptions,()=>{o()},{deep:!0}),{timeago:i,updateTimer:s}},render(){return Ur("timeago",{attrs:{datetime:new Date(this.datetime).toISOString(),title:typeof this.title=="string"?this.title:this.title===!1?null:this.timeago}},[this.timeago])}})};var zu=(e,t)=>{if(e.config.globalProperties.$timeago)return;Number(e.version.split(".")[0])<3&&console.warn("[vue-timeago3] This plugin requires at least Vue version 3.0");const s=Yu(t);e.component(s.name,s)},Ju=jr();const us=Vr(Ju);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function a(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=a(r);fetch(r.href,i)}})();const ju=`Nested Loop Left Join  (cost=11.95..28.52 rows=5 width=157) (actual time=0.010..0.010 rows=0 loops=1)
  Output: rel_users_exams.user_username, rel_users_exams.exam_id, rel_users_exams.started_at, rel_users_exams.finished_at, exam_1.id, exam_1.title, exam_1.date_from, exam_1.date_to, exam_1.created, exam_1.created_by_, exam_1.duration, exam_1.success_threshold, exam_1.published
  Inner Unique: true
  Join Filter: (exam_1.id = rel_users_exams.exam_id)
  Buffers: shared hit=1
  ->  Bitmap Heap Scan on public.rel_users_exams  (cost=11.80..20.27 rows=5 width=52) (actual time=0.009..0.009 rows=0 loops=1)
        Output: rel_users_exams.user_username, rel_users_exams.exam_id, rel_users_exams.started_at, rel_users_exams.finished_at
        Recheck Cond: (1 = rel_users_exams.exam_id)
        Buffers: shared hit=1
        ->  Bitmap Index Scan on rel_users_exams_pkey  (cost=0.00..11.80 rows=5 width=0) (actual time=0.005..0.005 rows=0 loops=1)
              Index Cond: (1 = rel_users_exams.exam_id)
              Buffers: shared hit=1
  ->  Materialize  (cost=0.15..8.17 rows=1 width=105) (never executed)
        Output: exam_1.id, exam_1.title, exam_1.date_from, exam_1.date_to, exam_1.created, exam_1.created_by_, exam_1.duration, exam_1.success_threshold, exam_1.published
        ->  Index Scan using exam_pkey on public.exam exam_1  (cost=0.15..8.17 rows=1 width=105) (never executed)
              Output: exam_1.id, exam_1.title, exam_1.date_from, exam_1.date_to, exam_1.created, exam_1.created_by_, exam_1.duration, exam_1.success_threshold, exam_1.published
              Index Cond: (exam_1.id = 1)
Planning Time: 1.110 ms
Execution Time: 0.170 ms
`,ps=`/* A join between two tables */
SELECT rel_users_exams.user_username AS rel_users_exams_user_username,
         rel_users_exams.exam_id AS rel_users_exams_exam_id,
         rel_users_exams.started_at AS rel_users_exams_started_at,
         rel_users_exams.finished_at AS rel_users_exams_finished_at,
         exam_1.id AS exam_1_id,
         exam_1.title AS exam_1_title,
         exam_1.date_from AS exam_1_date_from,
         exam_1.date_to AS exam_1_date_to,
         exam_1.created AS exam_1_created,
         exam_1.created_by_ AS exam_1_created_by_,
         exam_1.duration AS exam_1_duration,
         exam_1.success_threshold AS exam_1_success_threshold,
         exam_1.published AS exam_1_published
FROM rel_users_exams LEFT OUTER
JOIN exam AS exam_1
    ON exam_1.id = rel_users_exams.exam_id
WHERE 1 = rel_users_exams.exam_id;
`,Vu=`[
  {
    "Plan": {
      "Node Type": "Nested Loop",
      "Parallel Aware": false,
      "Join Type": "Left",
      "Startup Cost": 11.95,
      "Total Cost": 28.52,
      "Plan Rows": 5,
      "Plan Width": 157,
      "Actual Startup Time": 0.007,
      "Actual Total Time": 0.007,
      "Actual Rows": 0,
      "Actual Loops": 1,
      "Output": ["rel_users_exams.user_username", "rel_users_exams.exam_id", "rel_users_exams.started_at", "rel_users_exams.finished_at", "exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
      "Inner Unique": true,
      "Join Filter": "(exam_1.id = rel_users_exams.exam_id)",
      "Rows Removed by Join Filter": 0,
      "Shared Hit Blocks": 1,
      "Shared Read Blocks": 0,
      "Shared Dirtied Blocks": 0,
      "Shared Written Blocks": 0,
      "Local Hit Blocks": 0,
      "Local Read Blocks": 0,
      "Local Dirtied Blocks": 0,
      "Local Written Blocks": 0,
      "Temp Read Blocks": 0,
      "Temp Written Blocks": 0,
      "Plans": [
        {
          "Node Type": "Bitmap Heap Scan",
          "Parent Relationship": "Outer",
          "Parallel Aware": false,
          "Relation Name": "rel_users_exams",
          "Schema": "public",
          "Alias": "rel_users_exams",
          "Startup Cost": 11.80,
          "Total Cost": 20.27,
          "Plan Rows": 5,
          "Plan Width": 52,
          "Actual Startup Time": 0.006,
          "Actual Total Time": 0.006,
          "Actual Rows": 0,
          "Actual Loops": 1,
          "Output": ["rel_users_exams.user_username", "rel_users_exams.exam_id", "rel_users_exams.started_at", "rel_users_exams.finished_at"],
          "Recheck Cond": "(1 = rel_users_exams.exam_id)",
          "Rows Removed by Index Recheck": 0,
          "Exact Heap Blocks": 0,
          "Lossy Heap Blocks": 0,
          "Shared Hit Blocks": 1,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "Plans": [
            {
              "Node Type": "Bitmap Index Scan",
              "Parent Relationship": "Outer",
              "Parallel Aware": false,
              "Index Name": "rel_users_exams_pkey",
              "Startup Cost": 0.00,
              "Total Cost": 11.80,
              "Plan Rows": 5,
              "Plan Width": 0,
              "Actual Startup Time": 0.003,
              "Actual Total Time": 0.004,
              "Actual Rows": 0,
              "Actual Loops": 1,
              "Index Cond": "(1 = rel_users_exams.exam_id)",
              "Shared Hit Blocks": 1,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0
            }
          ]
        },
        {
          "Node Type": "Materialize",
          "Parent Relationship": "Inner",
          "Parallel Aware": false,
          "Startup Cost": 0.15,
          "Total Cost": 8.17,
          "Plan Rows": 1,
          "Plan Width": 105,
          "Actual Startup Time": 0.000,
          "Actual Total Time": 0.000,
          "Actual Rows": 0,
          "Actual Loops": 0,
          "Output": ["exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
          "Shared Hit Blocks": 0,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "Plans": [
            {
              "Node Type": "Index Scan",
              "Parent Relationship": "Outer",
              "Parallel Aware": false,
              "Scan Direction": "Forward",
              "Index Name": "exam_pkey",
              "Relation Name": "exam",
              "Schema": "public",
              "Alias": "exam_1",
              "Startup Cost": 0.15,
              "Total Cost": 8.17,
              "Plan Rows": 1,
              "Plan Width": 105,
              "Actual Startup Time": 0.000,
              "Actual Total Time": 0.000,
              "Actual Rows": 0,
              "Actual Loops": 0,
              "Output": ["exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
              "Index Cond": "(exam_1.id = 1)",
              "Rows Removed by Index Recheck": 0,
              "Shared Hit Blocks": 0,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0
            }
          ]
        }
      ]
    },
    "Planning Time": 0.905,
    "Triggers": [
    ],
    "Execution Time": 0.134
  }
]`,Gu=`[
  {
    "Plan": {
      "Node Type": "Sort",
      "Parallel Aware": false,
      "Startup Cost": 624.86,
      "Total Cost": 625.88,
      "Plan Rows": 410,
      "Plan Width": 726,
      "Actual Startup Time": 6.039,
      "Actual Total Time": 6.088,
      "Actual Rows": 339,
      "Actual Loops": 1,
      "Output": ["rel_users_exams.user_username", "rel_users_exams.exam_id", "rel_users_exams.started_at", "rel_users_exams.finished_at", "answer_1.id", "answer_1.text", "answer_1.correct", "answer_1.fraction", "answer_1.question_id", "question_1.id", "question_1.title", "question_1.text", "question_1.file", "question_1.type", "question_1.source", "question_1.exam_id", "exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
      "Sort Key": ["question_1.id"],
      "Sort Method": "quicksort",
      "Sort Space Used": 409,
      "Sort Space Type": "Memory",
      "Shared Hit Blocks": 363,
      "Shared Read Blocks": 0,
      "Shared Dirtied Blocks": 0,
      "Shared Written Blocks": 0,
      "Local Hit Blocks": 0,
      "Local Read Blocks": 0,
      "Local Dirtied Blocks": 0,
      "Local Written Blocks": 0,
      "Temp Read Blocks": 0,
      "Temp Written Blocks": 0,
      "Plans": [
        {
          "Node Type": "Nested Loop",
          "Parent Relationship": "Outer",
          "Parallel Aware": false,
          "Join Type": "Left",
          "Startup Cost": 228.60,
          "Total Cost": 607.06,
          "Plan Rows": 410,
          "Plan Width": 726,
          "Actual Startup Time": 1.074,
          "Actual Total Time": 5.576,
          "Actual Rows": 339,
          "Actual Loops": 1,
          "Output": ["rel_users_exams.user_username", "rel_users_exams.exam_id", "rel_users_exams.started_at", "rel_users_exams.finished_at", "answer_1.id", "answer_1.text", "answer_1.correct", "answer_1.fraction", "answer_1.question_id", "question_1.id", "question_1.title", "question_1.text", "question_1.file", "question_1.type", "question_1.source", "question_1.exam_id", "exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
          "Join Filter": "(exam_1.id = question_1.exam_id)",
          "Rows Removed by Join Filter": 0,
          "Shared Hit Blocks": 360,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "Plans": [
            {
              "Node Type": "Nested Loop",
              "Parent Relationship": "Outer",
              "Parallel Aware": false,
              "Join Type": "Left",
              "Startup Cost": 0.00,
              "Total Cost": 2.94,
              "Plan Rows": 1,
              "Plan Width": 99,
              "Actual Startup Time": 0.025,
              "Actual Total Time": 0.033,
              "Actual Rows": 1,
              "Actual Loops": 1,
              "Output": ["rel_users_exams.user_username", "rel_users_exams.exam_id", "rel_users_exams.started_at", "rel_users_exams.finished_at", "exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
              "Join Filter": "(exam_1.id = rel_users_exams.exam_id)",
              "Rows Removed by Join Filter": 0,
              "Shared Hit Blocks": 2,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "Plans": [
                {
                  "Node Type": "Seq Scan",
                  "Parent Relationship": "Outer",
                  "Parallel Aware": false,
                  "Relation Name": "rel_users_exams",
                  "Schema": "public",
                  "Alias": "rel_users_exams",
                  "Startup Cost": 0.00,
                  "Total Cost": 1.73,
                  "Plan Rows": 1,
                  "Plan Width": 27,
                  "Actual Startup Time": 0.016,
                  "Actual Total Time": 0.021,
                  "Actual Rows": 1,
                  "Actual Loops": 1,
                  "Output": ["rel_users_exams.user_username", "rel_users_exams.exam_id", "rel_users_exams.started_at", "rel_users_exams.finished_at"],
                  "Filter": "((rel_users_exams.exam_id = 1) AND ((rel_users_exams.user_username)::text = 'nicolas1'::text))",
                  "Rows Removed by Filter": 56,
                  "Shared Hit Blocks": 1,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0
                },
                {
                  "Node Type": "Seq Scan",
                  "Parent Relationship": "Inner",
                  "Parallel Aware": false,
                  "Relation Name": "exam",
                  "Schema": "public",
                  "Alias": "exam_1",
                  "Startup Cost": 0.00,
                  "Total Cost": 1.19,
                  "Plan Rows": 1,
                  "Plan Width": 72,
                  "Actual Startup Time": 0.006,
                  "Actual Total Time": 0.009,
                  "Actual Rows": 1,
                  "Actual Loops": 1,
                  "Output": ["exam_1.id", "exam_1.title", "exam_1.date_from", "exam_1.date_to", "exam_1.created", "exam_1.created_by_", "exam_1.duration", "exam_1.success_threshold", "exam_1.published"],
                  "Filter": "(exam_1.id = 1)",
                  "Rows Removed by Filter": 35,
                  "Shared Hit Blocks": 1,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0
                }
              ]
            },
            {
              "Node Type": "Hash Join",
              "Parent Relationship": "Inner",
              "Parallel Aware": false,
              "Join Type": "Right",
              "Startup Cost": 228.60,
              "Total Cost": 599.00,
              "Plan Rows": 410,
              "Plan Width": 627,
              "Actual Startup Time": 1.047,
              "Actual Total Time": 5.420,
              "Actual Rows": 339,
              "Actual Loops": 1,
              "Output": ["question_1.id", "question_1.title", "question_1.text", "question_1.file", "question_1.type", "question_1.source", "question_1.exam_id", "answer_1.id", "answer_1.text", "answer_1.correct", "answer_1.fraction", "answer_1.question_id"],
              "Hash Cond": "(answer_1.question_id = question_1.id)",
              "Shared Hit Blocks": 358,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "Plans": [
                {
                  "Node Type": "Seq Scan",
                  "Parent Relationship": "Outer",
                  "Parallel Aware": false,
                  "Relation Name": "answer",
                  "Schema": "public",
                  "Alias": "answer_1",
                  "Startup Cost": 0.00,
                  "Total Cost": 311.13,
                  "Plan Rows": 14713,
                  "Plan Width": 55,
                  "Actual Startup Time": 0.007,
                  "Actual Total Time": 1.962,
                  "Actual Rows": 14726,
                  "Actual Loops": 1,
                  "Output": ["answer_1.id", "answer_1.text", "answer_1.correct", "answer_1.fraction", "answer_1.question_id"],
                  "Shared Hit Blocks": 164,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0
                },
                {
                  "Node Type": "Hash",
                  "Parent Relationship": "Inner",
                  "Parallel Aware": false,
                  "Startup Cost": 227.66,
                  "Total Cost": 227.66,
                  "Plan Rows": 75,
                  "Plan Width": 572,
                  "Actual Startup Time": 1.025,
                  "Actual Total Time": 1.025,
                  "Actual Rows": 63,
                  "Actual Loops": 1,
                  "Output": ["question_1.id", "question_1.title", "question_1.text", "question_1.file", "question_1.type", "question_1.source", "question_1.exam_id"],
                  "Hash Buckets": 1024,
                  "Original Hash Buckets": 1024,
                  "Hash Batches": 1,
                  "Original Hash Batches": 1,
                  "Peak Memory Usage": 46,
                  "Shared Hit Blocks": 194,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "Plans": [
                    {
                      "Node Type": "Seq Scan",
                      "Parent Relationship": "Outer",
                      "Parallel Aware": false,
                      "Relation Name": "question",
                      "Schema": "public",
                      "Alias": "question_1",
                      "Startup Cost": 0.00,
                      "Total Cost": 227.66,
                      "Plan Rows": 75,
                      "Plan Width": 572,
                      "Actual Startup Time": 0.004,
                      "Actual Total Time": 0.984,
                      "Actual Rows": 63,
                      "Actual Loops": 1,
                      "Output": ["question_1.id", "question_1.title", "question_1.text", "question_1.file", "question_1.type", "question_1.source", "question_1.exam_id"],
                      "Filter": "(question_1.exam_id = 1)",
                      "Rows Removed by Filter": 2637,
                      "Shared Hit Blocks": 194,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "Planning Time": 1.206,
    "Triggers": [
    ],
    "Execution Time": 6.248
  }
]
`,$u=`/* Joins between four tables */
SELECT rel_users_exams.user_username AS rel_users_exams_user_username,
         rel_users_exams.exam_id AS rel_users_exams_exam_id,
         rel_users_exams.started_at AS rel_users_exams_started_at,
         rel_users_exams.finished_at AS rel_users_exams_finished_at,
         answer_1.id AS answer_1_id,
         answer_1.text AS answer_1_text,
         answer_1.correct AS answer_1_correct,
         answer_1.fraction AS answer_1_fraction,
         answer_1.question_id AS answer_1_question_id,
         question_1.id AS question_1_id,
         question_1.title AS question_1_title,
         question_1.text AS question_1_text,
         question_1.file AS question_1_file,
         question_1.type AS question_1_type,
         question_1.source AS question_1_source,
         question_1.exam_id AS question_1_exam_id,
         exam_1.id AS exam_1_id,
         exam_1.title AS exam_1_title,
         exam_1.date_from AS exam_1_date_from,
         exam_1.date_to AS exam_1_date_to,
         exam_1.created AS exam_1_created,
         exam_1.created_by_ AS exam_1_created_by_,
         exam_1.duration AS exam_1_duration,
         exam_1.success_threshold AS exam_1_success_threshold,
         exam_1.published AS exam_1_published
FROM rel_users_exams LEFT OUTER
JOIN exam AS exam_1
    ON exam_1.id = rel_users_exams.exam_id LEFT OUTER
JOIN question AS question_1
    ON exam_1.id = question_1.exam_id LEFT OUTER
JOIN answer AS answer_1
    ON question_1.id = answer_1.question_id
WHERE rel_users_exams.user_username = %(param_1)s
        AND rel_users_exams.exam_id = %(param_2)s
ORDER BY  question_1.id;
`,Ku=`[
  {
    "Plan": {
      "Node Type": "Sort",
      "Startup Cost": 1460.74,
      "Total Cost": 1470.87,
      "Plan Rows": 4050,
      "Plan Width": 183,
      "Actual Startup Time": 13.766,
      "Actual Total Time": 13.793,
      "Actual Rows": 352,
      "Actual Loops": 1,
      "Output": ["sv.variant_id", "sv.sku", "sp.slug", "sp.name", "vc.color", "pr.min_price", "pcc.available_colors", "sv.product_id"],
      "Sort Key": ["sv.product_id"],
      "Sort Method": "quicksort",
      "Sort Space Used": 101,
      "Sort Space Type": "Memory",
      "Shared Hit Blocks": 2695,
      "Shared Read Blocks": 0,
      "Shared Dirtied Blocks": 0,
      "Shared Written Blocks": 0,
      "Local Hit Blocks": 0,
      "Local Read Blocks": 0,
      "Local Dirtied Blocks": 0,
      "Local Written Blocks": 0,
      "Temp Read Blocks": 0,
      "Temp Written Blocks": 0,
      "I/O Read Time": 0.000,
      "I/O Write Time": 0.000,
      "Plans": [
        {
          "Node Type": "Seq Scan",
          "Parent Relationship": "InitPlan",
          "Subplan Name": "CTE catalog_variants",
          "Relation Name": "spree_variants",
          "Schema": "public",
          "Alias": "spree_variants",
          "Startup Cost": 0.00,
          "Total Cost": 80.47,
          "Plan Rows": 352,
          "Plan Width": 19,
          "Actual Startup Time": 0.022,
          "Actual Total Time": 0.740,
          "Actual Rows": 352,
          "Actual Loops": 1,
          "Output": ["spree_variants.id", "spree_variants.product_id", "spree_variants.sku"],
          "Filter": "((spree_variants.deleted_at IS NULL) AND spree_variants.show_in_catalog)",
          "Rows Removed by Filter": 3595,
          "Shared Hit Blocks": 41,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "I/O Read Time": 0.000,
          "I/O Write Time": 0.000
        },
        {
          "Node Type": "Aggregate",
          "Strategy": "Sorted",
          "Parent Relationship": "InitPlan",
          "Subplan Name": "CTE product_color_classifications",
          "Startup Cost": 288.86,
          "Total Cost": 292.38,
          "Plan Rows": 176,
          "Plan Width": 12,
          "Actual Startup Time": 2.799,
          "Actual Total Time": 3.980,
          "Actual Rows": 311,
          "Actual Loops": 1,
          "Output": ["sv_1.product_id", "array_agg(DISTINCT sov.presentation)"],
          "Group Key": ["sv_1.product_id"],
          "Shared Hit Blocks": 1295,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "I/O Read Time": 0.000,
          "I/O Write Time": 0.000,
          "Plans": [
            {
              "Node Type": "Sort",
              "Parent Relationship": "Outer",
              "Startup Cost": 288.86,
              "Total Cost": 289.30,
              "Plan Rows": 176,
              "Plan Width": 12,
              "Actual Startup Time": 2.676,
              "Actual Total Time": 2.705,
              "Actual Rows": 352,
              "Actual Loops": 1,
              "Output": ["sv_1.product_id", "sov.presentation"],
              "Sort Key": ["sv_1.product_id"],
              "Sort Method": "quicksort",
              "Sort Space Used": 41,
              "Sort Space Type": "Memory",
              "Shared Hit Blocks": 1287,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000,
              "Plans": [
                {
                  "Node Type": "Hash Join",
                  "Parent Relationship": "Outer",
                  "Join Type": "Inner",
                  "Startup Cost": 20.28,
                  "Total Cost": 282.30,
                  "Plan Rows": 176,
                  "Plan Width": 12,
                  "Actual Startup Time": 0.312,
                  "Actual Total Time": 2.450,
                  "Actual Rows": 352,
                  "Actual Loops": 1,
                  "Output": ["sv_1.product_id", "sov.presentation"],
                  "Hash Cond": "(sov_sv.option_value_id = sov.id)",
                  "Shared Hit Blocks": 1287,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000,
                  "Plans": [
                    {
                      "Node Type": "Nested Loop",
                      "Parent Relationship": "Outer",
                      "Join Type": "Inner",
                      "Startup Cost": 12.71,
                      "Total Cost": 270.98,
                      "Plan Rows": 528,
                      "Plan Width": 8,
                      "Actual Startup Time": 0.229,
                      "Actual Total Time": 2.086,
                      "Actual Rows": 1056,
                      "Actual Loops": 1,
                      "Output": ["sv_1.product_id", "sov_sv.option_value_id"],
                      "Shared Hit Blocks": 1284,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "Hash Join",
                          "Parent Relationship": "Outer",
                          "Join Type": "Inner",
                          "Startup Cost": 12.42,
                          "Total Cost": 24.30,
                          "Plan Rows": 176,
                          "Plan Width": 12,
                          "Actual Startup Time": 0.221,
                          "Actual Total Time": 0.468,
                          "Actual Rows": 352,
                          "Actual Loops": 1,
                          "Output": ["sv_1.product_id", "sv_1.variant_id", "catalog_variants.variant_id"],
                          "Hash Cond": "(sv_1.variant_id = catalog_variants.variant_id)",
                          "Shared Hit Blocks": 0,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "CTE Scan",
                              "Parent Relationship": "Outer",
                              "CTE Name": "catalog_variants",
                              "Alias": "sv_1",
                              "Startup Cost": 0.00,
                              "Total Cost": 7.04,
                              "Plan Rows": 352,
                              "Plan Width": 8,
                              "Actual Startup Time": 0.000,
                              "Actual Total Time": 0.086,
                              "Actual Rows": 352,
                              "Actual Loops": 1,
                              "Output": ["sv_1.variant_id", "sv_1.product_id", "sv_1.sku"],
                              "Shared Hit Blocks": 0,
                              "Shared Read Blocks": 0,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000
                            },
                            {
                              "Node Type": "Hash",
                              "Parent Relationship": "Inner",
                              "Startup Cost": 9.92,
                              "Total Cost": 9.92,
                              "Plan Rows": 200,
                              "Plan Width": 4,
                              "Actual Startup Time": 0.212,
                              "Actual Total Time": 0.212,
                              "Actual Rows": 352,
                              "Actual Loops": 1,
                              "Output": ["catalog_variants.variant_id"],
                              "Hash Buckets": 1024,
                              "Original Hash Buckets": 1024,
                              "Hash Batches": 1,
                              "Original Hash Batches": 1,
                              "Peak Memory Usage": 21,
                              "Shared Hit Blocks": 0,
                              "Shared Read Blocks": 0,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000,
                              "Plans": [
                                {
                                  "Node Type": "Aggregate",
                                  "Strategy": "Hashed",
                                  "Parent Relationship": "Outer",
                                  "Startup Cost": 7.92,
                                  "Total Cost": 9.92,
                                  "Plan Rows": 200,
                                  "Plan Width": 4,
                                  "Actual Startup Time": 0.112,
                                  "Actual Total Time": 0.158,
                                  "Actual Rows": 352,
                                  "Actual Loops": 1,
                                  "Output": ["catalog_variants.variant_id"],
                                  "Group Key": ["catalog_variants.variant_id"],
                                  "Shared Hit Blocks": 0,
                                  "Shared Read Blocks": 0,
                                  "Shared Dirtied Blocks": 0,
                                  "Shared Written Blocks": 0,
                                  "Local Hit Blocks": 0,
                                  "Local Read Blocks": 0,
                                  "Local Dirtied Blocks": 0,
                                  "Local Written Blocks": 0,
                                  "Temp Read Blocks": 0,
                                  "Temp Written Blocks": 0,
                                  "I/O Read Time": 0.000,
                                  "I/O Write Time": 0.000,
                                  "Plans": [
                                    {
                                      "Node Type": "CTE Scan",
                                      "Parent Relationship": "Outer",
                                      "CTE Name": "catalog_variants",
                                      "Alias": "catalog_variants",
                                      "Startup Cost": 0.00,
                                      "Total Cost": 7.04,
                                      "Plan Rows": 352,
                                      "Plan Width": 4,
                                      "Actual Startup Time": 0.001,
                                      "Actual Total Time": 0.029,
                                      "Actual Rows": 352,
                                      "Actual Loops": 1,
                                      "Output": ["catalog_variants.variant_id", "catalog_variants.product_id", "catalog_variants.sku"],
                                      "Shared Hit Blocks": 0,
                                      "Shared Read Blocks": 0,
                                      "Shared Dirtied Blocks": 0,
                                      "Shared Written Blocks": 0,
                                      "Local Hit Blocks": 0,
                                      "Local Read Blocks": 0,
                                      "Local Dirtied Blocks": 0,
                                      "Local Written Blocks": 0,
                                      "Temp Read Blocks": 0,
                                      "Temp Written Blocks": 0,
                                      "I/O Read Time": 0.000,
                                      "I/O Write Time": 0.000
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Node Type": "Index Scan",
                          "Parent Relationship": "Inner",
                          "Scan Direction": "Forward",
                          "Index Name": "index_spree_option_values_variants_on_variant_id",
                          "Relation Name": "spree_option_values_variants",
                          "Schema": "public",
                          "Alias": "sov_sv",
                          "Startup Cost": 0.29,
                          "Total Cost": 1.37,
                          "Plan Rows": 3,
                          "Plan Width": 8,
                          "Actual Startup Time": 0.002,
                          "Actual Total Time": 0.003,
                          "Actual Rows": 3,
                          "Actual Loops": 352,
                          "Output": ["sov_sv.variant_id", "sov_sv.option_value_id", "sov_sv.id"],
                          "Index Cond": "(sov_sv.variant_id = sv_1.variant_id)",
                          "Rows Removed by Index Recheck": 0,
                          "Shared Hit Blocks": 1284,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000
                        }
                      ]
                    },
                    {
                      "Node Type": "Hash",
                      "Parent Relationship": "Inner",
                      "Startup Cost": 6.69,
                      "Total Cost": 6.69,
                      "Plan Rows": 71,
                      "Plan Width": 12,
                      "Actual Startup Time": 0.064,
                      "Actual Total Time": 0.064,
                      "Actual Rows": 11,
                      "Actual Loops": 1,
                      "Output": ["sov.presentation", "sov.id"],
                      "Hash Buckets": 1024,
                      "Original Hash Buckets": 1024,
                      "Hash Batches": 1,
                      "Original Hash Batches": 1,
                      "Peak Memory Usage": 9,
                      "Shared Hit Blocks": 3,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "Hash Join",
                          "Parent Relationship": "Outer",
                          "Join Type": "Inner",
                          "Startup Cost": 1.05,
                          "Total Cost": 6.69,
                          "Plan Rows": 71,
                          "Plan Width": 12,
                          "Actual Startup Time": 0.020,
                          "Actual Total Time": 0.062,
                          "Actual Rows": 11,
                          "Actual Loops": 1,
                          "Output": ["sov.presentation", "sov.id"],
                          "Hash Cond": "(sov.option_type_id = sot.id)",
                          "Shared Hit Blocks": 3,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "Seq Scan",
                              "Parent Relationship": "Outer",
                              "Relation Name": "spree_option_values",
                              "Schema": "public",
                              "Alias": "sov",
                              "Startup Cost": 0.00,
                              "Total Cost": 4.13,
                              "Plan Rows": 213,
                              "Plan Width": 16,
                              "Actual Startup Time": 0.003,
                              "Actual Total Time": 0.017,
                              "Actual Rows": 213,
                              "Actual Loops": 1,
                              "Output": ["sov.id", "sov.position", "sov.name", "sov.presentation", "sov.option_type_id", "sov.created_at", "sov.updated_at"],
                              "Shared Hit Blocks": 2,
                              "Shared Read Blocks": 0,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000
                            },
                            {
                              "Node Type": "Hash",
                              "Parent Relationship": "Inner",
                              "Startup Cost": 1.04,
                              "Total Cost": 1.04,
                              "Plan Rows": 1,
                              "Plan Width": 4,
                              "Actual Startup Time": 0.007,
                              "Actual Total Time": 0.007,
                              "Actual Rows": 1,
                              "Actual Loops": 1,
                              "Output": ["sot.id"],
                              "Hash Buckets": 1024,
                              "Original Hash Buckets": 1024,
                              "Hash Batches": 1,
                              "Original Hash Batches": 1,
                              "Peak Memory Usage": 9,
                              "Shared Hit Blocks": 1,
                              "Shared Read Blocks": 0,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000,
                              "Plans": [
                                {
                                  "Node Type": "Seq Scan",
                                  "Parent Relationship": "Outer",
                                  "Relation Name": "spree_option_types",
                                  "Schema": "public",
                                  "Alias": "sot",
                                  "Startup Cost": 0.00,
                                  "Total Cost": 1.04,
                                  "Plan Rows": 1,
                                  "Plan Width": 4,
                                  "Actual Startup Time": 0.003,
                                  "Actual Total Time": 0.003,
                                  "Actual Rows": 1,
                                  "Actual Loops": 1,
                                  "Output": ["sot.id"],
                                  "Filter": "((sot.name)::text = 'color_classification'::text)",
                                  "Rows Removed by Filter": 2,
                                  "Shared Hit Blocks": 1,
                                  "Shared Read Blocks": 0,
                                  "Shared Dirtied Blocks": 0,
                                  "Shared Written Blocks": 0,
                                  "Local Hit Blocks": 0,
                                  "Local Read Blocks": 0,
                                  "Local Dirtied Blocks": 0,
                                  "Local Written Blocks": 0,
                                  "Temp Read Blocks": 0,
                                  "Temp Written Blocks": 0,
                                  "I/O Read Time": 0.000,
                                  "I/O Write Time": 0.000
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "Node Type": "Hash Join",
          "Parent Relationship": "InitPlan",
          "Subplan Name": "CTE variant_colors",
          "Join Type": "Inner",
          "Startup Cost": 20.28,
          "Total Cost": 282.30,
          "Plan Rows": 176,
          "Plan Width": 12,
          "Actual Startup Time": 0.357,
          "Actual Total Time": 1.844,
          "Actual Rows": 352,
          "Actual Loops": 1,
          "Output": ["sv_2.variant_id", "sov_1.presentation"],
          "Hash Cond": "(sov_sv_1.option_value_id = sov_1.id)",
          "Shared Hit Blocks": 1287,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "I/O Read Time": 0.000,
          "I/O Write Time": 0.000,
          "Plans": [
            {
              "Node Type": "Nested Loop",
              "Parent Relationship": "Outer",
              "Join Type": "Inner",
              "Startup Cost": 12.71,
              "Total Cost": 270.98,
              "Plan Rows": 528,
              "Plan Width": 8,
              "Actual Startup Time": 0.233,
              "Actual Total Time": 1.555,
              "Actual Rows": 1056,
              "Actual Loops": 1,
              "Output": ["sv_2.variant_id", "sov_sv_1.option_value_id"],
              "Shared Hit Blocks": 1284,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000,
              "Plans": [
                {
                  "Node Type": "Hash Join",
                  "Parent Relationship": "Outer",
                  "Join Type": "Inner",
                  "Startup Cost": 12.42,
                  "Total Cost": 24.30,
                  "Plan Rows": 176,
                  "Plan Width": 8,
                  "Actual Startup Time": 0.214,
                  "Actual Total Time": 0.350,
                  "Actual Rows": 352,
                  "Actual Loops": 1,
                  "Output": ["sv_2.variant_id", "catalog_variants_1.variant_id"],
                  "Hash Cond": "(sv_2.variant_id = catalog_variants_1.variant_id)",
                  "Shared Hit Blocks": 0,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000,
                  "Plans": [
                    {
                      "Node Type": "CTE Scan",
                      "Parent Relationship": "Outer",
                      "CTE Name": "catalog_variants",
                      "Alias": "sv_2",
                      "Startup Cost": 0.00,
                      "Total Cost": 7.04,
                      "Plan Rows": 352,
                      "Plan Width": 4,
                      "Actual Startup Time": 0.000,
                      "Actual Total Time": 0.046,
                      "Actual Rows": 352,
                      "Actual Loops": 1,
                      "Output": ["sv_2.variant_id", "sv_2.product_id", "sv_2.sku"],
                      "Shared Hit Blocks": 0,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000
                    },
                    {
                      "Node Type": "Hash",
                      "Parent Relationship": "Inner",
                      "Startup Cost": 9.92,
                      "Total Cost": 9.92,
                      "Plan Rows": 200,
                      "Plan Width": 4,
                      "Actual Startup Time": 0.204,
                      "Actual Total Time": 0.204,
                      "Actual Rows": 352,
                      "Actual Loops": 1,
                      "Output": ["catalog_variants_1.variant_id"],
                      "Hash Buckets": 1024,
                      "Original Hash Buckets": 1024,
                      "Hash Batches": 1,
                      "Original Hash Batches": 1,
                      "Peak Memory Usage": 21,
                      "Shared Hit Blocks": 0,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "Aggregate",
                          "Strategy": "Hashed",
                          "Parent Relationship": "Outer",
                          "Startup Cost": 7.92,
                          "Total Cost": 9.92,
                          "Plan Rows": 200,
                          "Plan Width": 4,
                          "Actual Startup Time": 0.115,
                          "Actual Total Time": 0.150,
                          "Actual Rows": 352,
                          "Actual Loops": 1,
                          "Output": ["catalog_variants_1.variant_id"],
                          "Group Key": ["catalog_variants_1.variant_id"],
                          "Shared Hit Blocks": 0,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "CTE Scan",
                              "Parent Relationship": "Outer",
                              "CTE Name": "catalog_variants",
                              "Alias": "catalog_variants_1",
                              "Startup Cost": 0.00,
                              "Total Cost": 7.04,
                              "Plan Rows": 352,
                              "Plan Width": 4,
                              "Actual Startup Time": 0.001,
                              "Actual Total Time": 0.027,
                              "Actual Rows": 352,
                              "Actual Loops": 1,
                              "Output": ["catalog_variants_1.variant_id", "catalog_variants_1.product_id", "catalog_variants_1.sku"],
                              "Shared Hit Blocks": 0,
                              "Shared Read Blocks": 0,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Node Type": "Index Scan",
                  "Parent Relationship": "Inner",
                  "Scan Direction": "Forward",
                  "Index Name": "index_spree_option_values_variants_on_variant_id",
                  "Relation Name": "spree_option_values_variants",
                  "Schema": "public",
                  "Alias": "sov_sv_1",
                  "Startup Cost": 0.29,
                  "Total Cost": 1.37,
                  "Plan Rows": 3,
                  "Plan Width": 8,
                  "Actual Startup Time": 0.002,
                  "Actual Total Time": 0.003,
                  "Actual Rows": 3,
                  "Actual Loops": 352,
                  "Output": ["sov_sv_1.variant_id", "sov_sv_1.option_value_id", "sov_sv_1.id"],
                  "Index Cond": "(sov_sv_1.variant_id = sv_2.variant_id)",
                  "Rows Removed by Index Recheck": 0,
                  "Shared Hit Blocks": 1284,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000
                }
              ]
            },
            {
              "Node Type": "Hash",
              "Parent Relationship": "Inner",
              "Startup Cost": 6.69,
              "Total Cost": 6.69,
              "Plan Rows": 71,
              "Plan Width": 12,
              "Actual Startup Time": 0.109,
              "Actual Total Time": 0.109,
              "Actual Rows": 88,
              "Actual Loops": 1,
              "Output": ["sov_1.presentation", "sov_1.id"],
              "Hash Buckets": 1024,
              "Original Hash Buckets": 1024,
              "Hash Batches": 1,
              "Original Hash Batches": 1,
              "Peak Memory Usage": 13,
              "Shared Hit Blocks": 3,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000,
              "Plans": [
                {
                  "Node Type": "Hash Join",
                  "Parent Relationship": "Outer",
                  "Join Type": "Inner",
                  "Startup Cost": 1.05,
                  "Total Cost": 6.69,
                  "Plan Rows": 71,
                  "Plan Width": 12,
                  "Actual Startup Time": 0.034,
                  "Actual Total Time": 0.090,
                  "Actual Rows": 88,
                  "Actual Loops": 1,
                  "Output": ["sov_1.presentation", "sov_1.id"],
                  "Hash Cond": "(sov_1.option_type_id = sot_1.id)",
                  "Shared Hit Blocks": 3,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000,
                  "Plans": [
                    {
                      "Node Type": "Seq Scan",
                      "Parent Relationship": "Outer",
                      "Relation Name": "spree_option_values",
                      "Schema": "public",
                      "Alias": "sov_1",
                      "Startup Cost": 0.00,
                      "Total Cost": 4.13,
                      "Plan Rows": 213,
                      "Plan Width": 16,
                      "Actual Startup Time": 0.007,
                      "Actual Total Time": 0.028,
                      "Actual Rows": 213,
                      "Actual Loops": 1,
                      "Output": ["sov_1.id", "sov_1.position", "sov_1.name", "sov_1.presentation", "sov_1.option_type_id", "sov_1.created_at", "sov_1.updated_at"],
                      "Shared Hit Blocks": 2,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000
                    },
                    {
                      "Node Type": "Hash",
                      "Parent Relationship": "Inner",
                      "Startup Cost": 1.04,
                      "Total Cost": 1.04,
                      "Plan Rows": 1,
                      "Plan Width": 4,
                      "Actual Startup Time": 0.018,
                      "Actual Total Time": 0.018,
                      "Actual Rows": 1,
                      "Actual Loops": 1,
                      "Output": ["sot_1.id"],
                      "Hash Buckets": 1024,
                      "Original Hash Buckets": 1024,
                      "Hash Batches": 1,
                      "Original Hash Batches": 1,
                      "Peak Memory Usage": 9,
                      "Shared Hit Blocks": 1,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "Seq Scan",
                          "Parent Relationship": "Outer",
                          "Relation Name": "spree_option_types",
                          "Schema": "public",
                          "Alias": "sot_1",
                          "Startup Cost": 0.00,
                          "Total Cost": 1.04,
                          "Plan Rows": 1,
                          "Plan Width": 4,
                          "Actual Startup Time": 0.014,
                          "Actual Total Time": 0.015,
                          "Actual Rows": 1,
                          "Actual Loops": 1,
                          "Output": ["sot_1.id"],
                          "Filter": "((sot_1.name)::text = 'color'::text)",
                          "Rows Removed by Filter": 2,
                          "Shared Hit Blocks": 1,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "Node Type": "Aggregate",
          "Strategy": "Hashed",
          "Parent Relationship": "InitPlan",
          "Subplan Name": "CTE variants_min_prices",
          "Startup Cost": 225.63,
          "Total Cost": 271.84,
          "Plan Rows": 4621,
          "Plan Width": 7,
          "Actual Startup Time": 5.936,
          "Actual Total Time": 6.037,
          "Actual Rows": 352,
          "Actual Loops": 1,
          "Output": ["spree_prices.variant_id", "COALESCE(min(spree_prices.amount), '0'::numeric)"],
          "Group Key": ["spree_prices.variant_id"],
          "Shared Hit Blocks": 102,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "I/O Read Time": 0.000,
          "I/O Write Time": 0.000,
          "Plans": [
            {
              "Node Type": "Hash Join",
              "Parent Relationship": "Outer",
              "Join Type": "Inner",
              "Startup Cost": 12.42,
              "Total Cost": 202.53,
              "Plan Rows": 4621,
              "Plan Width": 7,
              "Actual Startup Time": 2.415,
              "Actual Total Time": 5.785,
              "Actual Rows": 352,
              "Actual Loops": 1,
              "Output": ["spree_prices.variant_id", "spree_prices.amount"],
              "Hash Cond": "(spree_prices.variant_id = catalog_variants_2.variant_id)",
              "Shared Hit Blocks": 102,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000,
              "Plans": [
                {
                  "Node Type": "Seq Scan",
                  "Parent Relationship": "Outer",
                  "Relation Name": "spree_prices",
                  "Schema": "public",
                  "Alias": "spree_prices",
                  "Startup Cost": 0.00,
                  "Total Cost": 153.42,
                  "Plan Rows": 9242,
                  "Plan Width": 7,
                  "Actual Startup Time": 0.023,
                  "Actual Total Time": 2.548,
                  "Actual Rows": 9242,
                  "Actual Loops": 1,
                  "Output": ["spree_prices.id", "spree_prices.variant_id", "spree_prices.amount", "spree_prices.currency", "spree_prices.deleted_at", "spree_prices.is_default"],
                  "Shared Hit Blocks": 61,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000
                },
                {
                  "Node Type": "Hash",
                  "Parent Relationship": "Inner",
                  "Startup Cost": 9.92,
                  "Total Cost": 9.92,
                  "Plan Rows": 200,
                  "Plan Width": 4,
                  "Actual Startup Time": 1.229,
                  "Actual Total Time": 1.229,
                  "Actual Rows": 352,
                  "Actual Loops": 1,
                  "Output": ["catalog_variants_2.variant_id"],
                  "Hash Buckets": 1024,
                  "Original Hash Buckets": 1024,
                  "Hash Batches": 1,
                  "Original Hash Batches": 1,
                  "Peak Memory Usage": 21,
                  "Shared Hit Blocks": 41,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000,
                  "Plans": [
                    {
                      "Node Type": "Aggregate",
                      "Strategy": "Hashed",
                      "Parent Relationship": "Outer",
                      "Startup Cost": 7.92,
                      "Total Cost": 9.92,
                      "Plan Rows": 200,
                      "Plan Width": 4,
                      "Actual Startup Time": 1.075,
                      "Actual Total Time": 1.140,
                      "Actual Rows": 352,
                      "Actual Loops": 1,
                      "Output": ["catalog_variants_2.variant_id"],
                      "Group Key": ["catalog_variants_2.variant_id"],
                      "Shared Hit Blocks": 41,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "CTE Scan",
                          "Parent Relationship": "Outer",
                          "CTE Name": "catalog_variants",
                          "Alias": "catalog_variants_2",
                          "Startup Cost": 0.00,
                          "Total Cost": 7.04,
                          "Plan Rows": 352,
                          "Plan Width": 4,
                          "Actual Startup Time": 0.024,
                          "Actual Total Time": 0.915,
                          "Actual Rows": 352,
                          "Actual Loops": 1,
                          "Output": ["catalog_variants_2.variant_id", "catalog_variants_2.product_id", "catalog_variants_2.sku"],
                          "Shared Hit Blocks": 41,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "Node Type": "Hash Join",
          "Parent Relationship": "Outer",
          "Join Type": "Inner",
          "Startup Cost": 42.71,
          "Total Cost": 291.08,
          "Plan Rows": 4050,
          "Plan Width": 183,
          "Actual Startup Time": 13.149,
          "Actual Total Time": 13.526,
          "Actual Rows": 352,
          "Actual Loops": 1,
          "Output": ["sv.variant_id", "sv.sku", "sp.slug", "sp.name", "vc.color", "pr.min_price", "pcc.available_colors", "sv.product_id"],
          "Hash Cond": "(pr.variant_id = sv.variant_id)",
          "Shared Hit Blocks": 2692,
          "Shared Read Blocks": 0,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "I/O Read Time": 0.000,
          "I/O Write Time": 0.000,
          "Plans": [
            {
              "Node Type": "CTE Scan",
              "Parent Relationship": "Outer",
              "CTE Name": "variants_min_prices",
              "Alias": "pr",
              "Startup Cost": 0.00,
              "Total Cost": 92.42,
              "Plan Rows": 4621,
              "Plan Width": 36,
              "Actual Startup Time": 5.939,
              "Actual Total Time": 6.157,
              "Actual Rows": 352,
              "Actual Loops": 1,
              "Output": ["pr.variant_id", "pr.min_price"],
              "Shared Hit Blocks": 102,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000
            },
            {
              "Node Type": "Hash",
              "Parent Relationship": "Inner",
              "Startup Cost": 40.52,
              "Total Cost": 40.52,
              "Plan Rows": 175,
              "Plan Width": 155,
              "Actual Startup Time": 7.189,
              "Actual Total Time": 7.189,
              "Actual Rows": 352,
              "Actual Loops": 1,
              "Output": ["sv.variant_id", "sv.sku", "sv.product_id", "sp.slug", "sp.name", "vc.color", "vc.variant_id", "pcc.available_colors"],
              "Hash Buckets": 1024,
              "Original Hash Buckets": 1024,
              "Hash Batches": 1,
              "Original Hash Batches": 1,
              "Peak Memory Usage": 63,
              "Shared Hit Blocks": 2590,
              "Shared Read Blocks": 0,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000,
              "Plans": [
                {
                  "Node Type": "Hash Join",
                  "Parent Relationship": "Outer",
                  "Join Type": "Inner",
                  "Startup Cost": 27.68,
                  "Total Cost": 40.52,
                  "Plan Rows": 175,
                  "Plan Width": 155,
                  "Actual Startup Time": 6.664,
                  "Actual Total Time": 7.024,
                  "Actual Rows": 352,
                  "Actual Loops": 1,
                  "Output": ["sv.variant_id", "sv.sku", "sv.product_id", "sp.slug", "sp.name", "vc.color", "vc.variant_id", "pcc.available_colors"],
                  "Hash Cond": "(sv.variant_id = vc.variant_id)",
                  "Shared Hit Blocks": 2590,
                  "Shared Read Blocks": 0,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000,
                  "Plans": [
                    {
                      "Node Type": "Hash Join",
                      "Parent Relationship": "Outer",
                      "Join Type": "Inner",
                      "Startup Cost": 21.96,
                      "Total Cost": 32.31,
                      "Plan Rows": 199,
                      "Plan Width": 119,
                      "Actual Startup Time": 4.636,
                      "Actual Total Time": 4.846,
                      "Actual Rows": 352,
                      "Actual Loops": 1,
                      "Output": ["sv.variant_id", "sv.sku", "sv.product_id", "sp.slug", "sp.name", "pcc.available_colors"],
                      "Hash Cond": "(sv.product_id = sp.id)",
                      "Shared Hit Blocks": 1303,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "CTE Scan",
                          "Parent Relationship": "Outer",
                          "CTE Name": "catalog_variants",
                          "Alias": "sv",
                          "Startup Cost": 0.00,
                          "Total Cost": 7.04,
                          "Plan Rows": 352,
                          "Plan Width": 40,
                          "Actual Startup Time": 0.001,
                          "Actual Total Time": 0.059,
                          "Actual Rows": 352,
                          "Actual Loops": 1,
                          "Output": ["sv.variant_id", "sv.product_id", "sv.sku"],
                          "Shared Hit Blocks": 0,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000
                        },
                        {
                          "Node Type": "Hash",
                          "Parent Relationship": "Inner",
                          "Startup Cost": 19.76,
                          "Total Cost": 19.76,
                          "Plan Rows": 176,
                          "Plan Width": 87,
                          "Actual Startup Time": 4.622,
                          "Actual Total Time": 4.622,
                          "Actual Rows": 311,
                          "Actual Loops": 1,
                          "Output": ["sp.slug", "sp.name", "sp.id", "pcc.available_colors", "pcc.product_id"],
                          "Hash Buckets": 1024,
                          "Original Hash Buckets": 1024,
                          "Hash Batches": 1,
                          "Original Hash Batches": 1,
                          "Peak Memory Usage": 47,
                          "Shared Hit Blocks": 1303,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "Hash Join",
                              "Parent Relationship": "Outer",
                              "Join Type": "Inner",
                              "Startup Cost": 5.72,
                              "Total Cost": 19.76,
                              "Plan Rows": 176,
                              "Plan Width": 87,
                              "Actual Startup Time": 4.258,
                              "Actual Total Time": 4.510,
                              "Actual Rows": 311,
                              "Actual Loops": 1,
                              "Output": ["sp.slug", "sp.name", "sp.id", "pcc.available_colors", "pcc.product_id"],
                              "Hash Cond": "(sp.id = pcc.product_id)",
                              "Shared Hit Blocks": 1303,
                              "Shared Read Blocks": 0,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000,
                              "Plans": [
                                {
                                  "Node Type": "Seq Scan",
                                  "Parent Relationship": "Outer",
                                  "Relation Name": "spree_products",
                                  "Schema": "public",
                                  "Alias": "sp",
                                  "Startup Cost": 0.00,
                                  "Total Cost": 11.11,
                                  "Plan Rows": 311,
                                  "Plan Width": 51,
                                  "Actual Startup Time": 0.016,
                                  "Actual Total Time": 0.115,
                                  "Actual Rows": 311,
                                  "Actual Loops": 1,
                                  "Output": ["sp.id", "sp.name", "sp.description", "sp.available_on", "sp.deleted_at", "sp.slug", "sp.meta_description", "sp.meta_keywords", "sp.tax_category_id", "sp.shipping_category_id", "sp.created_at", "sp.updated_at", "sp.promotionable", "sp.meta_title", "sp.fashion_xl_id"],
                                  "Filter": "(sp.deleted_at IS NULL)",
                                  "Rows Removed by Filter": 0,
                                  "Shared Hit Blocks": 8,
                                  "Shared Read Blocks": 0,
                                  "Shared Dirtied Blocks": 0,
                                  "Shared Written Blocks": 0,
                                  "Local Hit Blocks": 0,
                                  "Local Read Blocks": 0,
                                  "Local Dirtied Blocks": 0,
                                  "Local Written Blocks": 0,
                                  "Temp Read Blocks": 0,
                                  "Temp Written Blocks": 0,
                                  "I/O Read Time": 0.000,
                                  "I/O Write Time": 0.000
                                },
                                {
                                  "Node Type": "Hash",
                                  "Parent Relationship": "Inner",
                                  "Startup Cost": 3.52,
                                  "Total Cost": 3.52,
                                  "Plan Rows": 176,
                                  "Plan Width": 36,
                                  "Actual Startup Time": 4.228,
                                  "Actual Total Time": 4.228,
                                  "Actual Rows": 311,
                                  "Actual Loops": 1,
                                  "Output": ["pcc.available_colors", "pcc.product_id"],
                                  "Hash Buckets": 1024,
                                  "Original Hash Buckets": 1024,
                                  "Hash Batches": 1,
                                  "Original Hash Batches": 1,
                                  "Peak Memory Usage": 31,
                                  "Shared Hit Blocks": 1295,
                                  "Shared Read Blocks": 0,
                                  "Shared Dirtied Blocks": 0,
                                  "Shared Written Blocks": 0,
                                  "Local Hit Blocks": 0,
                                  "Local Read Blocks": 0,
                                  "Local Dirtied Blocks": 0,
                                  "Local Written Blocks": 0,
                                  "Temp Read Blocks": 0,
                                  "Temp Written Blocks": 0,
                                  "I/O Read Time": 0.000,
                                  "I/O Write Time": 0.000,
                                  "Plans": [
                                    {
                                      "Node Type": "CTE Scan",
                                      "Parent Relationship": "Outer",
                                      "CTE Name": "product_color_classifications",
                                      "Alias": "pcc",
                                      "Startup Cost": 0.00,
                                      "Total Cost": 3.52,
                                      "Plan Rows": 176,
                                      "Plan Width": 36,
                                      "Actual Startup Time": 2.801,
                                      "Actual Total Time": 4.136,
                                      "Actual Rows": 311,
                                      "Actual Loops": 1,
                                      "Output": ["pcc.available_colors", "pcc.product_id"],
                                      "Shared Hit Blocks": 1295,
                                      "Shared Read Blocks": 0,
                                      "Shared Dirtied Blocks": 0,
                                      "Shared Written Blocks": 0,
                                      "Local Hit Blocks": 0,
                                      "Local Read Blocks": 0,
                                      "Local Dirtied Blocks": 0,
                                      "Local Written Blocks": 0,
                                      "Temp Read Blocks": 0,
                                      "Temp Written Blocks": 0,
                                      "I/O Read Time": 0.000,
                                      "I/O Write Time": 0.000
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Node Type": "Hash",
                      "Parent Relationship": "Inner",
                      "Startup Cost": 3.52,
                      "Total Cost": 3.52,
                      "Plan Rows": 176,
                      "Plan Width": 36,
                      "Actual Startup Time": 2.018,
                      "Actual Total Time": 2.018,
                      "Actual Rows": 352,
                      "Actual Loops": 1,
                      "Output": ["vc.color", "vc.variant_id"],
                      "Hash Buckets": 1024,
                      "Original Hash Buckets": 1024,
                      "Hash Batches": 1,
                      "Original Hash Batches": 1,
                      "Peak Memory Usage": 26,
                      "Shared Hit Blocks": 1287,
                      "Shared Read Blocks": 0,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "CTE Scan",
                          "Parent Relationship": "Outer",
                          "CTE Name": "variant_colors",
                          "Alias": "vc",
                          "Startup Cost": 0.00,
                          "Total Cost": 3.52,
                          "Plan Rows": 176,
                          "Plan Width": 36,
                          "Actual Startup Time": 0.358,
                          "Actual Total Time": 1.945,
                          "Actual Rows": 352,
                          "Actual Loops": 1,
                          "Output": ["vc.color", "vc.variant_id"],
                          "Shared Hit Blocks": 1287,
                          "Shared Read Blocks": 0,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "Planning Time": 4.462,
    "Triggers": [
    ],
    "Execution Time": 14.391
  }
]
`,Zu=`
[
  {
    "Plan": {
      "Node Type": "Limit",
      "Startup Cost": 17024.84,
      "Total Cost": 17024.87,
      "Plan Rows": 10,
      "Plan Width": 133,
      "Actual Startup Time": 725.773,
      "Actual Total Time": 725.775,
      "Actual Rows": 10,
      "Actual Loops": 1,
      "Output": ["c.state", "cat.categoryname", "(sum(o.netamount))", "(sum(o.totalamount))"],
      "Shared Hit Blocks": 23,
      "Shared Read Blocks": 1392,
      "Shared Dirtied Blocks": 0,
      "Shared Written Blocks": 0,
      "Local Hit Blocks": 0,
      "Local Read Blocks": 0,
      "Local Dirtied Blocks": 0,
      "Local Written Blocks": 0,
      "Temp Read Blocks": 0,
      "Temp Written Blocks": 0,
      "I/O Read Time": 0.000,
      "I/O Write Time": 0.000,
      "Plans": [
        {
          "Node Type": "Sort",
          "Parent Relationship": "Outer",
          "Startup Cost": 17024.84,
          "Total Cost": 17026.88,
          "Plan Rows": 816,
          "Plan Width": 133,
          "Actual Startup Time": 725.771,
          "Actual Total Time": 725.772,
          "Actual Rows": 11,
          "Actual Loops": 1,
          "Output": ["c.state", "cat.categoryname", "(sum(o.netamount))", "(sum(o.totalamount))"],
          "Sort Key": ["c.state", "(sum(o.totalamount))"],
          "Sort Method": "top-N heapsort",
          "Sort Space Used": 25,
          "Sort Space Type": "Memory",
          "Shared Hit Blocks": 23,
          "Shared Read Blocks": 1392,
          "Shared Dirtied Blocks": 0,
          "Shared Written Blocks": 0,
          "Local Hit Blocks": 0,
          "Local Read Blocks": 0,
          "Local Dirtied Blocks": 0,
          "Local Written Blocks": 0,
          "Temp Read Blocks": 0,
          "Temp Written Blocks": 0,
          "I/O Read Time": 0.000,
          "I/O Write Time": 0.000,
          "Plans": [
            {
              "Node Type": "Aggregate",
              "Strategy": "Hashed",
              "Parent Relationship": "Outer",
              "Startup Cost": 16994.41,
              "Total Cost": 17006.65,
              "Plan Rows": 816,
              "Plan Width": 133,
              "Actual Startup Time": 723.877,
              "Actual Total Time": 724.417,
              "Actual Rows": 832,
              "Actual Loops": 1,
              "Output": ["c.state", "cat.categoryname", "sum(o.netamount)", "sum(o.totalamount)"],
              "Group Key": ["c.state", "cat.categoryname"],
              "Shared Hit Blocks": 13,
              "Shared Read Blocks": 1392,
              "Shared Dirtied Blocks": 0,
              "Shared Written Blocks": 0,
              "Local Hit Blocks": 0,
              "Local Read Blocks": 0,
              "Local Dirtied Blocks": 0,
              "Local Written Blocks": 0,
              "Temp Read Blocks": 0,
              "Temp Written Blocks": 0,
              "I/O Read Time": 0.000,
              "I/O Write Time": 0.000,
              "Plans": [
                {
                  "Node Type": "Hash Join",
                  "Parent Relationship": "Outer",
                  "Join Type": "Inner",
                  "Startup Cost": 4966.48,
                  "Total Cost": 13742.65,
                  "Plan Rows": 325176,
                  "Plan Width": 133,
                  "Actual Startup Time": 118.314,
                  "Actual Total Time": 354.285,
                  "Actual Rows": 383270,
                  "Actual Loops": 1,
                  "Output": ["c.state", "o.netamount", "o.totalamount", "cat.categoryname"],
                  "Hash Cond": "(o.orderid = ch.orderid)",
                  "Shared Hit Blocks": 13,
                  "Shared Read Blocks": 1392,
                  "Shared Dirtied Blocks": 0,
                  "Shared Written Blocks": 0,
                  "Local Hit Blocks": 0,
                  "Local Read Blocks": 0,
                  "Local Dirtied Blocks": 0,
                  "Local Written Blocks": 0,
                  "Temp Read Blocks": 0,
                  "Temp Written Blocks": 0,
                  "I/O Read Time": 0.000,
                  "I/O Write Time": 0.000,
                  "Plans": [
                    {
                      "Node Type": "Hash Join",
                      "Parent Relationship": "Outer",
                      "Join Type": "Inner",
                      "Startup Cost": 834.86,
                      "Total Cost": 4539.11,
                      "Plan Rows": 60350,
                      "Plan Width": 138,
                      "Actual Startup Time": 22.651,
                      "Actual Total Time": 133.484,
                      "Actual Rows": 60350,
                      "Actual Loops": 1,
                      "Output": ["o.netamount", "o.totalamount", "o.orderid", "ol.orderid", "cat.categoryname"],
                      "Hash Cond": "(ol.orderid = o.orderid)",
                      "Shared Hit Blocks": 9,
                      "Shared Read Blocks": 581,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "Hash Join",
                          "Parent Relationship": "Outer",
                          "Join Type": "Inner",
                          "Startup Cost": 464.86,
                          "Total Cost": 2962.11,
                          "Plan Rows": 60350,
                          "Plan Width": 122,
                          "Actual Startup Time": 12.467,
                          "Actual Total Time": 85.647,
                          "Actual Rows": 60350,
                          "Actual Loops": 1,
                          "Output": ["ol.orderid", "cat.categoryname"],
                          "Hash Cond": "(ol.prod_id = p.prod_id)",
                          "Shared Hit Blocks": 4,
                          "Shared Read Blocks": 483,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "Seq Scan",
                              "Parent Relationship": "Outer",
                              "Relation Name": "orderlines",
                              "Schema": "public",
                              "Alias": "ol",
                              "Startup Cost": 0.00,
                              "Total Cost": 988.50,
                              "Plan Rows": 60350,
                              "Plan Width": 8,
                              "Actual Startup Time": 0.005,
                              "Actual Total Time": 14.054,
                              "Actual Rows": 60350,
                              "Actual Loops": 1,
                              "Output": ["ol.orderlineid", "ol.orderid", "ol.prod_id", "ol.quantity", "ol.orderdate"],
                              "Shared Hit Blocks": 2,
                              "Shared Read Blocks": 383,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000
                            },
                            {
                              "Node Type": "Hash",
                              "Parent Relationship": "Inner",
                              "Startup Cost": 339.86,
                              "Total Cost": 339.86,
                              "Plan Rows": 10000,
                              "Plan Width": 122,
                              "Actual Startup Time": 12.446,
                              "Actual Total Time": 12.446,
                              "Actual Rows": 10000,
                              "Actual Loops": 1,
                              "Output": ["p.prod_id", "cat.categoryname"],
                              "Hash Buckets": 1024,
                              "Hash Batches": 1,
                              "Original Hash Batches": 1,
                              "Peak Memory Usage": 425,
                              "Shared Hit Blocks": 2,
                              "Shared Read Blocks": 100,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000,
                              "Plans": [
                                {
                                  "Node Type": "Hash Join",
                                  "Parent Relationship": "Outer",
                                  "Join Type": "Inner",
                                  "Startup Cost": 1.36,
                                  "Total Cost": 339.86,
                                  "Plan Rows": 10000,
                                  "Plan Width": 122,
                                  "Actual Startup Time": 0.283,
                                  "Actual Total Time": 9.015,
                                  "Actual Rows": 10000,
                                  "Actual Loops": 1,
                                  "Output": ["p.prod_id", "cat.categoryname"],
                                  "Hash Cond": "(p.category = cat.category)",
                                  "Shared Hit Blocks": 2,
                                  "Shared Read Blocks": 100,
                                  "Shared Dirtied Blocks": 0,
                                  "Shared Written Blocks": 0,
                                  "Local Hit Blocks": 0,
                                  "Local Read Blocks": 0,
                                  "Local Dirtied Blocks": 0,
                                  "Local Written Blocks": 0,
                                  "Temp Read Blocks": 0,
                                  "Temp Written Blocks": 0,
                                  "I/O Read Time": 0.000,
                                  "I/O Write Time": 0.000,
                                  "Plans": [
                                    {
                                      "Node Type": "Seq Scan",
                                      "Parent Relationship": "Outer",
                                      "Relation Name": "products",
                                      "Schema": "public",
                                      "Alias": "p",
                                      "Startup Cost": 0.00,
                                      "Total Cost": 201.00,
                                      "Plan Rows": 10000,
                                      "Plan Width": 8,
                                      "Actual Startup Time": 0.003,
                                      "Actual Total Time": 4.330,
                                      "Actual Rows": 10000,
                                      "Actual Loops": 1,
                                      "Output": ["p.prod_id", "p.category", "p.title", "p.actor", "p.price", "p.special", "p.common_prod_id"],
                                      "Shared Hit Blocks": 2,
                                      "Shared Read Blocks": 99,
                                      "Shared Dirtied Blocks": 0,
                                      "Shared Written Blocks": 0,
                                      "Local Hit Blocks": 0,
                                      "Local Read Blocks": 0,
                                      "Local Dirtied Blocks": 0,
                                      "Local Written Blocks": 0,
                                      "Temp Read Blocks": 0,
                                      "Temp Written Blocks": 0,
                                      "I/O Read Time": 0.000,
                                      "I/O Write Time": 0.000
                                    },
                                    {
                                      "Node Type": "Hash",
                                      "Parent Relationship": "Inner",
                                      "Startup Cost": 1.16,
                                      "Total Cost": 1.16,
                                      "Plan Rows": 16,
                                      "Plan Width": 122,
                                      "Actual Startup Time": 0.265,
                                      "Actual Total Time": 0.265,
                                      "Actual Rows": 16,
                                      "Actual Loops": 1,
                                      "Output": ["cat.categoryname", "cat.category"],
                                      "Hash Buckets": 1024,
                                      "Hash Batches": 1,
                                      "Original Hash Batches": 1,
                                      "Peak Memory Usage": 1,
                                      "Shared Hit Blocks": 0,
                                      "Shared Read Blocks": 1,
                                      "Shared Dirtied Blocks": 0,
                                      "Shared Written Blocks": 0,
                                      "Local Hit Blocks": 0,
                                      "Local Read Blocks": 0,
                                      "Local Dirtied Blocks": 0,
                                      "Local Written Blocks": 0,
                                      "Temp Read Blocks": 0,
                                      "Temp Written Blocks": 0,
                                      "I/O Read Time": 0.000,
                                      "I/O Write Time": 0.000,
                                      "Plans": [
                                        {
                                          "Node Type": "Seq Scan",
                                          "Parent Relationship": "Outer",
                                          "Relation Name": "categories",
                                          "Schema": "public",
                                          "Alias": "cat",
                                          "Startup Cost": 0.00,
                                          "Total Cost": 1.16,
                                          "Plan Rows": 16,
                                          "Plan Width": 122,
                                          "Actual Startup Time": 0.250,
                                          "Actual Total Time": 0.252,
                                          "Actual Rows": 16,
                                          "Actual Loops": 1,
                                          "Output": ["cat.categoryname", "cat.category"],
                                          "Shared Hit Blocks": 0,
                                          "Shared Read Blocks": 1,
                                          "Shared Dirtied Blocks": 0,
                                          "Shared Written Blocks": 0,
                                          "Local Hit Blocks": 0,
                                          "Local Read Blocks": 0,
                                          "Local Dirtied Blocks": 0,
                                          "Local Written Blocks": 0,
                                          "Temp Read Blocks": 0,
                                          "Temp Written Blocks": 0,
                                          "I/O Read Time": 0.000,
                                          "I/O Write Time": 0.000
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Node Type": "Hash",
                          "Parent Relationship": "Inner",
                          "Startup Cost": 220.00,
                          "Total Cost": 220.00,
                          "Plan Rows": 12000,
                          "Plan Width": 16,
                          "Actual Startup Time": 10.159,
                          "Actual Total Time": 10.159,
                          "Actual Rows": 12000,
                          "Actual Loops": 1,
                          "Output": ["o.netamount", "o.totalamount", "o.orderid"],
                          "Hash Buckets": 2048,
                          "Hash Batches": 1,
                          "Original Hash Batches": 1,
                          "Peak Memory Usage": 609,
                          "Shared Hit Blocks": 2,
                          "Shared Read Blocks": 98,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "Seq Scan",
                              "Parent Relationship": "Outer",
                              "Relation Name": "orders",
                              "Schema": "public",
                              "Alias": "o",
                              "Startup Cost": 0.00,
                              "Total Cost": 220.00,
                              "Plan Rows": 12000,
                              "Plan Width": 16,
                              "Actual Startup Time": 0.008,
                              "Actual Total Time": 5.548,
                              "Actual Rows": 12000,
                              "Actual Loops": 1,
                              "Output": ["o.netamount", "o.totalamount", "o.orderid"],
                              "Shared Hit Blocks": 2,
                              "Shared Read Blocks": 98,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Node Type": "Hash",
                      "Parent Relationship": "Inner",
                      "Startup Cost": 3377.25,
                      "Total Cost": 3377.25,
                      "Plan Rows": 60350,
                      "Plan Width": 7,
                      "Actual Startup Time": 95.610,
                      "Actual Total Time": 95.610,
                      "Actual Rows": 60350,
                      "Actual Loops": 1,
                      "Output": ["c.state", "ch.orderid"],
                      "Hash Buckets": 8192,
                      "Hash Batches": 1,
                      "Original Hash Batches": 1,
                      "Peak Memory Usage": 2239,
                      "Shared Hit Blocks": 4,
                      "Shared Read Blocks": 811,
                      "Shared Dirtied Blocks": 0,
                      "Shared Written Blocks": 0,
                      "Local Hit Blocks": 0,
                      "Local Read Blocks": 0,
                      "Local Dirtied Blocks": 0,
                      "Local Written Blocks": 0,
                      "Temp Read Blocks": 0,
                      "Temp Written Blocks": 0,
                      "I/O Read Time": 0.000,
                      "I/O Write Time": 0.000,
                      "Plans": [
                        {
                          "Node Type": "Hash Join",
                          "Parent Relationship": "Outer",
                          "Join Type": "Inner",
                          "Startup Cost": 938.00,
                          "Total Cost": 3377.25,
                          "Plan Rows": 60350,
                          "Plan Width": 7,
                          "Actual Startup Time": 24.115,
                          "Actual Total Time": 74.639,
                          "Actual Rows": 60350,
                          "Actual Loops": 1,
                          "Output": ["c.state", "ch.orderid"],
                          "Hash Cond": "(ch.customerid = c.customerid)",
                          "Shared Hit Blocks": 4,
                          "Shared Read Blocks": 811,
                          "Shared Dirtied Blocks": 0,
                          "Shared Written Blocks": 0,
                          "Local Hit Blocks": 0,
                          "Local Read Blocks": 0,
                          "Local Dirtied Blocks": 0,
                          "Local Written Blocks": 0,
                          "Temp Read Blocks": 0,
                          "Temp Written Blocks": 0,
                          "I/O Read Time": 0.000,
                          "I/O Write Time": 0.000,
                          "Plans": [
                            {
                              "Node Type": "Seq Scan",
                              "Parent Relationship": "Outer",
                              "Relation Name": "cust_hist",
                              "Schema": "public",
                              "Alias": "ch",
                              "Startup Cost": 0.00,
                              "Total Cost": 930.50,
                              "Plan Rows": 60350,
                              "Plan Width": 8,
                              "Actual Startup Time": 0.294,
                              "Actual Total Time": 11.812,
                              "Actual Rows": 60350,
                              "Actual Loops": 1,
                              "Output": ["ch.customerid", "ch.orderid", "ch.prod_id"],
                              "Shared Hit Blocks": 2,
                              "Shared Read Blocks": 325,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000
                            },
                            {
                              "Node Type": "Hash",
                              "Parent Relationship": "Inner",
                              "Startup Cost": 688.00,
                              "Total Cost": 688.00,
                              "Plan Rows": 20000,
                              "Plan Width": 7,
                              "Actual Startup Time": 23.786,
                              "Actual Total Time": 23.786,
                              "Actual Rows": 20000,
                              "Actual Loops": 1,
                              "Output": ["c.state", "c.customerid"],
                              "Hash Buckets": 2048,
                              "Hash Batches": 1,
                              "Original Hash Batches": 1,
                              "Peak Memory Usage": 743,
                              "Shared Hit Blocks": 2,
                              "Shared Read Blocks": 486,
                              "Shared Dirtied Blocks": 0,
                              "Shared Written Blocks": 0,
                              "Local Hit Blocks": 0,
                              "Local Read Blocks": 0,
                              "Local Dirtied Blocks": 0,
                              "Local Written Blocks": 0,
                              "Temp Read Blocks": 0,
                              "Temp Written Blocks": 0,
                              "I/O Read Time": 0.000,
                              "I/O Write Time": 0.000,
                              "Plans": [
                                {
                                  "Node Type": "Seq Scan",
                                  "Parent Relationship": "Outer",
                                  "Relation Name": "customers",
                                  "Schema": "public",
                                  "Alias": "c",
                                  "Startup Cost": 0.00,
                                  "Total Cost": 688.00,
                                  "Plan Rows": 20000,
                                  "Plan Width": 7,
                                  "Actual Startup Time": 0.005,
                                  "Actual Total Time": 16.771,
                                  "Actual Rows": 20000,
                                  "Actual Loops": 1,
                                  "Output": ["c.state", "c.customerid"],
                                  "Shared Hit Blocks": 2,
                                  "Shared Read Blocks": 486,
                                  "Shared Dirtied Blocks": 0,
                                  "Shared Written Blocks": 0,
                                  "Local Hit Blocks": 0,
                                  "Local Read Blocks": 0,
                                  "Local Dirtied Blocks": 0,
                                  "Local Written Blocks": 0,
                                  "Temp Read Blocks": 0,
                                  "Temp Written Blocks": 0,
                                  "I/O Read Time": 0.000,
                                  "I/O Write Time": 0.000
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "Planning Time": 26.171,
    "Triggers": [
    ],
    "Execution Time": 726.800
  }
]
`,Xu=`/* An aggregate with four joins */
SELECT c.state,
  cat.categoryname,
  sum(o.netamount),
  sum(o.totalamount)
FROM customers c
  INNER JOIN cust_hist ch ON c.customerid = ch.customerid
  INNER JOIN orders o ON ch.orderid = o.orderid
  INNER JOIN orderlines ol ON ol.orderid = o.orderid
  INNER JOIN products p ON ol.prod_id = p.prod_id
  INNER JOIN categories cat ON p.category = cat.category
GROUP BY c.state, cat.categoryname
ORDER BY c.state, sum(o.totalamount) DESC LIMIT 10 OFFSET 1;
`,Qu=`"Limit  (cost=1.27..3878.21 rows=5 width=172) (actual time=0.245..2.544 rows=5 loops=1)"
"  ->  Nested Loop  (cost=1.27..48075.41 rows=62 width=172) (actual time=0.244..2.539 rows=5 loops=1)"
"        ->  Nested Loop  (cost=0.84..2420.02 rows=65 width=85) (actual time=0.137..0.151 rows=5 loops=1)"
"              ->  Nested Loop  (cost=0.42..2356.20 rows=5 width=85) (actual time=0.118..0.119 rows=1 loops=1)"
"                    ->  Seq Scan on top_challenge_list  (cost=0.00..30.26 rows=58 width=57) (actual time=0.036..0.043 rows=4 loops=1)"
"                          Filter: (is_active AND ((template_challenge)::text = 'top_turnover'::text))"
"                          Rows Removed by Filter: 26"
"                    ->  Index Scan using ref_people_xperf1 on ref_people  (cost=0.42..40.09 rows=1 width=28) (actual time=0.017..0.017 rows=0 loops=4)"
"                          Index Cond: (id_int = top_challenge_list.id_int_manager)"
"                          Filter: (is_active AND (id_statut <> 2) AND (COALESCE(id_qualification, 1) >= 1) AND (id_type = 5))"
"                          Rows Removed by Filter: 4"
"              ->  Index Scan using ref_genealogy_xperf5 on ref_genealogy  (cost=0.42..12.56 rows=20 width=8) (actual time=0.017..0.026 rows=5 loops=1)"
"                    Index Cond: (id_int = ref_people.id_int)"
"                    Filter: is_active"
"        ->  Index Scan using ref_people_xperf1 on ref_people filleuls  (cost=0.42..0.82 rows=1 width=47) (actual time=0.012..0.030 rows=1 loops=5)"
"              Index Cond: (id_int = ref_genealogy.id_int_level)"
"              Filter: (is_active AND (id_type = ANY ('{5,14}'::integer[])))"
"              Rows Removed by Filter: 7"
"        SubPlan 1"
"          ->  Aggregate  (cost=361.46..361.47 rows=1 width=8) (actual time=0.233..0.233 rows=1 loops=5)"
"                ->  Index Scan using ref_transaction_xperf4 on ref_transaction  (cost=0.42..361.46 rows=1 width=8) (actual time=0.155..0.229 rows=0 loops=5)"
"                      Index Cond: (id_int_agent_out = filleuls.id_int)"
"                      Filter: (is_active AND (date_acte IS NOT NULL) AND (date_acte >= top_challenge_list.date_deb_challenge) AND (date_acte <= top_challenge_list.date_fin_challenge) AND (id_type_transaction = 1))"
"                      Rows Removed by Filter: 100"
"        SubPlan 2"
"          ->  Aggregate  (cost=373.99..374.00 rows=1 width=8) (actual time=0.177..0.178 rows=1 loops=5)"
"                ->  Index Scan using ref_transaction_xperf3 on ref_transaction ref_transaction_1  (cost=0.42..373.99 rows=1 width=8) (actual time=0.117..0.174 rows=0 loops=5)"
"                      Index Cond: (id_int_agent_in = filleuls.id_int)"
"                      Filter: (is_active AND (date_acte IS NOT NULL) AND (date_acte >= top_challenge_list.date_deb_challenge) AND (date_acte <= top_challenge_list.date_fin_challenge) AND (id_type_transaction = 1))"
"                      Rows Removed by Filter: 102"
"Planning Time: 2.916 ms"
"Execution Time: 2.900 ms"`,e0=String.raw`
                                                                         QUERY PLAN
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
 Merge on public.t1  (cost=1824058.07..1336099696.57 rows=0 width=0) (actual time=16254.981..16254.984 rows=0 loops=1)
   Tuples: deleted=2499999
   Buffers: shared hit=5002762 read=51294 dirtied=13514 written=8006, local hit=7541658 read=25779 dirtied=46608 written=67441, temp read=98262 written=150446
   WAL: records=2500630 fpi=8047 bytes=200763653
   CTE t2bb
     ->  Update on pg_temp.t2  (cost=0.00..54898.62 rows=2912462 width=14) (actual time=244.180..2939.572 rows=2499999 loops=1)
           Output: t2.i, t2.x, t2.filler
           Buffers: local hit=7541658 read=25779 dirtied=46608 written=67441
           ->  Seq Scan on pg_temp.t2  (cost=0.00..54898.62 rows=2912462 width=14) (actual time=226.341..690.083 rows=2499999 loops=1)
                 Output: NULL::double precision, t2.ctid
                 Buffers: local read=25774 dirtied=25774 written=25771
   CTE t2b
     ->  Sort  (cost=650151.19..657432.35 rows=2912462 width=52) (actual time=5387.848..5800.321 rows=2499999 loops=1)
           Output: t2bb.i, t2bb.x, t2bb.filler, (random())
           Sort Key: (random())
           Sort Method: external merge  Disk: 141936kB
           Buffers: shared hit=3, local hit=7541658 read=25779 dirtied=46608 written=67441, temp read=35480 written=49892
           ->  CTE Scan on t2bb  (cost=0.00..65530.39 rows=2912462 width=52) (actual time=244.188..3856.231 rows=2499999 loops=1)
                 Output: t2bb.i, t2bb.x, t2bb.filler, random()
                 Buffers: local hit=7541658 read=25779 dirtied=46608 written=67441, temp written=14343
   ->  Merge Left Join  (cost=1111727.10..1335387365.61 rows=88949720377 width=42) (actual time=10989.361..12903.243 rows=2499999 loops=1)
         Output: t1.ctid, t2b.i, t2b.filler
         Merge Cond: (t2b.i = t1.i)
         Buffers: shared hit=15647 read=38411 dirtied=631, local hit=7541658 read=25779 dirtied=46608 written=67441, temp read=98262 written=150446
         WAL: records=631 fpi=631 bytes=5182403
         ->  Sort  (cost=530235.49..537516.64 rows=2912462 width=36) (actual time=7556.652..7928.837 rows=2499999 loops=1)
               Output: t2b.i, t2b.filler
               Sort Key: t2b.i
               Sort Method: external merge  Disk: 115072kB
               Buffers: shared hit=3, local hit=7541658 read=25779 dirtied=46608 written=67441, temp read=64238 written=96414
               ->  CTE Scan on t2b  (cost=0.00..58249.24 rows=2912462 width=36) (actual time=5387.869..6356.641 rows=2499999 loops=1)
                     Output: t2b.i, t2b.filler
                     Buffers: shared hit=3, local hit=7541658 read=25779 dirtied=46608 written=67441, temp read=35480 written=67592
         ->  Materialize  (cost=1012385.82..1042926.89 rows=6108215 width=10) (actual time=3432.664..4124.070 rows=2500000 loops=1)
               Output: t1.ctid, t1.i
               Buffers: shared hit=15644 read=38411 dirtied=631, temp read=34024 written=54032
               WAL: records=631 fpi=631 bytes=5182403
               ->  Sort  (cost=1012385.82..1027656.36 rows=6108215 width=10) (actual time=3432.659..3773.369 rows=2500000 loops=1)
                     Output: t1.ctid, t1.i
                     Sort Key: t1.i
                     Sort Method: external merge  Disk: 215352kB
                     Buffers: shared hit=15644 read=38411 dirtied=631, temp read=34024 written=54032
                     WAL: records=631 fpi=631 bytes=5182403
                     ->  Seq Scan on public.t1  (cost=0.00..115137.15 rows=6108215 width=10) (actual time=0.031..1073.371 rows=10000000 loops=1)
                           Output: t1.ctid, t1.i
                           Buffers: shared hit=15644 read=38411 dirtied=631
                           WAL: records=631 fpi=631 bytes=5182403
 Planning:
   Buffers: shared hit=21 read=7
 Planning Time: 0.237 ms
 JIT:
   Functions: 20
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 0.948 ms, Inlining 76.071 ms, Optimization 97.998 ms, Emission 70.028 ms, Total 245.045 ms
 Execution Time: 16365.829 ms
(55 lignes)
`,t0=String.raw`
-- create a plan with all written/buffers/shared/local/temp at once

\timing off

\set NB 10000000
\set MINIMUM :NB/4


SET synchronous_commit TO off;

\set ON_ERROR_STOP 1

\set ECHO queries

DROP TABLE  IF EXISTS t1, t2 ;

CREATE TABLE t1 (i int GENERATED BY DEFAULT AS IDENTITY, x float DEFAULT random(), filler text DEFAULT NULL) ;

CREATE TEMP TABLE t2 (LIKE t1);
VACUUM (ANALYZE,VERBOSE) t1,t2;

\d+ t1
\d+ t2

INSERT INTO t1 SELECT FROM generate_series (1,:NB) i ;

INSERT INTO t2 SELECT i,x,md5(i::text) FROM t1 WHERE i < :MINIMUM ;

\dt+ t?

SET work_mem TO '4MB' ;

\echo "Update T1 from a modified version of T2"

EXPLAIN (ANALYZE,BUFFERS,VERBOSE,SETTINGS,WAL)
WITH t2bb AS ( UPDATE t2 SET x=null RETURNING * ),
t2b AS ( SELECT * FROM t2bb ORDER BY random())
MERGE INTO t1
USING t2b
ON (t1.i=t2b.i)
WHEN NOT MATCHED AND t2b.i >= :MINIMUM THEN
  INSERT VALUES (t2b.i, null, t2b.filler)
WHEN MATCHED AND t2b.i < :MINIMUM THEN
  DELETE
WHEN MATCHED THEN
  UPDATE SET filler=t2b.filler, x=null ;
`,a0=`Append (actual time=102.409..302.675 rows=3 loops=1)
  CTE init
    ->  Append (actual time=102.397..302.649 rows=2 loops=1)
          ->  Function Scan on pg_sleep pg_sleep_for (actual time=102.396..102.398 rows=1 loops=1)
          ->  Function Scan on pg_sleep pg_sleep_for_1 (actual time=200.243..200.245 rows=1 loops=1)
  ->  Limit (actual time=102.407..102.409 rows=1 loops=1)
        ->  CTE Scan on init init_1 (actual time=102.402..102.402 rows=1 loops=1)
  ->  CTE Scan on init (actual time=0.001..200.256 rows=2 loops=1)
Planning Time: 47.003 ms
Execution Time: 303.905 ms
`,s0=`WITH init AS (
 SELECT * FROM pg_sleep_for('100ms')
 UNION ALL
 SELECT * FROM pg_sleep_for('200ms')
)
(SELECT * FROM init LIMIT 1)
UNION ALL
(SELECT * FROM init);
`,r0=String.raw`{
  "Plan": {
    "Node Type": "Hash Join",
    "Parallel Aware": false,
    "Join Type": "Left",
    "Startup Cost": 394.93,
    "Total Cost": 417.11,
    "Plan Rows": 12,
    "Plan Width": 316,
    "Actual Startup Time": 226.103,
    "Actual Total Time": 232.217,
    "Actual Rows": 62,
    "Actual Loops": 1,
    "Output": [
      "c.relname",
      "(pg_total_relation_size((c.oid)::regclass))",
      "(pg_indexes_size((c.oid)::regclass))",
      "(COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint))",
      "(((pg_total_relation_size((c.oid)::regclass)) - (pg_indexes_size((c.oid)::regclass))) - (COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint)))",
      "COALESCE((count(*)), '0'::bigint)",
      "pg_size_pretty((pg_total_relation_size((c.oid)::regclass)))",
      "pg_size_pretty((pg_indexes_size((c.oid)::regclass)))",
      "pg_size_pretty((COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint)))",
      "pg_size_pretty((((pg_total_relation_size((c.oid)::regclass)) - (pg_indexes_size((c.oid)::regclass))) - (COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint))))",
      "CASE WHEN ((((s.heappages + s.toastpages))::double precision - (ceil((s.reltuples / ((((s.bs - (s.page_hdr)::numeric) * (s.fillfactor)::numeric))::double precision / (((((((4 + s.tpl_hdr_size))::double precision + s.tpl_data_size) + ((2 * s.ma))::double precision) - (CASE WHEN ((s.tpl_hdr_size % (s.ma)::bigint) = 0) THEN (s.ma)::bigint ELSE (s.tpl_hdr_size % (s.ma)::bigint) END)::double precision) - (CASE WHEN (((ceil(s.tpl_data_size))::integer % s.ma) = 0) THEN s.ma ELSE ((ceil(s.tpl_data_size))::integer % s.ma) END)::double precision) * '100'::double precision)))) + ceil((s.toasttuples / '4'::double precision)))) > '0'::double precision) THEN ((((s.heappages + s.toastpages))::double precision - (ceil((s.reltuples / ((((s.bs - (s.page_hdr)::numeric) * (s.fillfactor)::numeric))::double precision / (((((((4 + s.tpl_hdr_size))::double precision + s.tpl_data_size) + ((2 * s.ma))::double precision) - (CASE WHEN ((s.tpl_hdr_size % (s.ma)::bigint) = 0) THEN (s.ma)::bigint ELSE (s.tpl_hdr_size % (s.ma)::bigint) END)::double precision) - (CASE WHEN (((ceil(s.tpl_data_size))::integer % s.ma) = 0) THEN s.ma ELSE ((ceil(s.tpl_data_size))::integer % s.ma) END)::double precision) * '100'::double precision)))) + ceil((s.toasttuples / '4'::double precision)))) * (s.bs)::double precision) ELSE '0'::double precision END",
      "pg_size_pretty((CASE WHEN ((((s.heappages + s.toastpages))::double precision - (ceil((s.reltuples / ((((s.bs - (s.page_hdr)::numeric) * (s.fillfactor)::numeric))::double precision / (((((((4 + s.tpl_hdr_size))::double precision + s.tpl_data_size) + ((2 * s.ma))::double precision) - (CASE WHEN ((s.tpl_hdr_size % (s.ma)::bigint) = 0) THEN (s.ma)::bigint ELSE (s.tpl_hdr_size % (s.ma)::bigint) END)::double precision) - (CASE WHEN (((ceil(s.tpl_data_size))::integer % s.ma) = 0) THEN s.ma ELSE ((ceil(s.tpl_data_size))::integer % s.ma) END)::double precision) * '100'::double precision)))) + ceil((s.toasttuples / '4'::double precision)))) > '0'::double precision) THEN ((((s.heappages + s.toastpages))::double precision - (ceil((s.reltuples / ((((s.bs - (s.page_hdr)::numeric) * (s.fillfactor)::numeric))::double precision / (((((((4 + s.tpl_hdr_size))::double precision + s.tpl_data_size) + ((2 * s.ma))::double precision) - (CASE WHEN ((s.tpl_hdr_size % (s.ma)::bigint) = 0) THEN (s.ma)::bigint ELSE (s.tpl_hdr_size % (s.ma)::bigint) END)::double precision) - (CASE WHEN (((ceil(s.tpl_data_size))::integer % s.ma) = 0) THEN s.ma ELSE ((ceil(s.tpl_data_size))::integer % s.ma) END)::double precision) * '100'::double precision)))) + ceil((s.toasttuples / '4'::double precision)))) * (s.bs)::double precision) ELSE '0'::double precision END)::bigint)",
      "(sum((CASE WHEN ((q.relpages)::double precision > COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision)) THEN ((((current_setting('block_size'::text))::numeric))::double precision * ((q.relpages)::double precision - COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision))) ELSE '0'::double precision END)))",
      "pg_size_pretty(((sum((CASE WHEN ((q.relpages)::double precision > COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision)) THEN ((((current_setting('block_size'::text))::numeric))::double precision * ((q.relpages)::double precision - COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision))) ELSE '0'::double precision END))))::bigint)",
      "c.reltuples"
    ],
    "Inner Unique": true,
    "Hash Cond": "((n.nspname = q.nspname) AND (c.relname = q.tblname))",
    "Shared Hit Blocks": 218101,
    "Shared Read Blocks": 0,
    "Shared Dirtied Blocks": 0,
    "Shared Written Blocks": 0,
    "Local Hit Blocks": 0,
    "Local Read Blocks": 0,
    "Local Dirtied Blocks": 0,
    "Local Written Blocks": 0,
    "Temp Read Blocks": 0,
    "Temp Written Blocks": 0,
    "Plans": [
      {
        "Node Type": "Hash Join",
        "Parent Relationship": "Outer",
        "Parallel Aware": false,
        "Join Type": "Inner",
        "Startup Cost": 211.58,
        "Total Cost": 228.59,
        "Plan Rows": 12,
        "Plan Width": 240,
        "Actual Startup Time": 35.727,
        "Actual Total Time": 41.452,
        "Actual Rows": 62,
        "Actual Loops": 1,
        "Output": [
          "c.relname",
          "(pg_total_relation_size((c.oid)::regclass))",
          "(pg_indexes_size((c.oid)::regclass))",
          "(COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint))",
          "c.reltuples",
          "n.nspname",
          "(count(*))",
          "s.heappages",
          "s.toastpages",
          "s.reltuples",
          "s.bs",
          "s.page_hdr",
          "s.fillfactor",
          "s.tpl_hdr_size",
          "s.tpl_data_size",
          "s.ma",
          "s.toasttuples"
        ],
        "Inner Unique": false,
        "Hash Cond": "(c.relname = s.tblname)",
        "Shared Hit Blocks": 2449,
        "Shared Read Blocks": 0,
        "Shared Dirtied Blocks": 0,
        "Shared Written Blocks": 0,
        "Local Hit Blocks": 0,
        "Local Read Blocks": 0,
        "Local Dirtied Blocks": 0,
        "Local Written Blocks": 0,
        "Temp Read Blocks": 0,
        "Temp Written Blocks": 0,
        "Plans": [
          {
            "Node Type": "Hash Join",
            "Parent Relationship": "Outer",
            "Parallel Aware": false,
            "Join Type": "Left",
            "Startup Cost": 42.71,
            "Total Cost": 59.55,
            "Plan Rows": 12,
            "Plan Width": 164,
            "Actual Startup Time": 0.697,
            "Actual Total Time": 6.325,
            "Actual Rows": 62,
            "Actual Loops": 1,
            "Output": [
              "c.relname",
              "(pg_total_relation_size((c.oid)::regclass))",
              "(pg_indexes_size((c.oid)::regclass))",
              "(COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint))",
              "c.reltuples",
              "n.nspname",
              "(count(*))"
            ],
            "Inner Unique": true,
            "Hash Cond": "(c.relname = c_1.relname)",
            "Shared Hit Blocks": 694,
            "Shared Read Blocks": 0,
            "Shared Dirtied Blocks": 0,
            "Shared Written Blocks": 0,
            "Local Hit Blocks": 0,
            "Local Read Blocks": 0,
            "Local Dirtied Blocks": 0,
            "Local Written Blocks": 0,
            "Temp Read Blocks": 0,
            "Temp Written Blocks": 0,
            "Plans": [
              {
                "Node Type": "Hash Join",
                "Parent Relationship": "Outer",
                "Parallel Aware": false,
                "Join Type": "Inner",
                "Startup Cost": 1.09,
                "Total Cost": 17.77,
                "Plan Rows": 12,
                "Plan Width": 160,
                "Actual Startup Time": 0.151,
                "Actual Total Time": 5.685,
                "Actual Rows": 62,
                "Actual Loops": 1,
                "Output": [
                  "NULL::oid",
                  "n.nspname",
                  "c.relname",
                  "c.reltuples",
                  "pg_total_relation_size((c.oid)::regclass)",
                  "pg_indexes_size((c.oid)::regclass)",
                  "COALESCE(pg_total_relation_size((c.reltoastrelid)::regclass), '0'::bigint)"
                ],
                "Inner Unique": true,
                "Hash Cond": "(c.relnamespace = n.oid)",
                "Shared Hit Blocks": 663,
                "Shared Read Blocks": 0,
                "Shared Dirtied Blocks": 0,
                "Shared Written Blocks": 0,
                "Local Hit Blocks": 0,
                "Local Read Blocks": 0,
                "Local Dirtied Blocks": 0,
                "Local Written Blocks": 0,
                "Temp Read Blocks": 0,
                "Temp Written Blocks": 0,
                "Plans": [
                  {
                    "Node Type": "Seq Scan",
                    "Parent Relationship": "Outer",
                    "Parallel Aware": false,
                    "Relation Name": "pg_class",
                    "Schema": "pg_catalog",
                    "Alias": "c",
                    "Startup Cost": 0.0,
                    "Total Cost": 16.27,
                    "Plan Rows": 69,
                    "Plan Width": 80,
                    "Actual Startup Time": 0.014,
                    "Actual Total Time": 0.135,
                    "Actual Rows": 71,
                    "Actual Loops": 1,
                    "Output": [
                      "c.relname",
                      "c.reltuples",
                      "c.oid",
                      "c.reltoastrelid",
                      "c.relnamespace"
                    ],
                    "Filter": "(c.relkind = 'r'::\"char\")",
                    "Rows Removed by Filter": 277,
                    "Shared Hit Blocks": 12,
                    "Shared Read Blocks": 0,
                    "Shared Dirtied Blocks": 0,
                    "Shared Written Blocks": 0,
                    "Local Hit Blocks": 0,
                    "Local Read Blocks": 0,
                    "Local Dirtied Blocks": 0,
                    "Local Written Blocks": 0,
                    "Temp Read Blocks": 0,
                    "Temp Written Blocks": 0
                  },
                  {
                    "Node Type": "Hash",
                    "Parent Relationship": "Inner",
                    "Parallel Aware": false,
                    "Startup Cost": 1.07,
                    "Total Cost": 1.07,
                    "Plan Rows": 1,
                    "Plan Width": 68,
                    "Actual Startup Time": 0.014,
                    "Actual Total Time": 0.014,
                    "Actual Rows": 1,
                    "Actual Loops": 1,
                    "Output": ["n.nspname", "n.oid"],
                    "Hash Buckets": 1024,
                    "Original Hash Buckets": 1024,
                    "Hash Batches": 1,
                    "Original Hash Batches": 1,
                    "Peak Memory Usage": 9,
                    "Shared Hit Blocks": 1,
                    "Shared Read Blocks": 0,
                    "Shared Dirtied Blocks": 0,
                    "Shared Written Blocks": 0,
                    "Local Hit Blocks": 0,
                    "Local Read Blocks": 0,
                    "Local Dirtied Blocks": 0,
                    "Local Written Blocks": 0,
                    "Temp Read Blocks": 0,
                    "Temp Written Blocks": 0,
                    "Plans": [
                      {
                        "Node Type": "Seq Scan",
                        "Parent Relationship": "Outer",
                        "Parallel Aware": false,
                        "Relation Name": "pg_namespace",
                        "Schema": "pg_catalog",
                        "Alias": "n",
                        "Startup Cost": 0.0,
                        "Total Cost": 1.07,
                        "Plan Rows": 1,
                        "Plan Width": 68,
                        "Actual Startup Time": 0.006,
                        "Actual Total Time": 0.007,
                        "Actual Rows": 1,
                        "Actual Loops": 1,
                        "Output": ["n.nspname", "n.oid"],
                        "Filter": "(n.nspname = 'pg_catalog'::name)",
                        "Rows Removed by Filter": 6,
                        "Shared Hit Blocks": 1,
                        "Shared Read Blocks": 0,
                        "Shared Dirtied Blocks": 0,
                        "Shared Written Blocks": 0,
                        "Local Hit Blocks": 0,
                        "Local Read Blocks": 0,
                        "Local Dirtied Blocks": 0,
                        "Local Written Blocks": 0,
                        "Temp Read Blocks": 0,
                        "Temp Written Blocks": 0
                      }
                    ]
                  }
                ]
              },
              {
                "Node Type": "Hash",
                "Parent Relationship": "Inner",
                "Parallel Aware": false,
                "Startup Cost": 41.44,
                "Total Cost": 41.44,
                "Plan Rows": 14,
                "Plan Width": 72,
                "Actual Startup Time": 0.529,
                "Actual Total Time": 0.529,
                "Actual Rows": 62,
                "Actual Loops": 1,
                "Output": ["(count(*))", "c_1.relname"],
                "Hash Buckets": 1024,
                "Original Hash Buckets": 1024,
                "Hash Batches": 1,
                "Original Hash Batches": 1,
                "Peak Memory Usage": 15,
                "Shared Hit Blocks": 31,
                "Shared Read Blocks": 0,
                "Shared Dirtied Blocks": 0,
                "Shared Written Blocks": 0,
                "Local Hit Blocks": 0,
                "Local Read Blocks": 0,
                "Local Dirtied Blocks": 0,
                "Local Written Blocks": 0,
                "Temp Read Blocks": 0,
                "Temp Written Blocks": 0,
                "Plans": [
                  {
                    "Node Type": "Aggregate",
                    "Strategy": "Sorted",
                    "Partial Mode": "Simple",
                    "Parent Relationship": "Outer",
                    "Parallel Aware": false,
                    "Startup Cost": 41.06,
                    "Total Cost": 41.3,
                    "Plan Rows": 14,
                    "Plan Width": 72,
                    "Actual Startup Time": 0.474,
                    "Actual Total Time": 0.504,
                    "Actual Rows": 62,
                    "Actual Loops": 1,
                    "Output": ["count(*)", "c_1.relname"],
                    "Group Key": ["c_1.relname"],
                    "Shared Hit Blocks": 31,
                    "Shared Read Blocks": 0,
                    "Shared Dirtied Blocks": 0,
                    "Shared Written Blocks": 0,
                    "Local Hit Blocks": 0,
                    "Local Read Blocks": 0,
                    "Local Dirtied Blocks": 0,
                    "Local Written Blocks": 0,
                    "Temp Read Blocks": 0,
                    "Temp Written Blocks": 0,
                    "Plans": [
                      {
                        "Node Type": "Sort",
                        "Parent Relationship": "Outer",
                        "Parallel Aware": false,
                        "Startup Cost": 41.06,
                        "Total Cost": 41.09,
                        "Plan Rows": 14,
                        "Plan Width": 64,
                        "Actual Startup Time": 0.463,
                        "Actual Total Time": 0.469,
                        "Actual Rows": 116,
                        "Actual Loops": 1,
                        "Output": ["c_1.relname"],
                        "Sort Key": ["c_1.relname"],
                        "Sort Method": "quicksort",
                        "Sort Space Used": 41,
                        "Sort Space Type": "Memory",
                        "Shared Hit Blocks": 31,
                        "Shared Read Blocks": 0,
                        "Shared Dirtied Blocks": 0,
                        "Shared Written Blocks": 0,
                        "Local Hit Blocks": 0,
                        "Local Read Blocks": 0,
                        "Local Dirtied Blocks": 0,
                        "Local Written Blocks": 0,
                        "Temp Read Blocks": 0,
                        "Temp Written Blocks": 0,
                        "Plans": [
                          {
                            "Node Type": "Hash Join",
                            "Parent Relationship": "Outer",
                            "Parallel Aware": false,
                            "Join Type": "Inner",
                            "Startup Cost": 23.87,
                            "Total Cost": 40.79,
                            "Plan Rows": 14,
                            "Plan Width": 64,
                            "Actual Startup Time": 0.266,
                            "Actual Total Time": 0.366,
                            "Actual Rows": 116,
                            "Actual Loops": 1,
                            "Output": ["c_1.relname"],
                            "Inner Unique": false,
                            "Hash Cond": "(i.oid = x.indexrelid)",
                            "Shared Hit Blocks": 28,
                            "Shared Read Blocks": 0,
                            "Shared Dirtied Blocks": 0,
                            "Shared Written Blocks": 0,
                            "Local Hit Blocks": 0,
                            "Local Read Blocks": 0,
                            "Local Dirtied Blocks": 0,
                            "Local Written Blocks": 0,
                            "Temp Read Blocks": 0,
                            "Temp Written Blocks": 0,
                            "Plans": [
                              {
                                "Node Type": "Seq Scan",
                                "Parent Relationship": "Outer",
                                "Parallel Aware": false,
                                "Relation Name": "pg_class",
                                "Schema": "pg_catalog",
                                "Alias": "i",
                                "Startup Cost": 0.0,
                                "Total Cost": 16.27,
                                "Plan Rows": 135,
                                "Plan Width": 8,
                                "Actual Startup Time": 0.009,
                                "Actual Total Time": 0.09,
                                "Actual Rows": 137,
                                "Actual Loops": 1,
                                "Output": ["i.oid", "i.reltablespace"],
                                "Filter": "(i.relkind = 'i'::\"char\")",
                                "Rows Removed by Filter": 211,
                                "Shared Hit Blocks": 12,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0
                              },
                              {
                                "Node Type": "Hash",
                                "Parent Relationship": "Inner",
                                "Parallel Aware": false,
                                "Startup Cost": 23.42,
                                "Total Cost": 23.42,
                                "Plan Rows": 36,
                                "Plan Width": 68,
                                "Actual Startup Time": 0.237,
                                "Actual Total Time": 0.237,
                                "Actual Rows": 116,
                                "Actual Loops": 1,
                                "Output": ["x.indexrelid", "c_1.relname"],
                                "Hash Buckets": 1024,
                                "Original Hash Buckets": 1024,
                                "Hash Batches": 1,
                                "Original Hash Batches": 1,
                                "Peak Memory Usage": 20,
                                "Shared Hit Blocks": 16,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0,
                                "Plans": [
                                  {
                                    "Node Type": "Hash Join",
                                    "Parent Relationship": "Outer",
                                    "Parallel Aware": false,
                                    "Join Type": "Inner",
                                    "Startup Cost": 17.14,
                                    "Total Cost": 23.42,
                                    "Plan Rows": 36,
                                    "Plan Width": 68,
                                    "Actual Startup Time": 0.145,
                                    "Actual Total Time": 0.21,
                                    "Actual Rows": 116,
                                    "Actual Loops": 1,
                                    "Output": ["x.indexrelid", "c_1.relname"],
                                    "Inner Unique": true,
                                    "Hash Cond": "(x.indrelid = c_1.oid)",
                                    "Shared Hit Blocks": 16,
                                    "Shared Read Blocks": 0,
                                    "Shared Dirtied Blocks": 0,
                                    "Shared Written Blocks": 0,
                                    "Local Hit Blocks": 0,
                                    "Local Read Blocks": 0,
                                    "Local Dirtied Blocks": 0,
                                    "Local Written Blocks": 0,
                                    "Temp Read Blocks": 0,
                                    "Temp Written Blocks": 0,
                                    "Plans": [
                                      {
                                        "Node Type": "Seq Scan",
                                        "Parent Relationship": "Outer",
                                        "Parallel Aware": false,
                                        "Relation Name": "pg_index",
                                        "Schema": "pg_catalog",
                                        "Alias": "x",
                                        "Startup Cost": 0.0,
                                        "Total Cost": 5.8,
                                        "Plan Rows": 180,
                                        "Plan Width": 8,
                                        "Actual Startup Time": 0.005,
                                        "Actual Total Time": 0.018,
                                        "Actual Rows": 137,
                                        "Actual Loops": 1,
                                        "Output": [
                                          "x.indexrelid",
                                          "x.indrelid",
                                          "x.indnatts",
                                          "x.indnkeyatts",
                                          "x.indisunique",
                                          "x.indisprimary",
                                          "x.indisexclusion",
                                          "x.indimmediate",
                                          "x.indisclustered",
                                          "x.indisvalid",
                                          "x.indcheckxmin",
                                          "x.indisready",
                                          "x.indislive",
                                          "x.indisreplident",
                                          "x.indkey",
                                          "x.indcollation",
                                          "x.indclass",
                                          "x.indoption",
                                          "x.indexprs",
                                          "x.indpred"
                                        ],
                                        "Shared Hit Blocks": 4,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0
                                      },
                                      {
                                        "Node Type": "Hash",
                                        "Parent Relationship": "Inner",
                                        "Parallel Aware": false,
                                        "Startup Cost": 16.27,
                                        "Total Cost": 16.27,
                                        "Plan Rows": 69,
                                        "Plan Width": 72,
                                        "Actual Startup Time": 0.124,
                                        "Actual Total Time": 0.124,
                                        "Actual Rows": 71,
                                        "Actual Loops": 1,
                                        "Output": [
                                          "c_1.relname",
                                          "c_1.oid",
                                          "c_1.relnamespace"
                                        ],
                                        "Hash Buckets": 1024,
                                        "Original Hash Buckets": 1024,
                                        "Hash Batches": 1,
                                        "Original Hash Batches": 1,
                                        "Peak Memory Usage": 16,
                                        "Shared Hit Blocks": 12,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0,
                                        "Plans": [
                                          {
                                            "Node Type": "Seq Scan",
                                            "Parent Relationship": "Outer",
                                            "Parallel Aware": false,
                                            "Relation Name": "pg_class",
                                            "Schema": "pg_catalog",
                                            "Alias": "c_1",
                                            "Startup Cost": 0.0,
                                            "Total Cost": 16.27,
                                            "Plan Rows": 69,
                                            "Plan Width": 72,
                                            "Actual Startup Time": 0.005,
                                            "Actual Total Time": 0.11,
                                            "Actual Rows": 71,
                                            "Actual Loops": 1,
                                            "Output": [
                                              "c_1.relname",
                                              "c_1.oid",
                                              "c_1.relnamespace"
                                            ],
                                            "Filter": "(c_1.relkind = ANY ('{r,m}'::\"char\"[]))",
                                            "Rows Removed by Filter": 277,
                                            "Shared Hit Blocks": 12,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Node Type": "Hash",
            "Parent Relationship": "Inner",
            "Parallel Aware": false,
            "Startup Cost": 168.03,
            "Total Cost": 168.03,
            "Plan Rows": 68,
            "Plan Width": 204,
            "Actual Startup Time": 34.99,
            "Actual Total Time": 34.99,
            "Actual Rows": 62,
            "Actual Loops": 1,
            "Output": [
              "s.heappages",
              "s.toastpages",
              "s.reltuples",
              "s.bs",
              "s.page_hdr",
              "s.fillfactor",
              "s.tpl_hdr_size",
              "s.tpl_data_size",
              "s.ma",
              "s.toasttuples",
              "s.schemaname",
              "s.tblname"
            ],
            "Hash Buckets": 1024,
            "Original Hash Buckets": 1024,
            "Hash Batches": 1,
            "Original Hash Batches": 1,
            "Peak Memory Usage": 22,
            "Shared Hit Blocks": 1755,
            "Shared Read Blocks": 0,
            "Shared Dirtied Blocks": 0,
            "Shared Written Blocks": 0,
            "Local Hit Blocks": 0,
            "Local Read Blocks": 0,
            "Local Dirtied Blocks": 0,
            "Local Written Blocks": 0,
            "Temp Read Blocks": 0,
            "Temp Written Blocks": 0,
            "Plans": [
              {
                "Node Type": "Subquery Scan",
                "Parent Relationship": "Outer",
                "Parallel Aware": false,
                "Alias": "s",
                "Startup Cost": 160.72,
                "Total Cost": 168.03,
                "Plan Rows": 68,
                "Plan Width": 204,
                "Actual Startup Time": 34.381,
                "Actual Total Time": 34.907,
                "Actual Rows": 62,
                "Actual Loops": 1,
                "Output": [
                  "s.heappages",
                  "s.toastpages",
                  "s.reltuples",
                  "s.bs",
                  "s.page_hdr",
                  "s.fillfactor",
                  "s.tpl_hdr_size",
                  "s.tpl_data_size",
                  "s.ma",
                  "s.toasttuples",
                  "s.schemaname",
                  "s.tblname"
                ],
                "Shared Hit Blocks": 1755,
                "Shared Read Blocks": 0,
                "Shared Dirtied Blocks": 0,
                "Shared Written Blocks": 0,
                "Local Hit Blocks": 0,
                "Local Read Blocks": 0,
                "Local Dirtied Blocks": 0,
                "Local Written Blocks": 0,
                "Temp Read Blocks": 0,
                "Temp Written Blocks": 0,
                "Plans": [
                  {
                    "Node Type": "Aggregate",
                    "Strategy": "Sorted",
                    "Partial Mode": "Simple",
                    "Parent Relationship": "Subquery",
                    "Parallel Aware": false,
                    "Startup Cost": 160.72,
                    "Total Cost": 167.35,
                    "Plan Rows": 68,
                    "Plan Width": 210,
                    "Actual Startup Time": 34.375,
                    "Actual Total Time": 34.86,
                    "Actual Rows": 62,
                    "Actual Loops": 1,
                    "Output": [
                      "tbl.oid",
                      "ns.nspname",
                      "tbl.relname",
                      "tbl.reltuples",
                      "tbl.relpages",
                      "(COALESCE(toast.relpages, 0))",
                      "(COALESCE(toast.reltuples, '0'::real))",
                      "(COALESCE(((\"substring\"(array_to_string(tbl.reloptions, ' '::text), 'fillfactor=([0-9]+)'::text))::smallint)::integer, 100))",
                      "((current_setting('block_size'::text))::numeric)",
                      "(CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)",
                      "24",
                      "((23 + CASE WHEN (max(COALESCE(s_1.null_frac, '0'::real)) > '0'::double precision) THEN ((7 + count(*)) / 8) ELSE '0'::bigint END) + CASE WHEN tbl.relhasoids THEN 4 ELSE 0 END)",
                      "sum((('1'::double precision - COALESCE(s_1.null_frac, '0'::real)) * (COALESCE(s_1.avg_width, 1024))::double precision))",
                      "NULL::boolean",
                      "tbl.relhasoids"
                    ],
                    "Group Key": [
                      "ns.nspname",
                      "tbl.relname",
                      "tbl.oid",
                      "tbl.reltuples",
                      "tbl.relpages",
                      "(COALESCE(toast.relpages, 0))",
                      "(COALESCE(toast.reltuples, '0'::real))",
                      "(COALESCE(((\"substring\"(array_to_string(tbl.reloptions, ' '::text), 'fillfactor=([0-9]+)'::text))::smallint)::integer, 100))",
                      "((current_setting('block_size'::text))::numeric)",
                      "(CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)",
                      "tbl.relhasoids"
                    ],
                    "Shared Hit Blocks": 1755,
                    "Shared Read Blocks": 0,
                    "Shared Dirtied Blocks": 0,
                    "Shared Written Blocks": 0,
                    "Local Hit Blocks": 0,
                    "Local Read Blocks": 0,
                    "Local Dirtied Blocks": 0,
                    "Local Written Blocks": 0,
                    "Temp Read Blocks": 0,
                    "Temp Written Blocks": 0,
                    "Plans": [
                      {
                        "Node Type": "Sort",
                        "Parent Relationship": "Outer",
                        "Parallel Aware": false,
                        "Startup Cost": 160.72,
                        "Total Cost": 160.89,
                        "Plan Rows": 68,
                        "Plan Width": 197,
                        "Actual Startup Time": 34.295,
                        "Actual Total Time": 34.371,
                        "Actual Rows": 522,
                        "Actual Loops": 1,
                        "Output": [
                          "tbl.oid",
                          "ns.nspname",
                          "tbl.relname",
                          "tbl.reltuples",
                          "tbl.relpages",
                          "(COALESCE(toast.relpages, 0))",
                          "(COALESCE(toast.reltuples, '0'::real))",
                          "(COALESCE(((\"substring\"(array_to_string(tbl.reloptions, ' '::text), 'fillfactor=([0-9]+)'::text))::smallint)::integer, 100))",
                          "((current_setting('block_size'::text))::numeric)",
                          "(CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)",
                          "tbl.relhasoids",
                          "s_1.null_frac",
                          "s_1.avg_width"
                        ],
                        "Sort Key": [
                          "tbl.relname",
                          "tbl.oid",
                          "tbl.reltuples",
                          "tbl.relpages",
                          "(COALESCE(toast.relpages, 0))",
                          "(COALESCE(toast.reltuples, '0'::real))",
                          "(COALESCE(((\"substring\"(array_to_string(tbl.reloptions, ' '::text), 'fillfactor=([0-9]+)'::text))::smallint)::integer, 100))",
                          "tbl.relhasoids"
                        ],
                        "Sort Method": "quicksort",
                        "Sort Space Used": 163,
                        "Sort Space Type": "Memory",
                        "Shared Hit Blocks": 1755,
                        "Shared Read Blocks": 0,
                        "Shared Dirtied Blocks": 0,
                        "Shared Written Blocks": 0,
                        "Local Hit Blocks": 0,
                        "Local Read Blocks": 0,
                        "Local Dirtied Blocks": 0,
                        "Local Written Blocks": 0,
                        "Temp Read Blocks": 0,
                        "Temp Written Blocks": 0,
                        "Plans": [
                          {
                            "Node Type": "Nested Loop",
                            "Parent Relationship": "Outer",
                            "Parallel Aware": false,
                            "Join Type": "Left",
                            "Startup Cost": 21.53,
                            "Total Cost": 158.65,
                            "Plan Rows": 68,
                            "Plan Width": 197,
                            "Actual Startup Time": 4.752,
                            "Actual Total Time": 33.21,
                            "Actual Rows": 522,
                            "Actual Loops": 1,
                            "Output": [
                              "tbl.oid",
                              "ns.nspname",
                              "tbl.relname",
                              "tbl.reltuples",
                              "tbl.relpages",
                              "COALESCE(toast.relpages, 0)",
                              "COALESCE(toast.reltuples, '0'::real)",
                              "COALESCE(((\"substring\"(array_to_string(tbl.reloptions, ' '::text), 'fillfactor=([0-9]+)'::text))::smallint)::integer, 100)",
                              "(current_setting('block_size'::text))::numeric",
                              "CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END",
                              "tbl.relhasoids",
                              "s_1.null_frac",
                              "s_1.avg_width"
                            ],
                            "Inner Unique": false,
                            "Join Filter": "((s_1.schemaname = ns.nspname) AND (s_1.tablename = tbl.relname) AND (s_1.attname = att.attname))",
                            "Rows Removed by Join Filter": 190165,
                            "Shared Hit Blocks": 1741,
                            "Shared Read Blocks": 0,
                            "Shared Dirtied Blocks": 0,
                            "Shared Written Blocks": 0,
                            "Local Hit Blocks": 0,
                            "Local Read Blocks": 0,
                            "Local Dirtied Blocks": 0,
                            "Local Written Blocks": 0,
                            "Temp Read Blocks": 0,
                            "Temp Written Blocks": 0,
                            "Plans": [
                              {
                                "Node Type": "Nested Loop",
                                "Parent Relationship": "Outer",
                                "Parallel Aware": false,
                                "Join Type": "Inner",
                                "Startup Cost": 1.64,
                                "Total Cost": 76.04,
                                "Plan Rows": 68,
                                "Plan Width": 262,
                                "Actual Startup Time": 0.083,
                                "Actual Total Time": 1.493,
                                "Actual Rows": 522,
                                "Actual Loops": 1,
                                "Output": [
                                  "att.attname",
                                  "tbl.oid",
                                  "tbl.relname",
                                  "tbl.reltuples",
                                  "tbl.relpages",
                                  "tbl.reloptions",
                                  "tbl.relhasoids",
                                  "ns.nspname",
                                  "toast.relpages",
                                  "toast.reltuples"
                                ],
                                "Inner Unique": false,
                                "Shared Hit Blocks": 351,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0,
                                "Plans": [
                                  {
                                    "Node Type": "Nested Loop",
                                    "Parent Relationship": "Outer",
                                    "Parallel Aware": false,
                                    "Join Type": "Left",
                                    "Startup Cost": 1.36,
                                    "Total Cost": 32.29,
                                    "Plan Rows": 12,
                                    "Plan Width": 198,
                                    "Actual Startup Time": 0.033,
                                    "Actual Total Time": 0.576,
                                    "Actual Rows": 62,
                                    "Actual Loops": 1,
                                    "Output": [
                                      "tbl.oid",
                                      "tbl.relname",
                                      "tbl.reltuples",
                                      "tbl.relpages",
                                      "tbl.reloptions",
                                      "tbl.relhasoids",
                                      "ns.nspname",
                                      "toast.relpages",
                                      "toast.reltuples"
                                    ],
                                    "Inner Unique": true,
                                    "Shared Hit Blocks": 149,
                                    "Shared Read Blocks": 0,
                                    "Shared Dirtied Blocks": 0,
                                    "Shared Written Blocks": 0,
                                    "Local Hit Blocks": 0,
                                    "Local Read Blocks": 0,
                                    "Local Dirtied Blocks": 0,
                                    "Local Written Blocks": 0,
                                    "Temp Read Blocks": 0,
                                    "Temp Written Blocks": 0,
                                    "Plans": [
                                      {
                                        "Node Type": "Hash Join",
                                        "Parent Relationship": "Outer",
                                        "Parallel Aware": false,
                                        "Join Type": "Inner",
                                        "Startup Cost": 1.09,
                                        "Total Cost": 17.68,
                                        "Plan Rows": 12,
                                        "Plan Width": 194,
                                        "Actual Startup Time": 0.023,
                                        "Actual Total Time": 0.32,
                                        "Actual Rows": 62,
                                        "Actual Loops": 1,
                                        "Output": [
                                          "tbl.oid",
                                          "tbl.relname",
                                          "tbl.reltuples",
                                          "tbl.relpages",
                                          "tbl.reloptions",
                                          "tbl.relhasoids",
                                          "tbl.reltoastrelid",
                                          "ns.nspname"
                                        ],
                                        "Inner Unique": true,
                                        "Hash Cond": "(tbl.relnamespace = ns.oid)",
                                        "Shared Hit Blocks": 13,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0,
                                        "Plans": [
                                          {
                                            "Node Type": "Seq Scan",
                                            "Parent Relationship": "Outer",
                                            "Parallel Aware": false,
                                            "Relation Name": "pg_class",
                                            "Schema": "pg_catalog",
                                            "Alias": "tbl",
                                            "Startup Cost": 0.0,
                                            "Total Cost": 16.27,
                                            "Plan Rows": 69,
                                            "Plan Width": 134,
                                            "Actual Startup Time": 0.005,
                                            "Actual Total Time": 0.235,
                                            "Actual Rows": 71,
                                            "Actual Loops": 1,
                                            "Output": [
                                              "tbl.oid",
                                              "tbl.relname",
                                              "tbl.reltuples",
                                              "tbl.relpages",
                                              "tbl.reloptions",
                                              "tbl.relhasoids",
                                              "tbl.relnamespace",
                                              "tbl.reltoastrelid"
                                            ],
                                            "Filter": "(tbl.relkind = 'r'::\"char\")",
                                            "Rows Removed by Filter": 277,
                                            "Shared Hit Blocks": 12,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0
                                          },
                                          {
                                            "Node Type": "Hash",
                                            "Parent Relationship": "Inner",
                                            "Parallel Aware": false,
                                            "Startup Cost": 1.07,
                                            "Total Cost": 1.07,
                                            "Plan Rows": 1,
                                            "Plan Width": 68,
                                            "Actual Startup Time": 0.007,
                                            "Actual Total Time": 0.007,
                                            "Actual Rows": 1,
                                            "Actual Loops": 1,
                                            "Output": ["ns.nspname", "ns.oid"],
                                            "Hash Buckets": 1024,
                                            "Original Hash Buckets": 1024,
                                            "Hash Batches": 1,
                                            "Original Hash Batches": 1,
                                            "Peak Memory Usage": 9,
                                            "Shared Hit Blocks": 1,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0,
                                            "Plans": [
                                              {
                                                "Node Type": "Seq Scan",
                                                "Parent Relationship": "Outer",
                                                "Parallel Aware": false,
                                                "Relation Name": "pg_namespace",
                                                "Schema": "pg_catalog",
                                                "Alias": "ns",
                                                "Startup Cost": 0.0,
                                                "Total Cost": 1.07,
                                                "Plan Rows": 1,
                                                "Plan Width": 68,
                                                "Actual Startup Time": 0.003,
                                                "Actual Total Time": 0.003,
                                                "Actual Rows": 1,
                                                "Actual Loops": 1,
                                                "Output": [
                                                  "ns.nspname",
                                                  "ns.oid"
                                                ],
                                                "Filter": "(ns.nspname = 'pg_catalog'::name)",
                                                "Rows Removed by Filter": 6,
                                                "Shared Hit Blocks": 1,
                                                "Shared Read Blocks": 0,
                                                "Shared Dirtied Blocks": 0,
                                                "Shared Written Blocks": 0,
                                                "Local Hit Blocks": 0,
                                                "Local Read Blocks": 0,
                                                "Local Dirtied Blocks": 0,
                                                "Local Written Blocks": 0,
                                                "Temp Read Blocks": 0,
                                                "Temp Written Blocks": 0
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Node Type": "Index Scan",
                                        "Parent Relationship": "Inner",
                                        "Parallel Aware": false,
                                        "Scan Direction": "Forward",
                                        "Index Name": "pg_class_oid_index",
                                        "Relation Name": "pg_class",
                                        "Schema": "pg_catalog",
                                        "Alias": "toast",
                                        "Startup Cost": 0.27,
                                        "Total Cost": 1.22,
                                        "Plan Rows": 1,
                                        "Plan Width": 12,
                                        "Actual Startup Time": 0.003,
                                        "Actual Total Time": 0.003,
                                        "Actual Rows": 0,
                                        "Actual Loops": 62,
                                        "Output": [
                                          "toast.relpages",
                                          "toast.reltuples",
                                          "toast.oid"
                                        ],
                                        "Index Cond": "(tbl.reltoastrelid = toast.oid)",
                                        "Rows Removed by Index Recheck": 0,
                                        "Shared Hit Blocks": 136,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0
                                      }
                                    ]
                                  },
                                  {
                                    "Node Type": "Index Scan",
                                    "Parent Relationship": "Inner",
                                    "Parallel Aware": false,
                                    "Scan Direction": "Forward",
                                    "Index Name": "pg_attribute_relid_attnum_index",
                                    "Relation Name": "pg_attribute",
                                    "Schema": "pg_catalog",
                                    "Alias": "att",
                                    "Startup Cost": 0.28,
                                    "Total Cost": 3.59,
                                    "Plan Rows": 6,
                                    "Plan Width": 68,
                                    "Actual Startup Time": 0.006,
                                    "Actual Total Time": 0.013,
                                    "Actual Rows": 8,
                                    "Actual Loops": 62,
                                    "Output": [
                                      "att.attrelid",
                                      "att.attname",
                                      "att.atttypid",
                                      "att.attstattarget",
                                      "att.attlen",
                                      "att.attnum",
                                      "att.attndims",
                                      "att.attcacheoff",
                                      "att.atttypmod",
                                      "att.attbyval",
                                      "att.attstorage",
                                      "att.attalign",
                                      "att.attnotnull",
                                      "att.atthasdef",
                                      "att.atthasmissing",
                                      "att.attidentity",
                                      "att.attisdropped",
                                      "att.attislocal",
                                      "att.attinhcount",
                                      "att.attcollation",
                                      "att.attacl",
                                      "att.attoptions",
                                      "att.attfdwoptions",
                                      "att.attmissingval"
                                    ],
                                    "Index Cond": "((att.attrelid = tbl.oid) AND (att.attnum > 0))",
                                    "Rows Removed by Index Recheck": 0,
                                    "Filter": "(NOT att.attisdropped)",
                                    "Rows Removed by Filter": 0,
                                    "Shared Hit Blocks": 202,
                                    "Shared Read Blocks": 0,
                                    "Shared Dirtied Blocks": 0,
                                    "Shared Written Blocks": 0,
                                    "Local Hit Blocks": 0,
                                    "Local Read Blocks": 0,
                                    "Local Dirtied Blocks": 0,
                                    "Local Written Blocks": 0,
                                    "Temp Read Blocks": 0,
                                    "Temp Written Blocks": 0
                                  }
                                ]
                              },
                              {
                                "Node Type": "Materialize",
                                "Parent Relationship": "Inner",
                                "Parallel Aware": false,
                                "Startup Cost": 19.89,
                                "Total Cost": 79.21,
                                "Plan Rows": 1,
                                "Plan Width": 200,
                                "Actual Startup Time": 0.001,
                                "Actual Total Time": 0.021,
                                "Actual Rows": 365,
                                "Actual Loops": 522,
                                "Output": [
                                  "s_1.null_frac",
                                  "s_1.avg_width",
                                  "s_1.schemaname",
                                  "s_1.tablename",
                                  "s_1.attname"
                                ],
                                "Shared Hit Blocks": 1390,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0,
                                "Plans": [
                                  {
                                    "Node Type": "Subquery Scan",
                                    "Parent Relationship": "Outer",
                                    "Parallel Aware": false,
                                    "Alias": "s_1",
                                    "Startup Cost": 19.89,
                                    "Total Cost": 79.2,
                                    "Plan Rows": 1,
                                    "Plan Width": 200,
                                    "Actual Startup Time": 0.464,
                                    "Actual Total Time": 4.067,
                                    "Actual Rows": 365,
                                    "Actual Loops": 1,
                                    "Output": [
                                      "s_1.null_frac",
                                      "s_1.avg_width",
                                      "s_1.schemaname",
                                      "s_1.tablename",
                                      "s_1.attname"
                                    ],
                                    "Shared Hit Blocks": 1390,
                                    "Shared Read Blocks": 0,
                                    "Shared Dirtied Blocks": 0,
                                    "Shared Written Blocks": 0,
                                    "Local Hit Blocks": 0,
                                    "Local Read Blocks": 0,
                                    "Local Dirtied Blocks": 0,
                                    "Local Written Blocks": 0,
                                    "Temp Read Blocks": 0,
                                    "Temp Written Blocks": 0,
                                    "Plans": [
                                      {
                                        "Node Type": "Nested Loop",
                                        "Parent Relationship": "Subquery",
                                        "Parallel Aware": false,
                                        "Join Type": "Inner",
                                        "Startup Cost": 19.89,
                                        "Total Cost": 79.19,
                                        "Plan Rows": 1,
                                        "Plan Width": 401,
                                        "Actual Startup Time": 0.459,
                                        "Actual Total Time": 4.022,
                                        "Actual Rows": 365,
                                        "Actual Loops": 1,
                                        "Output": [
                                          "n_1.nspname",
                                          "c_2.relname",
                                          "a.attname",
                                          "NULL::boolean",
                                          "s_2.stanullfrac",
                                          "s_2.stawidth",
                                          "NULL::real",
                                          "NULL::anyarray",
                                          "NULL::real[]",
                                          "NULL::anyarray",
                                          "NULL::real",
                                          "NULL::anyarray",
                                          "NULL::real[]",
                                          "NULL::real[]"
                                        ],
                                        "Inner Unique": true,
                                        "Join Filter": "(s_2.staattnum = a.attnum)",
                                        "Rows Removed by Join Filter": 5375,
                                        "Shared Hit Blocks": 1390,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0,
                                        "Plans": [
                                          {
                                            "Node Type": "Hash Join",
                                            "Parent Relationship": "Outer",
                                            "Parallel Aware": false,
                                            "Join Type": "Inner",
                                            "Startup Cost": 19.61,
                                            "Total Cost": 40.66,
                                            "Plan Rows": 33,
                                            "Plan Width": 146,
                                            "Actual Startup Time": 0.365,
                                            "Actual Total Time": 0.749,
                                            "Actual Rows": 365,
                                            "Actual Loops": 1,
                                            "Output": [
                                              "s_2.stanullfrac",
                                              "s_2.stawidth",
                                              "s_2.starelid",
                                              "s_2.staattnum",
                                              "c_2.relname",
                                              "c_2.oid",
                                              "n_1.nspname"
                                            ],
                                            "Inner Unique": false,
                                            "Hash Cond": "(s_2.starelid = c_2.oid)",
                                            "Shared Hit Blocks": 29,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0,
                                            "Plans": [
                                              {
                                                "Node Type": "Seq Scan",
                                                "Parent Relationship": "Outer",
                                                "Parallel Aware": false,
                                                "Relation Name": "pg_statistic",
                                                "Schema": "pg_catalog",
                                                "Alias": "s_2",
                                                "Startup Cost": 0.0,
                                                "Total Cost": 19.98,
                                                "Plan Rows": 199,
                                                "Plan Width": 14,
                                                "Actual Startup Time": 0.011,
                                                "Actual Total Time": 0.294,
                                                "Actual Rows": 398,
                                                "Actual Loops": 1,
                                                "Output": [
                                                  "s_2.starelid",
                                                  "s_2.staattnum",
                                                  "s_2.stainherit",
                                                  "s_2.stanullfrac",
                                                  "s_2.stawidth",
                                                  "s_2.stadistinct",
                                                  "s_2.stakind1",
                                                  "s_2.stakind2",
                                                  "s_2.stakind3",
                                                  "s_2.stakind4",
                                                  "s_2.stakind5",
                                                  "s_2.staop1",
                                                  "s_2.staop2",
                                                  "s_2.staop3",
                                                  "s_2.staop4",
                                                  "s_2.staop5",
                                                  "s_2.stanumbers1",
                                                  "s_2.stanumbers2",
                                                  "s_2.stanumbers3",
                                                  "s_2.stanumbers4",
                                                  "s_2.stanumbers5",
                                                  "s_2.stavalues1",
                                                  "s_2.stavalues2",
                                                  "s_2.stavalues3",
                                                  "s_2.stavalues4",
                                                  "s_2.stavalues5"
                                                ],
                                                "Filter": "(NOT s_2.stainherit)",
                                                "Rows Removed by Filter": 0,
                                                "Shared Hit Blocks": 16,
                                                "Shared Read Blocks": 0,
                                                "Shared Dirtied Blocks": 0,
                                                "Shared Written Blocks": 0,
                                                "Local Hit Blocks": 0,
                                                "Local Read Blocks": 0,
                                                "Local Dirtied Blocks": 0,
                                                "Local Written Blocks": 0,
                                                "Temp Read Blocks": 0,
                                                "Temp Written Blocks": 0
                                              },
                                              {
                                                "Node Type": "Hash",
                                                "Parent Relationship": "Inner",
                                                "Parallel Aware": false,
                                                "Startup Cost": 18.89,
                                                "Total Cost": 18.89,
                                                "Plan Rows": 57,
                                                "Plan Width": 132,
                                                "Actual Startup Time": 0.313,
                                                "Actual Total Time": 0.313,
                                                "Actual Rows": 237,
                                                "Actual Loops": 1,
                                                "Output": [
                                                  "c_2.relname",
                                                  "c_2.oid",
                                                  "n_1.nspname"
                                                ],
                                                "Hash Buckets": 1024,
                                                "Original Hash Buckets": 1024,
                                                "Hash Batches": 1,
                                                "Original Hash Batches": 1,
                                                "Peak Memory Usage": 46,
                                                "Shared Hit Blocks": 13,
                                                "Shared Read Blocks": 0,
                                                "Shared Dirtied Blocks": 0,
                                                "Shared Written Blocks": 0,
                                                "Local Hit Blocks": 0,
                                                "Local Read Blocks": 0,
                                                "Local Dirtied Blocks": 0,
                                                "Local Written Blocks": 0,
                                                "Temp Read Blocks": 0,
                                                "Temp Written Blocks": 0,
                                                "Plans": [
                                                  {
                                                    "Node Type": "Hash Join",
                                                    "Parent Relationship": "Outer",
                                                    "Parallel Aware": false,
                                                    "Join Type": "Inner",
                                                    "Startup Cost": 1.09,
                                                    "Total Cost": 18.89,
                                                    "Plan Rows": 57,
                                                    "Plan Width": 132,
                                                    "Actual Startup Time": 0.074,
                                                    "Actual Total Time": 0.216,
                                                    "Actual Rows": 237,
                                                    "Actual Loops": 1,
                                                    "Output": [
                                                      "c_2.relname",
                                                      "c_2.oid",
                                                      "n_1.nspname"
                                                    ],
                                                    "Inner Unique": true,
                                                    "Hash Cond": "(c_2.relnamespace = n_1.oid)",
                                                    "Shared Hit Blocks": 13,
                                                    "Shared Read Blocks": 0,
                                                    "Shared Dirtied Blocks": 0,
                                                    "Shared Written Blocks": 0,
                                                    "Local Hit Blocks": 0,
                                                    "Local Read Blocks": 0,
                                                    "Local Dirtied Blocks": 0,
                                                    "Local Written Blocks": 0,
                                                    "Temp Read Blocks": 0,
                                                    "Temp Written Blocks": 0,
                                                    "Plans": [
                                                      {
                                                        "Node Type": "Seq Scan",
                                                        "Parent Relationship": "Outer",
                                                        "Parallel Aware": false,
                                                        "Relation Name": "pg_class",
                                                        "Schema": "pg_catalog",
                                                        "Alias": "c_2",
                                                        "Startup Cost": 0.0,
                                                        "Total Cost": 16.27,
                                                        "Plan Rows": 342,
                                                        "Plan Width": 72,
                                                        "Actual Startup Time": 0.006,
                                                        "Actual Total Time": 0.106,
                                                        "Actual Rows": 348,
                                                        "Actual Loops": 1,
                                                        "Output": [
                                                          "c_2.relname",
                                                          "c_2.oid",
                                                          "c_2.relnamespace"
                                                        ],
                                                        "Filter": "((NOT c_2.relrowsecurity) OR (NOT row_security_active(c_2.oid)))",
                                                        "Rows Removed by Filter": 0,
                                                        "Shared Hit Blocks": 12,
                                                        "Shared Read Blocks": 0,
                                                        "Shared Dirtied Blocks": 0,
                                                        "Shared Written Blocks": 0,
                                                        "Local Hit Blocks": 0,
                                                        "Local Read Blocks": 0,
                                                        "Local Dirtied Blocks": 0,
                                                        "Local Written Blocks": 0,
                                                        "Temp Read Blocks": 0,
                                                        "Temp Written Blocks": 0
                                                      },
                                                      {
                                                        "Node Type": "Hash",
                                                        "Parent Relationship": "Inner",
                                                        "Parallel Aware": false,
                                                        "Startup Cost": 1.07,
                                                        "Total Cost": 1.07,
                                                        "Plan Rows": 1,
                                                        "Plan Width": 68,
                                                        "Actual Startup Time": 0.018,
                                                        "Actual Total Time": 0.018,
                                                        "Actual Rows": 1,
                                                        "Actual Loops": 1,
                                                        "Output": [
                                                          "n_1.nspname",
                                                          "n_1.oid"
                                                        ],
                                                        "Hash Buckets": 1024,
                                                        "Original Hash Buckets": 1024,
                                                        "Hash Batches": 1,
                                                        "Original Hash Batches": 1,
                                                        "Peak Memory Usage": 9,
                                                        "Shared Hit Blocks": 1,
                                                        "Shared Read Blocks": 0,
                                                        "Shared Dirtied Blocks": 0,
                                                        "Shared Written Blocks": 0,
                                                        "Local Hit Blocks": 0,
                                                        "Local Read Blocks": 0,
                                                        "Local Dirtied Blocks": 0,
                                                        "Local Written Blocks": 0,
                                                        "Temp Read Blocks": 0,
                                                        "Temp Written Blocks": 0,
                                                        "Plans": [
                                                          {
                                                            "Node Type": "Seq Scan",
                                                            "Parent Relationship": "Outer",
                                                            "Parallel Aware": false,
                                                            "Relation Name": "pg_namespace",
                                                            "Schema": "pg_catalog",
                                                            "Alias": "n_1",
                                                            "Startup Cost": 0.0,
                                                            "Total Cost": 1.07,
                                                            "Plan Rows": 1,
                                                            "Plan Width": 68,
                                                            "Actual Startup Time": 0.007,
                                                            "Actual Total Time": 0.008,
                                                            "Actual Rows": 1,
                                                            "Actual Loops": 1,
                                                            "Output": [
                                                              "n_1.nspname",
                                                              "n_1.oid"
                                                            ],
                                                            "Filter": "(n_1.nspname = 'pg_catalog'::name)",
                                                            "Rows Removed by Filter": 6,
                                                            "Shared Hit Blocks": 1,
                                                            "Shared Read Blocks": 0,
                                                            "Shared Dirtied Blocks": 0,
                                                            "Shared Written Blocks": 0,
                                                            "Local Hit Blocks": 0,
                                                            "Local Read Blocks": 0,
                                                            "Local Dirtied Blocks": 0,
                                                            "Local Written Blocks": 0,
                                                            "Temp Read Blocks": 0,
                                                            "Temp Written Blocks": 0
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "Node Type": "Index Scan",
                                            "Parent Relationship": "Inner",
                                            "Parallel Aware": false,
                                            "Scan Direction": "Forward",
                                            "Index Name": "pg_attribute_relid_attnum_index",
                                            "Relation Name": "pg_attribute",
                                            "Schema": "pg_catalog",
                                            "Alias": "a",
                                            "Startup Cost": 0.28,
                                            "Total Cost": 1.13,
                                            "Plan Rows": 3,
                                            "Plan Width": 70,
                                            "Actual Startup Time": 0.002,
                                            "Actual Total Time": 0.008,
                                            "Actual Rows": 16,
                                            "Actual Loops": 365,
                                            "Output": [
                                              "a.attrelid",
                                              "a.attname",
                                              "a.atttypid",
                                              "a.attstattarget",
                                              "a.attlen",
                                              "a.attnum",
                                              "a.attndims",
                                              "a.attcacheoff",
                                              "a.atttypmod",
                                              "a.attbyval",
                                              "a.attstorage",
                                              "a.attalign",
                                              "a.attnotnull",
                                              "a.atthasdef",
                                              "a.atthasmissing",
                                              "a.attidentity",
                                              "a.attisdropped",
                                              "a.attislocal",
                                              "a.attinhcount",
                                              "a.attcollation",
                                              "a.attacl",
                                              "a.attoptions",
                                              "a.attfdwoptions",
                                              "a.attmissingval"
                                            ],
                                            "Index Cond": "(a.attrelid = c_2.oid)",
                                            "Rows Removed by Index Recheck": 0,
                                            "Filter": "((NOT a.attisdropped) AND has_column_privilege(c_2.oid, a.attnum, 'select'::text))",
                                            "Rows Removed by Filter": 0,
                                            "Shared Hit Blocks": 1361,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Node Type": "Hash",
        "Parent Relationship": "Inner",
        "Parallel Aware": false,
        "Startup Cost": 183.33,
        "Total Cost": 183.33,
        "Plan Rows": 1,
        "Plan Width": 136,
        "Actual Startup Time": 190.33,
        "Actual Total Time": 190.33,
        "Actual Rows": 36,
        "Actual Loops": 1,
        "Output": [
          "(sum((CASE WHEN ((q.relpages)::double precision > COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision)) THEN ((((current_setting('block_size'::text))::numeric))::double precision * ((q.relpages)::double precision - COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision))) ELSE '0'::double precision END)))",
          "q.nspname",
          "q.tblname"
        ],
        "Hash Buckets": 1024,
        "Original Hash Buckets": 1024,
        "Hash Batches": 1,
        "Original Hash Batches": 1,
        "Peak Memory Usage": 14,
        "Shared Hit Blocks": 215652,
        "Shared Read Blocks": 0,
        "Shared Dirtied Blocks": 0,
        "Shared Written Blocks": 0,
        "Local Hit Blocks": 0,
        "Local Read Blocks": 0,
        "Local Dirtied Blocks": 0,
        "Local Written Blocks": 0,
        "Temp Read Blocks": 0,
        "Temp Written Blocks": 0,
        "Plans": [
          {
            "Node Type": "Aggregate",
            "Strategy": "Sorted",
            "Partial Mode": "Simple",
            "Parent Relationship": "Outer",
            "Parallel Aware": false,
            "Startup Cost": 181.95,
            "Total Cost": 183.32,
            "Plan Rows": 1,
            "Plan Width": 136,
            "Actual Startup Time": 190.008,
            "Actual Total Time": 190.312,
            "Actual Rows": 36,
            "Actual Loops": 1,
            "Output": [
              "sum((CASE WHEN ((q.relpages)::double precision > COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision)) THEN ((((current_setting('block_size'::text))::numeric))::double precision * ((q.relpages)::double precision - COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision))) ELSE '0'::double precision END))",
              "q.nspname",
              "q.tblname"
            ],
            "Group Key": ["q.nspname", "q.tblname"],
            "Shared Hit Blocks": 215652,
            "Shared Read Blocks": 0,
            "Shared Dirtied Blocks": 0,
            "Shared Written Blocks": 0,
            "Local Hit Blocks": 0,
            "Local Read Blocks": 0,
            "Local Dirtied Blocks": 0,
            "Local Written Blocks": 0,
            "Temp Read Blocks": 0,
            "Temp Written Blocks": 0,
            "Plans": [
              {
                "Node Type": "Nested Loop",
                "Parent Relationship": "Outer",
                "Parallel Aware": false,
                "Join Type": "Inner",
                "Startup Cost": 181.95,
                "Total Cost": 183.3,
                "Plan Rows": 1,
                "Plan Width": 349,
                "Actual Startup Time": 189.991,
                "Actual Total Time": 190.29,
                "Actual Rows": 47,
                "Actual Loops": 1,
                "Output": [
                  "NULL::name",
                  "q.nspname",
                  "q.tblname",
                  "q.idxname",
                  "NULL::numeric",
                  "NULL::numeric",
                  "NULL::double precision",
                  "NULL::integer",
                  "CASE WHEN ((q.relpages)::double precision > COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision)) THEN ((((current_setting('block_size'::text))::numeric))::double precision * ((q.relpages)::double precision - COALESCE(('1'::double precision + ceil((q.reltuples / floor((((((((current_setting('block_size'::text))::numeric) - ((16))::numeric) - ((24))::numeric) * (q.fillfactor)::numeric))::double precision / ('100'::double precision * (('4'::numeric + ((((((((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) + (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) - CASE WHEN (((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE ((CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END) % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END))::double precision + (sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision)))) + ((CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END))::double precision) - (CASE WHEN ((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))) = '0'::double precision) THEN 0 WHEN ((((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) = 0) THEN (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END) ELSE (((sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))))::integer % (CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END)) END)::double precision))::numeric))::double precision)))))), '0'::double precision))) ELSE '0'::double precision END",
                  "NULL::double precision",
                  "NULL::boolean"
                ],
                "Inner Unique": true,
                "Join Filter": "(q.relam = am.oid)",
                "Rows Removed by Join Filter": 0,
                "Shared Hit Blocks": 215652,
                "Shared Read Blocks": 0,
                "Shared Dirtied Blocks": 0,
                "Shared Written Blocks": 0,
                "Local Hit Blocks": 0,
                "Local Read Blocks": 0,
                "Local Dirtied Blocks": 0,
                "Local Written Blocks": 0,
                "Temp Read Blocks": 0,
                "Temp Written Blocks": 0,
                "Plans": [
                  {
                    "Node Type": "Aggregate",
                    "Strategy": "Sorted",
                    "Partial Mode": "Simple",
                    "Parent Relationship": "Outer",
                    "Parallel Aware": false,
                    "Startup Cost": 181.95,
                    "Total Cost": 182.02,
                    "Plan Rows": 1,
                    "Plan Width": 269,
                    "Actual Startup Time": 189.969,
                    "Actual Total Time": 190.143,
                    "Actual Rows": 47,
                    "Actual Loops": 1,
                    "Output": [
                      "q.nspname",
                      "q.tblname",
                      "q.idxname",
                      "q.reltuples",
                      "q.relpages",
                      "q.relam",
                      "q.attrelid",
                      "((current_setting('block_size'::text))::numeric)",
                      "q.fillfactor",
                      "CASE WHEN ((version() ~ 'mingw32'::text) OR (version() ~ '64-bit|x86_64|ppc64|ia64|amd64'::text)) THEN 8 ELSE 4 END",
                      "24",
                      "16",
                      "CASE WHEN (max(COALESCE(s_3.stanullfrac, '0'::real)) = '0'::double precision) THEN 2 ELSE 6 END",
                      "sum((('1'::double precision - COALESCE(s_3.stanullfrac, '0'::real)) * (COALESCE(s_3.stawidth, 1024))::double precision))",
                      "NULL::boolean"
                    ],
                    "Group Key": [
                      "q.nspname",
                      "q.tblname",
                      "q.idxname",
                      "q.reltuples",
                      "q.relpages",
                      "q.relam",
                      "q.attrelid",
                      "((current_setting('block_size'::text))::numeric)",
                      "q.fillfactor"
                    ],
                    "Shared Hit Blocks": 215605,
                    "Shared Read Blocks": 0,
                    "Shared Dirtied Blocks": 0,
                    "Shared Written Blocks": 0,
                    "Local Hit Blocks": 0,
                    "Local Read Blocks": 0,
                    "Local Dirtied Blocks": 0,
                    "Local Written Blocks": 0,
                    "Temp Read Blocks": 0,
                    "Temp Written Blocks": 0,
                    "Plans": [
                      {
                        "Node Type": "Sort",
                        "Parent Relationship": "Outer",
                        "Parallel Aware": false,
                        "Startup Cost": 181.95,
                        "Total Cost": 181.95,
                        "Plan Rows": 1,
                        "Plan Width": 252,
                        "Actual Startup Time": 189.921,
                        "Actual Total Time": 189.926,
                        "Actual Rows": 100,
                        "Actual Loops": 1,
                        "Output": [
                          "q.nspname",
                          "q.tblname",
                          "q.idxname",
                          "q.reltuples",
                          "q.relpages",
                          "q.relam",
                          "q.attrelid",
                          "((current_setting('block_size'::text))::numeric)",
                          "q.fillfactor",
                          "s_3.stanullfrac",
                          "s_3.stawidth"
                        ],
                        "Sort Key": [
                          "q.tblname",
                          "q.idxname",
                          "q.reltuples",
                          "q.relpages",
                          "q.relam",
                          "q.attrelid",
                          "q.fillfactor"
                        ],
                        "Sort Method": "quicksort",
                        "Sort Space Used": 51,
                        "Sort Space Type": "Memory",
                        "Shared Hit Blocks": 215605,
                        "Shared Read Blocks": 0,
                        "Shared Dirtied Blocks": 0,
                        "Shared Written Blocks": 0,
                        "Local Hit Blocks": 0,
                        "Local Read Blocks": 0,
                        "Local Dirtied Blocks": 0,
                        "Local Written Blocks": 0,
                        "Temp Read Blocks": 0,
                        "Temp Written Blocks": 0,
                        "Plans": [
                          {
                            "Node Type": "Nested Loop",
                            "Parent Relationship": "Outer",
                            "Parallel Aware": false,
                            "Join Type": "Inner",
                            "Startup Cost": 93.79,
                            "Total Cost": 181.94,
                            "Plan Rows": 1,
                            "Plan Width": 252,
                            "Actual Startup Time": 2.371,
                            "Actual Total Time": 189.594,
                            "Actual Rows": 100,
                            "Actual Loops": 1,
                            "Output": [
                              "q.nspname",
                              "q.tblname",
                              "q.idxname",
                              "q.reltuples",
                              "q.relpages",
                              "q.relam",
                              "q.attrelid",
                              "(current_setting('block_size'::text))::numeric",
                              "q.fillfactor",
                              "s_3.stanullfrac",
                              "s_3.stawidth"
                            ],
                            "Inner Unique": true,
                            "Shared Hit Blocks": 215605,
                            "Shared Read Blocks": 0,
                            "Shared Dirtied Blocks": 0,
                            "Shared Written Blocks": 0,
                            "Local Hit Blocks": 0,
                            "Local Read Blocks": 0,
                            "Local Dirtied Blocks": 0,
                            "Local Written Blocks": 0,
                            "Temp Read Blocks": 0,
                            "Temp Written Blocks": 0,
                            "Plans": [
                              {
                                "Node Type": "Nested Loop",
                                "Parent Relationship": "Outer",
                                "Parallel Aware": false,
                                "Join Type": "Inner",
                                "Startup Cost": 93.65,
                                "Total Cost": 177.74,
                                "Plan Rows": 1,
                                "Plan Width": 224,
                                "Actual Startup Time": 2.26,
                                "Actual Total Time": 188.458,
                                "Actual Rows": 100,
                                "Actual Loops": 1,
                                "Output": [
                                  "q.nspname",
                                  "q.tblname",
                                  "q.idxname",
                                  "q.reltuples",
                                  "q.relpages",
                                  "q.relam",
                                  "q.attrelid",
                                  "q.fillfactor",
                                  "q.atttypid",
                                  "s_3.stanullfrac",
                                  "s_3.stawidth"
                                ],
                                "Inner Unique": false,
                                "Join Filter": "(((c_3.relname = q.tblname) AND ((a_1.attname)::text = pg_get_indexdef(q.attrelid, (q.attnum)::integer, true))) OR ((c_3.relname = q.idxname) AND (a_1.attname = q.attname)))",
                                "Rows Removed by Join Filter": 70345,
                                "Shared Hit Blocks": 215504,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0,
                                "Plans": [
                                  {
                                    "Node Type": "CTE Scan",
                                    "Parent Relationship": "Outer",
                                    "Parallel Aware": false,
                                    "CTE Name": "q",
                                    "Alias": "q",
                                    "Startup Cost": 73.76,
                                    "Total Cost": 76.03,
                                    "Plan Rows": 1,
                                    "Plan Width": 453,
                                    "Actual Startup Time": 0.663,
                                    "Actual Total Time": 4.145,
                                    "Actual Rows": 193,
                                    "Actual Loops": 1,
                                    "Output": [
                                      "q.nspname",
                                      "q.tblname",
                                      "q.idxname",
                                      "q.reltuples",
                                      "q.relpages",
                                      "q.relam",
                                      "NULL::oid",
                                      "NULL::oid",
                                      "q.fillfactor",
                                      "q.attrelid",
                                      "q.attname",
                                      "q.atttypid",
                                      "NULL::integer",
                                      "NULL::smallint",
                                      "q.attnum",
                                      "NULL::integer",
                                      "NULL::integer",
                                      "NULL::integer",
                                      "NULL::boolean",
                                      "NULL::\"char\"",
                                      "NULL::\"char\"",
                                      "NULL::boolean",
                                      "NULL::boolean",
                                      "NULL::boolean",
                                      "NULL::\"char\"",
                                      "NULL::boolean",
                                      "NULL::boolean",
                                      "NULL::integer",
                                      "NULL::oid",
                                      "NULL::aclitem[]",
                                      "NULL::text[]",
                                      "NULL::text[]",
                                      "NULL::anyarray"
                                    ],
                                    "Filter": "(q.nspname = 'pg_catalog'::name)",
                                    "Rows Removed by Filter": 0,
                                    "Shared Hit Blocks": 380,
                                    "Shared Read Blocks": 0,
                                    "Shared Dirtied Blocks": 0,
                                    "Shared Written Blocks": 0,
                                    "Local Hit Blocks": 0,
                                    "Local Read Blocks": 0,
                                    "Local Dirtied Blocks": 0,
                                    "Local Written Blocks": 0,
                                    "Temp Read Blocks": 0,
                                    "Temp Written Blocks": 0,
                                    "Plans": [
                                      {
                                        "Node Type": "Nested Loop",
                                        "Parent Relationship": "InitPlan",
                                        "Subplan Name": "CTE q",
                                        "Parallel Aware": false,
                                        "Join Type": "Inner",
                                        "Startup Cost": 25.29,
                                        "Total Cost": 73.76,
                                        "Plan Rows": 101,
                                        "Plan Width": 454,
                                        "Actual Startup Time": 0.643,
                                        "Actual Total Time": 2.855,
                                        "Actual Rows": 193,
                                        "Actual Loops": 1,
                                        "Output": [
                                          "pg_namespace.nspname",
                                          "tbl_1.relname",
                                          "idx.relname",
                                          "idx.reltuples",
                                          "idx.relpages",
                                          "idx.relam",
                                          "pg_index.indrelid",
                                          "pg_index.indexrelid",
                                          "COALESCE(((\"substring\"(array_to_string(idx.reloptions, ' '::text), 'fillfactor=([0-9]+)'::text))::smallint)::integer, 90)",
                                          "a_2.attrelid",
                                          "a_2.attname",
                                          "a_2.atttypid",
                                          "a_2.attstattarget",
                                          "a_2.attlen",
                                          "a_2.attnum",
                                          "a_2.attndims",
                                          "a_2.attcacheoff",
                                          "a_2.atttypmod",
                                          "a_2.attbyval",
                                          "a_2.attstorage",
                                          "a_2.attalign",
                                          "a_2.attnotnull",
                                          "a_2.atthasdef",
                                          "a_2.atthasmissing",
                                          "a_2.attidentity",
                                          "a_2.attisdropped",
                                          "a_2.attislocal",
                                          "a_2.attinhcount",
                                          "a_2.attcollation",
                                          "a_2.attacl",
                                          "a_2.attoptions",
                                          "a_2.attfdwoptions",
                                          "a_2.attmissingval"
                                        ],
                                        "Inner Unique": false,
                                        "Join Filter": "(idx.oid = a_2.attrelid)",
                                        "Rows Removed by Join Filter": 0,
                                        "Shared Hit Blocks": 380,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0,
                                        "Plans": [
                                          {
                                            "Node Type": "Hash Join",
                                            "Parent Relationship": "Outer",
                                            "Parallel Aware": false,
                                            "Join Type": "Inner",
                                            "Startup Cost": 25.01,
                                            "Total Cost": 42.13,
                                            "Plan Rows": 17,
                                            "Plan Width": 265,
                                            "Actual Startup Time": 0.604,
                                            "Actual Total Time": 1.613,
                                            "Actual Rows": 116,
                                            "Actual Loops": 1,
                                            "Output": [
                                              "pg_index.indrelid",
                                              "pg_index.indexrelid",
                                              "idx.relname",
                                              "idx.reltuples",
                                              "idx.relpages",
                                              "idx.relam",
                                              "idx.reloptions",
                                              "idx.oid",
                                              "tbl_1.relname",
                                              "pg_namespace.nspname"
                                            ],
                                            "Inner Unique": true,
                                            "Hash Cond": "(idx.relnamespace = pg_namespace.oid)",
                                            "Shared Hit Blocks": 29,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0,
                                            "Plans": [
                                              {
                                                "Node Type": "Hash Join",
                                                "Parent Relationship": "Outer",
                                                "Parallel Aware": false,
                                                "Join Type": "Inner",
                                                "Startup Cost": 23.87,
                                                "Total Cost": 40.92,
                                                "Plan Rows": 17,
                                                "Plan Width": 205,
                                                "Actual Startup Time": 0.534,
                                                "Actual Total Time": 1.282,
                                                "Actual Rows": 116,
                                                "Actual Loops": 1,
                                                "Output": [
                                                  "pg_index.indrelid",
                                                  "pg_index.indexrelid",
                                                  "idx.relname",
                                                  "idx.reltuples",
                                                  "idx.relpages",
                                                  "idx.relam",
                                                  "idx.reloptions",
                                                  "idx.oid",
                                                  "idx.relnamespace",
                                                  "tbl_1.relname"
                                                ],
                                                "Inner Unique": false,
                                                "Hash Cond": "(idx.oid = pg_index.indexrelid)",
                                                "Shared Hit Blocks": 28,
                                                "Shared Read Blocks": 0,
                                                "Shared Dirtied Blocks": 0,
                                                "Shared Written Blocks": 0,
                                                "Local Hit Blocks": 0,
                                                "Local Read Blocks": 0,
                                                "Local Dirtied Blocks": 0,
                                                "Local Written Blocks": 0,
                                                "Temp Read Blocks": 0,
                                                "Temp Written Blocks": 0,
                                                "Plans": [
                                                  {
                                                    "Node Type": "Seq Scan",
                                                    "Parent Relationship": "Outer",
                                                    "Parallel Aware": false,
                                                    "Relation Name": "pg_class",
                                                    "Schema": "pg_catalog",
                                                    "Alias": "idx",
                                                    "Startup Cost": 0.0,
                                                    "Total Cost": 16.27,
                                                    "Plan Rows": 161,
                                                    "Plan Width": 133,
                                                    "Actual Startup Time": 0.013,
                                                    "Actual Total Time": 0.407,
                                                    "Actual Rows": 182,
                                                    "Actual Loops": 1,
                                                    "Output": [
                                                      "idx.relname",
                                                      "idx.reltuples",
                                                      "idx.relpages",
                                                      "idx.relam",
                                                      "idx.reloptions",
                                                      "idx.oid",
                                                      "idx.relnamespace"
                                                    ],
                                                    "Filter": "(idx.relpages > 0)",
                                                    "Rows Removed by Filter": 166,
                                                    "Shared Hit Blocks": 12,
                                                    "Shared Read Blocks": 0,
                                                    "Shared Dirtied Blocks": 0,
                                                    "Shared Written Blocks": 0,
                                                    "Local Hit Blocks": 0,
                                                    "Local Read Blocks": 0,
                                                    "Local Dirtied Blocks": 0,
                                                    "Local Written Blocks": 0,
                                                    "Temp Read Blocks": 0,
                                                    "Temp Written Blocks": 0
                                                  },
                                                  {
                                                    "Node Type": "Hash",
                                                    "Parent Relationship": "Inner",
                                                    "Parallel Aware": false,
                                                    "Startup Cost": 23.42,
                                                    "Total Cost": 23.42,
                                                    "Plan Rows": 36,
                                                    "Plan Width": 72,
                                                    "Actual Startup Time": 0.441,
                                                    "Actual Total Time": 0.442,
                                                    "Actual Rows": 116,
                                                    "Actual Loops": 1,
                                                    "Output": [
                                                      "pg_index.indrelid",
                                                      "pg_index.indexrelid",
                                                      "tbl_1.relname"
                                                    ],
                                                    "Hash Buckets": 1024,
                                                    "Original Hash Buckets": 1024,
                                                    "Hash Batches": 1,
                                                    "Original Hash Batches": 1,
                                                    "Peak Memory Usage": 20,
                                                    "Shared Hit Blocks": 16,
                                                    "Shared Read Blocks": 0,
                                                    "Shared Dirtied Blocks": 0,
                                                    "Shared Written Blocks": 0,
                                                    "Local Hit Blocks": 0,
                                                    "Local Read Blocks": 0,
                                                    "Local Dirtied Blocks": 0,
                                                    "Local Written Blocks": 0,
                                                    "Temp Read Blocks": 0,
                                                    "Temp Written Blocks": 0,
                                                    "Plans": [
                                                      {
                                                        "Node Type": "Hash Join",
                                                        "Parent Relationship": "Outer",
                                                        "Parallel Aware": false,
                                                        "Join Type": "Inner",
                                                        "Startup Cost": 17.14,
                                                        "Total Cost": 23.42,
                                                        "Plan Rows": 36,
                                                        "Plan Width": 72,
                                                        "Actual Startup Time": 0.266,
                                                        "Actual Total Time": 0.378,
                                                        "Actual Rows": 116,
                                                        "Actual Loops": 1,
                                                        "Output": [
                                                          "pg_index.indrelid",
                                                          "pg_index.indexrelid",
                                                          "tbl_1.relname"
                                                        ],
                                                        "Inner Unique": true,
                                                        "Hash Cond": "(pg_index.indrelid = tbl_1.oid)",
                                                        "Shared Hit Blocks": 16,
                                                        "Shared Read Blocks": 0,
                                                        "Shared Dirtied Blocks": 0,
                                                        "Shared Written Blocks": 0,
                                                        "Local Hit Blocks": 0,
                                                        "Local Read Blocks": 0,
                                                        "Local Dirtied Blocks": 0,
                                                        "Local Written Blocks": 0,
                                                        "Temp Read Blocks": 0,
                                                        "Temp Written Blocks": 0,
                                                        "Plans": [
                                                          {
                                                            "Node Type": "Seq Scan",
                                                            "Parent Relationship": "Outer",
                                                            "Parallel Aware": false,
                                                            "Relation Name": "pg_index",
                                                            "Schema": "pg_catalog",
                                                            "Alias": "pg_index",
                                                            "Startup Cost": 0.0,
                                                            "Total Cost": 5.8,
                                                            "Plan Rows": 180,
                                                            "Plan Width": 8,
                                                            "Actual Startup Time": 0.003,
                                                            "Actual Total Time": 0.073,
                                                            "Actual Rows": 137,
                                                            "Actual Loops": 1,
                                                            "Output": [
                                                              "pg_index.indexrelid",
                                                              "pg_index.indrelid",
                                                              "pg_index.indnatts",
                                                              "pg_index.indnkeyatts",
                                                              "pg_index.indisunique",
                                                              "pg_index.indisprimary",
                                                              "pg_index.indisexclusion",
                                                              "pg_index.indimmediate",
                                                              "pg_index.indisclustered",
                                                              "pg_index.indisvalid",
                                                              "pg_index.indcheckxmin",
                                                              "pg_index.indisready",
                                                              "pg_index.indislive",
                                                              "pg_index.indisreplident",
                                                              "pg_index.indkey",
                                                              "pg_index.indcollation",
                                                              "pg_index.indclass",
                                                              "pg_index.indoption",
                                                              "pg_index.indexprs",
                                                              "pg_index.indpred"
                                                            ],
                                                            "Filter": "pg_index.indisvalid",
                                                            "Rows Removed by Filter": 0,
                                                            "Shared Hit Blocks": 4,
                                                            "Shared Read Blocks": 0,
                                                            "Shared Dirtied Blocks": 0,
                                                            "Shared Written Blocks": 0,
                                                            "Local Hit Blocks": 0,
                                                            "Local Read Blocks": 0,
                                                            "Local Dirtied Blocks": 0,
                                                            "Local Written Blocks": 0,
                                                            "Temp Read Blocks": 0,
                                                            "Temp Written Blocks": 0
                                                          },
                                                          {
                                                            "Node Type": "Hash",
                                                            "Parent Relationship": "Inner",
                                                            "Parallel Aware": false,
                                                            "Startup Cost": 16.27,
                                                            "Total Cost": 16.27,
                                                            "Plan Rows": 69,
                                                            "Plan Width": 68,
                                                            "Actual Startup Time": 0.229,
                                                            "Actual Total Time": 0.229,
                                                            "Actual Rows": 71,
                                                            "Actual Loops": 1,
                                                            "Output": [
                                                              "tbl_1.relname",
                                                              "tbl_1.oid"
                                                            ],
                                                            "Hash Buckets": 1024,
                                                            "Original Hash Buckets": 1024,
                                                            "Hash Batches": 1,
                                                            "Original Hash Batches": 1,
                                                            "Peak Memory Usage": 15,
                                                            "Shared Hit Blocks": 12,
                                                            "Shared Read Blocks": 0,
                                                            "Shared Dirtied Blocks": 0,
                                                            "Shared Written Blocks": 0,
                                                            "Local Hit Blocks": 0,
                                                            "Local Read Blocks": 0,
                                                            "Local Dirtied Blocks": 0,
                                                            "Local Written Blocks": 0,
                                                            "Temp Read Blocks": 0,
                                                            "Temp Written Blocks": 0,
                                                            "Plans": [
                                                              {
                                                                "Node Type": "Seq Scan",
                                                                "Parent Relationship": "Outer",
                                                                "Parallel Aware": false,
                                                                "Relation Name": "pg_class",
                                                                "Schema": "pg_catalog",
                                                                "Alias": "tbl_1",
                                                                "Startup Cost": 0.0,
                                                                "Total Cost": 16.27,
                                                                "Plan Rows": 69,
                                                                "Plan Width": 68,
                                                                "Actual Startup Time": 0.01,
                                                                "Actual Total Time": 0.182,
                                                                "Actual Rows": 71,
                                                                "Actual Loops": 1,
                                                                "Output": [
                                                                  "tbl_1.relname",
                                                                  "tbl_1.oid"
                                                                ],
                                                                "Filter": "(tbl_1.relkind = 'r'::\"char\")",
                                                                "Rows Removed by Filter": 277,
                                                                "Shared Hit Blocks": 12,
                                                                "Shared Read Blocks": 0,
                                                                "Shared Dirtied Blocks": 0,
                                                                "Shared Written Blocks": 0,
                                                                "Local Hit Blocks": 0,
                                                                "Local Read Blocks": 0,
                                                                "Local Dirtied Blocks": 0,
                                                                "Local Written Blocks": 0,
                                                                "Temp Read Blocks": 0,
                                                                "Temp Written Blocks": 0
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "Node Type": "Hash",
                                                "Parent Relationship": "Inner",
                                                "Parallel Aware": false,
                                                "Startup Cost": 1.06,
                                                "Total Cost": 1.06,
                                                "Plan Rows": 6,
                                                "Plan Width": 68,
                                                "Actual Startup Time": 0.037,
                                                "Actual Total Time": 0.037,
                                                "Actual Rows": 7,
                                                "Actual Loops": 1,
                                                "Output": [
                                                  "pg_namespace.nspname",
                                                  "pg_namespace.oid"
                                                ],
                                                "Hash Buckets": 1024,
                                                "Original Hash Buckets": 1024,
                                                "Hash Batches": 1,
                                                "Original Hash Batches": 1,
                                                "Peak Memory Usage": 9,
                                                "Shared Hit Blocks": 1,
                                                "Shared Read Blocks": 0,
                                                "Shared Dirtied Blocks": 0,
                                                "Shared Written Blocks": 0,
                                                "Local Hit Blocks": 0,
                                                "Local Read Blocks": 0,
                                                "Local Dirtied Blocks": 0,
                                                "Local Written Blocks": 0,
                                                "Temp Read Blocks": 0,
                                                "Temp Written Blocks": 0,
                                                "Plans": [
                                                  {
                                                    "Node Type": "Seq Scan",
                                                    "Parent Relationship": "Outer",
                                                    "Parallel Aware": false,
                                                    "Relation Name": "pg_namespace",
                                                    "Schema": "pg_catalog",
                                                    "Alias": "pg_namespace",
                                                    "Startup Cost": 0.0,
                                                    "Total Cost": 1.06,
                                                    "Plan Rows": 6,
                                                    "Plan Width": 68,
                                                    "Actual Startup Time": 0.022,
                                                    "Actual Total Time": 0.024,
                                                    "Actual Rows": 7,
                                                    "Actual Loops": 1,
                                                    "Output": [
                                                      "pg_namespace.nspname",
                                                      "pg_namespace.oid"
                                                    ],
                                                    "Shared Hit Blocks": 1,
                                                    "Shared Read Blocks": 0,
                                                    "Shared Dirtied Blocks": 0,
                                                    "Shared Written Blocks": 0,
                                                    "Local Hit Blocks": 0,
                                                    "Local Read Blocks": 0,
                                                    "Local Dirtied Blocks": 0,
                                                    "Local Written Blocks": 0,
                                                    "Temp Read Blocks": 0,
                                                    "Temp Written Blocks": 0
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "Node Type": "Index Scan",
                                            "Parent Relationship": "Inner",
                                            "Parallel Aware": false,
                                            "Scan Direction": "Forward",
                                            "Index Name": "pg_attribute_relid_attnum_index",
                                            "Relation Name": "pg_attribute",
                                            "Schema": "pg_catalog",
                                            "Alias": "a_2",
                                            "Startup Cost": 0.28,
                                            "Total Cost": 1.71,
                                            "Plan Rows": 6,
                                            "Plan Width": 238,
                                            "Actual Startup Time": 0.004,
                                            "Actual Total Time": 0.005,
                                            "Actual Rows": 2,
                                            "Actual Loops": 116,
                                            "Output": [
                                              "a_2.attrelid",
                                              "a_2.attname",
                                              "a_2.atttypid",
                                              "a_2.attstattarget",
                                              "a_2.attlen",
                                              "a_2.attnum",
                                              "a_2.attndims",
                                              "a_2.attcacheoff",
                                              "a_2.atttypmod",
                                              "a_2.attbyval",
                                              "a_2.attstorage",
                                              "a_2.attalign",
                                              "a_2.attnotnull",
                                              "a_2.atthasdef",
                                              "a_2.atthasmissing",
                                              "a_2.attidentity",
                                              "a_2.attisdropped",
                                              "a_2.attislocal",
                                              "a_2.attinhcount",
                                              "a_2.attcollation",
                                              "a_2.attacl",
                                              "a_2.attoptions",
                                              "a_2.attfdwoptions",
                                              "a_2.attmissingval"
                                            ],
                                            "Index Cond": "((a_2.attrelid = pg_index.indexrelid) AND (a_2.attnum > 0))",
                                            "Rows Removed by Index Recheck": 0,
                                            "Shared Hit Blocks": 351,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Node Type": "Nested Loop",
                                    "Parent Relationship": "Inner",
                                    "Parallel Aware": false,
                                    "Join Type": "Inner",
                                    "Startup Cost": 19.89,
                                    "Total Cost": 101.67,
                                    "Plan Rows": 1,
                                    "Plan Width": 401,
                                    "Actual Startup Time": 0.008,
                                    "Actual Total Time": 0.857,
                                    "Actual Rows": 365,
                                    "Actual Loops": 193,
                                    "Output": [
                                      "n_2.nspname",
                                      "c_3.relname",
                                      "a_1.attname",
                                      "NULL::boolean",
                                      "s_3.stanullfrac",
                                      "s_3.stawidth",
                                      "NULL::real",
                                      "NULL::anyarray",
                                      "NULL::real[]",
                                      "NULL::anyarray",
                                      "NULL::real",
                                      "NULL::anyarray",
                                      "NULL::real[]",
                                      "NULL::real[]"
                                    ],
                                    "Inner Unique": true,
                                    "Join Filter": "(has_column_privilege(c_3.oid, a_1.attnum, 'select'::text) AND (c_3.oid = a_1.attrelid))",
                                    "Rows Removed by Join Filter": 0,
                                    "Shared Hit Blocks": 214436,
                                    "Shared Read Blocks": 0,
                                    "Shared Dirtied Blocks": 0,
                                    "Shared Written Blocks": 0,
                                    "Local Hit Blocks": 0,
                                    "Local Read Blocks": 0,
                                    "Local Dirtied Blocks": 0,
                                    "Local Written Blocks": 0,
                                    "Temp Read Blocks": 0,
                                    "Temp Written Blocks": 0,
                                    "Plans": [
                                      {
                                        "Node Type": "Hash Join",
                                        "Parent Relationship": "Outer",
                                        "Parallel Aware": false,
                                        "Join Type": "Inner",
                                        "Startup Cost": 19.61,
                                        "Total Cost": 41.74,
                                        "Plan Rows": 66,
                                        "Plan Width": 146,
                                        "Actual Startup Time": 0.004,
                                        "Actual Total Time": 0.157,
                                        "Actual Rows": 365,
                                        "Actual Loops": 193,
                                        "Output": [
                                          "s_3.stanullfrac",
                                          "s_3.stawidth",
                                          "s_3.starelid",
                                          "s_3.staattnum",
                                          "c_3.relname",
                                          "c_3.oid",
                                          "n_2.nspname"
                                        ],
                                        "Inner Unique": false,
                                        "Hash Cond": "(s_3.starelid = c_3.oid)",
                                        "Shared Hit Blocks": 3101,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0,
                                        "Plans": [
                                          {
                                            "Node Type": "Seq Scan",
                                            "Parent Relationship": "Outer",
                                            "Parallel Aware": false,
                                            "Relation Name": "pg_statistic",
                                            "Schema": "pg_catalog",
                                            "Alias": "s_3",
                                            "Startup Cost": 0.0,
                                            "Total Cost": 19.98,
                                            "Plan Rows": 398,
                                            "Plan Width": 14,
                                            "Actual Startup Time": 0.001,
                                            "Actual Total Time": 0.035,
                                            "Actual Rows": 398,
                                            "Actual Loops": 193,
                                            "Output": [
                                              "s_3.starelid",
                                              "s_3.staattnum",
                                              "s_3.stainherit",
                                              "s_3.stanullfrac",
                                              "s_3.stawidth",
                                              "s_3.stadistinct",
                                              "s_3.stakind1",
                                              "s_3.stakind2",
                                              "s_3.stakind3",
                                              "s_3.stakind4",
                                              "s_3.stakind5",
                                              "s_3.staop1",
                                              "s_3.staop2",
                                              "s_3.staop3",
                                              "s_3.staop4",
                                              "s_3.staop5",
                                              "s_3.stanumbers1",
                                              "s_3.stanumbers2",
                                              "s_3.stanumbers3",
                                              "s_3.stanumbers4",
                                              "s_3.stanumbers5",
                                              "s_3.stavalues1",
                                              "s_3.stavalues2",
                                              "s_3.stavalues3",
                                              "s_3.stavalues4",
                                              "s_3.stavalues5"
                                            ],
                                            "Shared Hit Blocks": 3088,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0
                                          },
                                          {
                                            "Node Type": "Hash",
                                            "Parent Relationship": "Inner",
                                            "Parallel Aware": false,
                                            "Startup Cost": 18.89,
                                            "Total Cost": 18.89,
                                            "Plan Rows": 57,
                                            "Plan Width": 132,
                                            "Actual Startup Time": 0.476,
                                            "Actual Total Time": 0.476,
                                            "Actual Rows": 237,
                                            "Actual Loops": 1,
                                            "Output": [
                                              "c_3.relname",
                                              "c_3.oid",
                                              "n_2.nspname"
                                            ],
                                            "Hash Buckets": 1024,
                                            "Original Hash Buckets": 1024,
                                            "Hash Batches": 1,
                                            "Original Hash Batches": 1,
                                            "Peak Memory Usage": 46,
                                            "Shared Hit Blocks": 13,
                                            "Shared Read Blocks": 0,
                                            "Shared Dirtied Blocks": 0,
                                            "Shared Written Blocks": 0,
                                            "Local Hit Blocks": 0,
                                            "Local Read Blocks": 0,
                                            "Local Dirtied Blocks": 0,
                                            "Local Written Blocks": 0,
                                            "Temp Read Blocks": 0,
                                            "Temp Written Blocks": 0,
                                            "Plans": [
                                              {
                                                "Node Type": "Hash Join",
                                                "Parent Relationship": "Outer",
                                                "Parallel Aware": false,
                                                "Join Type": "Inner",
                                                "Startup Cost": 1.09,
                                                "Total Cost": 18.89,
                                                "Plan Rows": 57,
                                                "Plan Width": 132,
                                                "Actual Startup Time": 0.098,
                                                "Actual Total Time": 0.355,
                                                "Actual Rows": 237,
                                                "Actual Loops": 1,
                                                "Output": [
                                                  "c_3.relname",
                                                  "c_3.oid",
                                                  "n_2.nspname"
                                                ],
                                                "Inner Unique": true,
                                                "Hash Cond": "(c_3.relnamespace = n_2.oid)",
                                                "Shared Hit Blocks": 13,
                                                "Shared Read Blocks": 0,
                                                "Shared Dirtied Blocks": 0,
                                                "Shared Written Blocks": 0,
                                                "Local Hit Blocks": 0,
                                                "Local Read Blocks": 0,
                                                "Local Dirtied Blocks": 0,
                                                "Local Written Blocks": 0,
                                                "Temp Read Blocks": 0,
                                                "Temp Written Blocks": 0,
                                                "Plans": [
                                                  {
                                                    "Node Type": "Seq Scan",
                                                    "Parent Relationship": "Outer",
                                                    "Parallel Aware": false,
                                                    "Relation Name": "pg_class",
                                                    "Schema": "pg_catalog",
                                                    "Alias": "c_3",
                                                    "Startup Cost": 0.0,
                                                    "Total Cost": 16.27,
                                                    "Plan Rows": 342,
                                                    "Plan Width": 72,
                                                    "Actual Startup Time": 0.012,
                                                    "Actual Total Time": 0.206,
                                                    "Actual Rows": 348,
                                                    "Actual Loops": 1,
                                                    "Output": [
                                                      "c_3.relname",
                                                      "c_3.oid",
                                                      "c_3.relnamespace"
                                                    ],
                                                    "Filter": "((NOT c_3.relrowsecurity) OR (NOT row_security_active(c_3.oid)))",
                                                    "Rows Removed by Filter": 0,
                                                    "Shared Hit Blocks": 12,
                                                    "Shared Read Blocks": 0,
                                                    "Shared Dirtied Blocks": 0,
                                                    "Shared Written Blocks": 0,
                                                    "Local Hit Blocks": 0,
                                                    "Local Read Blocks": 0,
                                                    "Local Dirtied Blocks": 0,
                                                    "Local Written Blocks": 0,
                                                    "Temp Read Blocks": 0,
                                                    "Temp Written Blocks": 0
                                                  },
                                                  {
                                                    "Node Type": "Hash",
                                                    "Parent Relationship": "Inner",
                                                    "Parallel Aware": false,
                                                    "Startup Cost": 1.07,
                                                    "Total Cost": 1.07,
                                                    "Plan Rows": 1,
                                                    "Plan Width": 68,
                                                    "Actual Startup Time": 0.027,
                                                    "Actual Total Time": 0.027,
                                                    "Actual Rows": 1,
                                                    "Actual Loops": 1,
                                                    "Output": [
                                                      "n_2.nspname",
                                                      "n_2.oid"
                                                    ],
                                                    "Hash Buckets": 1024,
                                                    "Original Hash Buckets": 1024,
                                                    "Hash Batches": 1,
                                                    "Original Hash Batches": 1,
                                                    "Peak Memory Usage": 9,
                                                    "Shared Hit Blocks": 1,
                                                    "Shared Read Blocks": 0,
                                                    "Shared Dirtied Blocks": 0,
                                                    "Shared Written Blocks": 0,
                                                    "Local Hit Blocks": 0,
                                                    "Local Read Blocks": 0,
                                                    "Local Dirtied Blocks": 0,
                                                    "Local Written Blocks": 0,
                                                    "Temp Read Blocks": 0,
                                                    "Temp Written Blocks": 0,
                                                    "Plans": [
                                                      {
                                                        "Node Type": "Seq Scan",
                                                        "Parent Relationship": "Outer",
                                                        "Parallel Aware": false,
                                                        "Relation Name": "pg_namespace",
                                                        "Schema": "pg_catalog",
                                                        "Alias": "n_2",
                                                        "Startup Cost": 0.0,
                                                        "Total Cost": 1.07,
                                                        "Plan Rows": 1,
                                                        "Plan Width": 68,
                                                        "Actual Startup Time": 0.021,
                                                        "Actual Total Time": 0.022,
                                                        "Actual Rows": 1,
                                                        "Actual Loops": 1,
                                                        "Output": [
                                                          "n_2.nspname",
                                                          "n_2.oid"
                                                        ],
                                                        "Filter": "(n_2.nspname = 'pg_catalog'::name)",
                                                        "Rows Removed by Filter": 6,
                                                        "Shared Hit Blocks": 1,
                                                        "Shared Read Blocks": 0,
                                                        "Shared Dirtied Blocks": 0,
                                                        "Shared Written Blocks": 0,
                                                        "Local Hit Blocks": 0,
                                                        "Local Read Blocks": 0,
                                                        "Local Dirtied Blocks": 0,
                                                        "Local Written Blocks": 0,
                                                        "Temp Read Blocks": 0,
                                                        "Temp Written Blocks": 0
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Node Type": "Index Scan",
                                        "Parent Relationship": "Inner",
                                        "Parallel Aware": false,
                                        "Scan Direction": "Forward",
                                        "Index Name": "pg_attribute_relid_attnum_index",
                                        "Relation Name": "pg_attribute",
                                        "Schema": "pg_catalog",
                                        "Alias": "a_1",
                                        "Startup Cost": 0.28,
                                        "Total Cost": 0.89,
                                        "Plan Rows": 1,
                                        "Plan Width": 70,
                                        "Actual Startup Time": 0.001,
                                        "Actual Total Time": 0.001,
                                        "Actual Rows": 1,
                                        "Actual Loops": 70445,
                                        "Output": [
                                          "a_1.attrelid",
                                          "a_1.attname",
                                          "a_1.atttypid",
                                          "a_1.attstattarget",
                                          "a_1.attlen",
                                          "a_1.attnum",
                                          "a_1.attndims",
                                          "a_1.attcacheoff",
                                          "a_1.atttypmod",
                                          "a_1.attbyval",
                                          "a_1.attstorage",
                                          "a_1.attalign",
                                          "a_1.attnotnull",
                                          "a_1.atthasdef",
                                          "a_1.atthasmissing",
                                          "a_1.attidentity",
                                          "a_1.attisdropped",
                                          "a_1.attislocal",
                                          "a_1.attinhcount",
                                          "a_1.attcollation",
                                          "a_1.attacl",
                                          "a_1.attoptions",
                                          "a_1.attfdwoptions",
                                          "a_1.attmissingval"
                                        ],
                                        "Index Cond": "((a_1.attrelid = s_3.starelid) AND (a_1.attnum = s_3.staattnum))",
                                        "Rows Removed by Index Recheck": 0,
                                        "Filter": "(NOT a_1.attisdropped)",
                                        "Rows Removed by Filter": 0,
                                        "Shared Hit Blocks": 211335,
                                        "Shared Read Blocks": 0,
                                        "Shared Dirtied Blocks": 0,
                                        "Shared Written Blocks": 0,
                                        "Local Hit Blocks": 0,
                                        "Local Read Blocks": 0,
                                        "Local Dirtied Blocks": 0,
                                        "Local Written Blocks": 0,
                                        "Temp Read Blocks": 0,
                                        "Temp Written Blocks": 0
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Node Type": "Index Only Scan",
                                "Parent Relationship": "Inner",
                                "Parallel Aware": false,
                                "Scan Direction": "Forward",
                                "Index Name": "pg_type_oid_index",
                                "Relation Name": "pg_type",
                                "Schema": "pg_catalog",
                                "Alias": "t",
                                "Startup Cost": 0.15,
                                "Total Cost": 4.17,
                                "Plan Rows": 1,
                                "Plan Width": 4,
                                "Actual Startup Time": 0.005,
                                "Actual Total Time": 0.005,
                                "Actual Rows": 1,
                                "Actual Loops": 100,
                                "Output": ["t.oid"],
                                "Index Cond": "(t.oid = q.atttypid)",
                                "Rows Removed by Index Recheck": 0,
                                "Heap Fetches": 0,
                                "Shared Hit Blocks": 101,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Node Type": "Seq Scan",
                    "Parent Relationship": "Inner",
                    "Parallel Aware": false,
                    "Relation Name": "pg_am",
                    "Schema": "pg_catalog",
                    "Alias": "am",
                    "Startup Cost": 0.0,
                    "Total Cost": 1.07,
                    "Plan Rows": 1,
                    "Plan Width": 4,
                    "Actual Startup Time": 0.0,
                    "Actual Total Time": 0.0,
                    "Actual Rows": 1,
                    "Actual Loops": 47,
                    "Output": ["am.oid"],
                    "Filter": "(am.amname = 'btree'::name)",
                    "Rows Removed by Filter": 0,
                    "Shared Hit Blocks": 47,
                    "Shared Read Blocks": 0,
                    "Shared Dirtied Blocks": 0,
                    "Shared Written Blocks": 0,
                    "Local Hit Blocks": 0,
                    "Local Read Blocks": 0,
                    "Local Dirtied Blocks": 0,
                    "Local Written Blocks": 0,
                    "Temp Read Blocks": 0,
                    "Temp Written Blocks": 0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
`,i0=` Merge on public.tb  (cost=262602.88..306621.45 rows=0 width=0) (actual time=7798.118..7798.122 rows=0 loops=1)
   Tuples: inserted=9995 updated=9679 deleted=326
   Buffers: shared hit=7731564 read=22226 dirtied=27295 written=38115, temp read=9593 written=27592
   I/O Timings: shared read=22.960 write=186.426, temp read=17.017 write=119.861
   WAL: records=5049414 fpi=5192 bytes=416135793
   CTE tbl
     ->  Insert on pg_temp.tblog  (cost=8704.82..8705.65 rows=0 width=0) (actual time=509.761..509.761 rows=0 loops=1)
           Buffers: shared hit=3 read=5448 written=5276, local hit=494411 dirtied=2644 written=4269, temp read=1559 written=1568
           I/O Timings: shared read=10.578 write=13.760, local write=54.430, temp read=2.942 write=6.888
           ->  Sort  (cost=8704.82..8705.65 rows=333 width=12) (actual time=286.491..347.529 rows=489127 loops=1)
                 Output: tb_1.i, tb_1.x
                 Sort Key: tb_1.x
                 Sort Method: external merge  Disk: 12472kB
                 Buffers: shared hit=3 read=5448 written=5276, temp read=1559 written=1568
                 I/O Timings: shared read=10.578 write=13.760, temp read=2.942 write=6.888
                 ->  Bitmap Heap Scan on public.tb tb_1  (cost=180.48..8690.86 rows=333 width=12) (actual time=30.582..122.685 rows=489127 loops=1)
                       Output: tb_1.i, tb_1.x
                       Recheck Cond: ((tb_1.i >= 4000000) AND (tb_1.i <= 5000000))
                       Filter: ((mod(tb_1.i, 99) > 0) AND (mod(tb_1.i, 98) > 0) AND (mod(tb_1.i, 98) > 0) AND ((tb_1.i + 1) > 0))
                       Rows Removed by Filter: 10068
                       Heap Blocks: exact=3181
                       Buffers: shared hit=3 read=5448 written=5276
                       I/O Timings: shared read=10.578 write=13.760
                       ->  Bitmap Index Scan on tb_pkey  (cost=0.00..180.40 rows=8997 width=0) (actual time=30.251..30.251 rows=499195 loops=1)
                             Index Cond: ((tb_1.i >= 4000000) AND (tb_1.i <= 5000000))
                             Buffers: shared hit=2 read=2268 written=2181
                             I/O Timings: shared read=4.315 write=5.384
   CTE tabb
     ->  Update on public.ta  (cost=96.13..93079.47 rows=1667044 width=18) (actual time=11.270..6418.935 rows=2499947 loops=1)
           Output: ta_1.i, ta_1.x, ta_1.filler
           Update on public.ta1 ta_1
           Update on public.ta2 ta_2
           Buffers: shared hit=7542762 read=22126 dirtied=26988 written=37604
           I/O Timings: shared read=22.722 write=184.053
           WAL: records=4999894 fpi=5162 bytes=412139886
           InitPlan 3
             ->  Result  (cost=96.12..96.13 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=1)
                   Output: ((InitPlan 2).col1 / 2)
                   Buffers: shared hit=2 read=2
                   I/O Timings: shared read=0.007
                   InitPlan 2
                     ->  Limit  (cost=0.43..96.12 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=1)
                           Output: tb_2.i
                           Buffers: shared hit=2 read=2
                           I/O Timings: shared read=0.007
                           ->  Index Only Scan Backward using tb_pkey on public.tb tb_2  (cost=0.43..95690.29 rows=1000 width=4) (actual time=0.045..0.045 rows=1 loops=1)
                                 Output: tb_2.i
                                 Filter: (((tb_2.i + 1) > 0) AND ((tb_2.i + 2) > 0) AND (mod(tb_2.i, 99) = 0))
                                 Rows Removed by Filter: 38
                                 Heap Fetches: 39
                                 Buffers: shared hit=2 read=2
                                 I/O Timings: shared read=0.007
           ->  Append  (cost=0.00..92983.35 rows=1667044 width=18) (actual time=0.078..650.328 rows=2499947 loops=1)
                 Buffers: shared hit=2 read=22126 written=8891
                 I/O Timings: shared read=22.722 write=25.883
                 ->  Seq Scan on public.ta1 ta_1  (cost=0.00..84624.00 rows=1666667 width=18) (actual time=0.016..486.444 rows=2499947 loops=1)
                       Output: '2'::double precision, ta_1.tableoid, ta_1.ctid
                       Filter: (ta_1.i < (InitPlan 3).col1)
                       Rows Removed by Filter: 2500053
                       Buffers: shared read=22124 written=8891
                       I/O Timings: shared read=22.715 write=25.883
                 ->  Seq Scan on public.ta2 ta_2  (cost=0.00..24.12 rows=377 width=18) (never executed)
                       Output: '2'::double precision, ta_2.tableoid, ta_2.ctid
                       Filter: (ta_2.i < (InitPlan 3).col1)
   CTE tab
     ->  Limit  (cost=160767.33..160817.33 rows=20000 width=44) (actual time=7700.673..7704.219 rows=20000 loops=1)
           Output: tabb.i, tabb.x, tabb.filler
           Buffers: shared hit=7542762 read=22126 dirtied=26988 written=37604, temp read=9593 written=27592
           I/O Timings: shared read=22.722 write=184.053, temp read=17.017 write=119.861
           WAL: records=4999894 fpi=5162 bytes=412139886
           ->  Sort  (cost=160767.33..164934.94 rows=1667044 width=44) (actual time=7563.572..7565.984 rows=20000 loops=1)
                 Output: tabb.i, tabb.x, tabb.filler
                 Sort Key: tabb.x
                 Sort Method: external merge  Disk: 73440kB
                 Buffers: shared hit=7542762 read=22126 dirtied=26988 written=37604, temp read=9593 written=27592
                 I/O Timings: shared read=22.722 write=184.053, temp read=17.017 write=119.861
                 WAL: records=4999894 fpi=5162 bytes=412139886
                 ->  CTE Scan on tabb  (cost=0.00..33340.88 rows=1667044 width=44) (actual time=11.274..7104.296 rows=2499947 loops=1)
                       Output: tabb.i, tabb.x, tabb.filler
                       Buffers: shared hit=7542762 read=22126 dirtied=26988 written=37604, temp written=9155
                       I/O Timings: shared read=22.722 write=184.053, temp write=58.774
                       WAL: records=4999894 fpi=5162 bytes=412139886
   ->  Nested Loop Left Join  (cost=0.43..44019.00 rows=20000 width=102) (actual time=7700.749..7733.331 rows=20000 loops=1)
         Output: tb.ctid, tab.i, tab.filler, tab.*
         Inner Unique: true
         Buffers: shared hit=7612704 read=22189 dirtied=26988 written=37663, temp read=9593 written=27592
         I/O Timings: shared read=22.871 write=184.243, temp read=17.017 write=119.861
         WAL: records=4999894 fpi=5162 bytes=412139886
         ->  CTE Scan on tab  (cost=0.00..400.00 rows=20000 width=96) (actual time=7700.708..7709.042 rows=20000 loops=1)
               Output: tab.i, tab.filler, tab.*
               Buffers: shared hit=7542762 read=22126 dirtied=26988 written=37604, temp read=9593 written=27592
               I/O Timings: shared read=22.722 write=184.053, temp read=17.017 write=119.861
               WAL: records=4999894 fpi=5162 bytes=412139886
         ->  Index Scan using tb_pkey on public.tb  (cost=0.43..2.18 rows=1 width=10) (actual time=0.001..0.001 rows=1 loops=20000)
               Output: tb.ctid, tb.i
               Index Cond: (tb.i = tab.i)
               Buffers: shared hit=69942 read=63 written=59
               I/O Timings: shared read=0.149 write=0.190
 Settings: work_mem = '3MB', random_page_cost = '1.5', parallel_tuple_cost = '0', jit_above_cost = '0', jit_inline_above_cost = '0', jit_optimize_above_cost = '0'
 Planning:
   Buffers: shared hit=26 read=1
   I/O Timings: shared read=0.003
   Memory: used=165kB  allocated=264kB
 Planning Time: 0.289 ms
 Trigger RI_ConstraintTrigger_a_18153 for constraint tc1_fkey on tb: time=4399.335 calls=326
 Trigger RI_ConstraintTrigger_a_18161 for constraint tc2_fkey on tc1: time=6000.010 calls=326
 JIT:
   Functions: 31
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.340 ms (Deform 0.303 ms), Inlining 9.145 ms, Optimization 82.044 ms, Emission 57.043 ms, Total 149.572 ms
 Serialization: time=0.000 ms  output=0kB  format=text
 Execution Time: 18733.542 ms
(112 lignes)
`,o0=`EXPLAIN (ANALYZE,BUFFERS,VERBOSE,SETTINGS,WAL,SERIALIZE,MEMORY,FORMAT TEXT)
WITH
tBl  AS ( INSERT INTO tBlog SELECT i,x FROM tB
          WHERE i BETWEEN 4000000 AND 5000000
          AND mod(i,99)>0 AND mod(i,98)>0 AND mod(i,98)>0 and i+1>0 /* force bitmap index */
          ORDER BY x),
tAbb AS ( UPDATE tA SET x=2 WHERE i < (
            SELECT max(i)/2 FROM tB  WHERE mod(i,99)=0  AND i+1>0 AND i+2>0  /* for bad stats */
            )
          RETURNING * ),
tAb  AS MATERIALIZED ( SELECT * FROM tAbb ORDER BY x LIMIT 20000)
MERGE INTO tB
USING tAb ON (tB.i=tAb.i)
WHEN NOT MATCHED THEN
   INSERT VALUES (tAb.i, 0.0, '000')
WHEN MATCHED AND tB.x > 0.97 THEN
   DELETE  /*  will raise the ON DELETE trigger (very costly) */
WHEN MATCHED THEN
   UPDATE SET filler=tAb.filler
;
`,n0=`[
  {
    "Plan": {
      "Node Type": "Aggregate",
      "Strategy": "Plain",
      "Partial Mode": "Finalize",
      "Parallel Aware": false,
      "Startup Cost": 144975.01,
      "Total Cost": 144975.02,
      "Plan Rows": 1,
      "Plan Width": 32,
      "Actual Startup Time": 484.97,
      "Actual Total Time": 484.97,
      "Actual Rows": 1,
      "Actual Loops": 1,
      "Output": ["sum(l_quantity)"],
      "Plans": [
        {
          "Node Type": "Gather",
          "Parent Relationship": "Outer",
          "Parallel Aware": false,
          "Startup Cost": 144974.57,
          "Total Cost": 144974.98,
          "Plan Rows": 4,
          "Plan Width": 32,
          "Actual Startup Time": 484.868,
          "Actual Total Time": 486.428,
          "Actual Rows": 3,
          "Actual Loops": 1,
          "Output": ["(PARTIAL sum(l_quantity))"],
          "Workers Planned": 4,
          "Workers Launched": 2,
          "Single Copy": false,
          "Plans": [
            {
              "Node Type": "Aggregate",
              "Strategy": "Plain",
              "Partial Mode": "Partial",
              "Parent Relationship": "Outer",
              "Parallel Aware": false,
              "Startup Cost": 143974.57,
              "Total Cost": 143974.58,
              "Plan Rows": 1,
              "Plan Width": 32,
              "Actual Startup Time": 482.39,
              "Actual Total Time": 482.39,
              "Actual Rows": 1,
              "Actual Loops": 3,
              "Output": ["PARTIAL sum(l_quantity)"],
              "Workers": [
                {
                  "Worker Number": 0,
                  "Actual Startup Time": 481.485,
                  "Actual Total Time": 481.485,
                  "Actual Rows": 1,
                  "Actual Loops": 1
                },
                {
                  "Worker Number": 1,
                  "Actual Startup Time": 481.56,
                  "Actual Total Time": 481.56,
                  "Actual Rows": 1,
                  "Actual Loops": 1
                }
              ],
              "Plans": [
                {
                  "Node Type": "Seq Scan",
                  "Parent Relationship": "Outer",
                  "Parallel Aware": true,
                  "Relation Name": "lineitem",
                  "Schema": "public",
                  "Alias": "lineitem",
                  "Startup Cost": 0.0,
                  "Total Cost": 140298.89,
                  "Plan Rows": 1470273,
                  "Plan Width": 5,
                  "Actual Startup Time": 0.652,
                  "Actual Total Time": 344.447,
                  "Actual Rows": 1962085,
                  "Actual Loops": 3,
                  "Output": [
                    "l_orderkey",
                    "l_partkey",
                    "l_suppkey",
                    "l_linenumber",
                    "l_quantity",
                    "l_extendedprice",
                    "l_discount",
                    "l_tax",
                    "l_returnflag",
                    "l_linestatus",
                    "l_shipdate",
                    "l_commitdate",
                    "l_receiptdate",
                    "l_shipinstruct",
                    "l_shipmode",
                    "l_comment"
                  ],
                  "Filter": "(lineitem.l_shipdate <= '1998-08-18 00:00:00'::timestamp without time zone)",
                  "Rows Removed by Filter": 38320,
                  "Workers": [
                    {
                      "Worker Number": 0,
                      "Actual Startup Time": 0.414,
                      "Actual Total Time": 344.435,
                      "Actual Rows": 1962858,
                      "Actual Loops": 1
                    },
                    {
                      "Worker Number": 1,
                      "Actual Startup Time": 0.441,
                      "Actual Total Time": 344.431,
                      "Actual Rows": 1971199,
                      "Actual Loops": 1
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "Planning Time": 0.591,
    "Triggers": [],
    "Execution Time": 486.495
  }
]`,l0=`select
        l_shipmode,
        sum(case
                when o_orderpriority = '1-URGENT'
                        or o_orderpriority = '2-HIGH'
                        then 1
                else 0
        end) as high_line_count,
        sum(case
                when o_orderpriority <> '1-URGENT'
                        and o_orderpriority <> '2-HIGH'
                        then 1
                else 0
        end) as low_line_count
from
        orders,
        lineitem
where
        o_orderkey = l_orderkey
        and l_shipmode in ('MAIL', 'AIR')
        and l_commitdate < l_receiptdate
        and l_shipdate < l_commitdate
        and l_receiptdate >= date '1996-01-01'
        and l_receiptdate < date '1996-01-01' + interval '1' year
group by
        l_shipmode
order by
        l_shipmode
LIMIT 1;
`,c0=` Limit  (cost=1964755.66..1964961.44 rows=1 width=27) (actual time=7579.592..7922.997 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1964755.66..1966196.11 rows=7 width=27) (actual time=7579.590..7579.591 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1964755.66..1966195.83 rows=28 width=27) (actual time=7559.593..7922.319 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1963755.61..1965192.44 rows=7 width=27) (actual time=7548.103..7564.592 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1963755.61..1963935.20 rows=71838 width=27) (actual time=7530.280..7539.688 rows=62519 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: external merge  Disk: 2304kB
                           Worker 0:  Sort Method: external merge  Disk: 2064kB
                           Worker 1:  Sort Method: external merge  Disk: 2384kB
                           Worker 2:  Sort Method: external merge  Disk: 2264kB
                           Worker 3:  Sort Method: external merge  Disk: 2336kB
                           ->  Parallel Hash Join  (cost=382571.01..1957960.99 rows=71838 width=27) (actual time=7036.917..7499.692 rows=62519 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1552386.40 rows=71838 width=19) (actual time=0.583..4901.063 rows=62519 loops=5)
                                       Filter: ((l_shipmode = ANY ('{MAIL,AIR}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1996-01-01'::date) AND (l_receiptdate < '1997-01-01 00:00:00'::timestamp without time zone))
                                       Rows Removed by Filter: 11934691
                                 ->  Parallel Hash  (cost=313722.45..313722.45 rows=3750045 width=20) (actual time=2011.518..2011.518 rows=3000000 loops=5)
                                       Buckets: 65536  Batches: 256  Memory Usage: 3840kB
                                       ->  Parallel Seq Scan on orders  (cost=0.00..313722.45 rows=3750045 width=20) (actual time=0.029..995.948 rows=3000000 loops=5)
 Planning Time: 0.977 ms
 Execution Time: 7923.770 ms`,d0=`                                                                                            QUERY PLAN
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Delete on emailmessages  (cost=224.85..38989.92 rows=5000 width=34) (actual time=217158.570..217158.570 rows=0 loops=1)
   Buffers: shared hit=2579331 read=506594 dirtied=503671
   ->  Nested Loop  (cost=224.85..38989.92 rows=5000 width=34) (actual time=7.105..4576.019 rows=5000 loops=1)
         Buffers: shared hit=20223 read=395
         ->  HashAggregate  (cost=224.42..274.42 rows=5000 width=32) (actual time=7.072..23.891 rows=5000 loops=1)
               Group Key: "ANY_subquery".emailmessageid
               Buffers: shared hit=583
               ->  Subquery Scan on "ANY_subquery"  (cost=0.43..211.92 rows=5000 width=32) (actual time=0.064..3.892 rows=5000 loops=1)
                     Buffers: shared hit=583
                     ->  Limit  (cost=0.43..161.92 rows=5000 width=4) (actual time=0.053..2.808 rows=5000 loops=1)
                           Buffers: shared hit=583
                           ->  Index Only Scan using emailmessages_pkey on emailmessages emailmessages_1  (cost=0.43..89834.20 rows=2781465 width=4) (actual time=0.051..2.260 rows=5000 loops=1)
                                 Heap Fetches: 609
                                 Buffers: shared hit=583
         ->  Index Scan using emailmessages_pkey on emailmessages  (cost=0.43..7.73 rows=1 width=10) (actual time=0.903..0.905 rows=1 loops=5000)
               Index Cond: (emailmessageid = "ANY_subquery".emailmessageid)
               Buffers: shared hit=19640 read=395
 Planning time: 2.482 ms
 Trigger for constraint headeremessageref: time=4038.247 calls=5000
 Trigger for constraint formdataemessageref: time=81.415 calls=5000
 Trigger for constraint attachemessageref: time=158945.774 calls=5000
 Trigger for constraint outgoingemessageref: time=332.316 calls=5000
 Trigger for constraint incomingemessageref: time=125.492 calls=5000
 Trigger for constraint eventemessageref: time=251.365 calls=5000
 Trigger for constraint filteredemessageref: time=125.894 calls=5000
 Execution time: 381072.164 ms
(26 rows)`,u0="DELETE FROM emailmessages where emailmessageid in ( select emailmessageid from emailmessages limit 5000 );",p0=`
 Append  (cost=0.43..170502.33 rows=4018259 width=97) (actual time=0.007..464.318 rows=4000001 loops=1)
   Buffers: shared hit=39 read=69641
   I/O Timings: shared read=66.219
   ->  Index Scan using pgbench_accounts_2_pkey on pgbench_accounts_2 pgbench_accounts_1  (cost=0.43..8.45 rows=1 width=97) (actual time=0.006..0.007 rows=1 loops=1)
         Index Cond: ((aid >= 5000000) AND (aid <= 9000000))
         Buffers: shared hit=4
   ->  Seq Scan on pgbench_accounts_3 pgbench_accounts_2  (cost=0.00..78484.00 rows=2500000 width=97) (actual time=0.032..163.701 rows=2500000 loops=1)
         Filter: ((aid >= 5000000) AND (aid <= 9000000))
         Buffers: shared hit=32 read=40952
         I/O Timings: shared read=32.345
   ->  Index Scan using pgbench_accounts_4_pkey on pgbench_accounts_4 pgbench_accounts_3  (cost=0.43..71918.59 rows=1518258 width=97) (actual time=0.020..148.504 rows=1500000 loops=1)
         Index Cond: ((aid >= 5000000) AND (aid <= 9000000))
         Buffers: shared hit=3 read=28689
         I/O Timings: shared read=33.874
 Settings: jit = 'off'
 Planning:
   Buffers: shared hit=20
 Planning Time: 0.271 ms
 Execution Time: 548.488 ms
`,m0=`
/* Query on a pgbench database with 4 partitions,
   only 3 are used */
EXPLAIN (ANALYZE,BUFFERS,SETTINGS)
SELECT * from pgbench_accounts where aid  BETWEEN  5000000 AND 9000000 ;
`,h0=[["Simple join (TEXT format)",ju,ps],["Simple join (JSON format)",Vu,ps],["Three joins, missing an index",Gu,$u],["Aggregate with four joins",Zu,Xu],["With subplan",Qu,""],["With Buffers",e0,t0],["A single CTE",a0,s0],["Many CTEs",Ku,""],["Very large plan",r0,""],["DELETE with triggers",d0,u0],["With many options",i0,o0],["Parallel (verbose)",n0,""],["Parallel (4 workers)",c0,l0],["Partitions",p0,m0]];Pr.add(Dr,Hr,Ir);let sa,ms;const Fa=zr({setup(){const e=Q(""),t=Q(""),a=Q(""),s=Q(""),r=Q(!1),i=Q(!1),o=Q([]),n=Q(null),d=Q(null),l=Q(!1);function u(k){n.value=null,k.preventDefault(),localStorage.getItem("dontAskBeforeSubmit")?m():sa.show()}function m(){document.getElementById("dontAskAgain").checked&&localStorage.setItem("dontAskBeforeSubmit",!0);let P=n.value;P||(e.value=e.value||"Plan created on "+f().format("MMMM Do YYYY, h:mm a"),P={title:e.value,plan:t.value,query:a.value,password:s.value,createdOn:new Date}),W(P)}function R(k){[e.value,t.value,a.value]=k}function b(k){const P=k.srcElement;if(!(P instanceof HTMLTextAreaElement)||(r.value=!1,i.value=!1,!k.dataTransfer))return;const se=k.dataTransfer.files[0],J=new FileReader;J.onload=Ce=>{J.result instanceof ArrayBuffer||(P.value=J.result||"",P.dispatchEvent(new Event("input")))},J.readAsText(se)}function h(){const k=[];for(let P in localStorage)us.startsWith(P,"plan_")&&k.push(JSON.parse(localStorage[P]));o.value=us.chain(k).sortBy("createdOn").reverse().value()}function B(k){k.value=k,localStorage.getItem("dontAskBeforeSubmit")?W(k):sa.show()}function S(k){return k.shareId?"/"+k.shareId:"#"+k.id}function O(k){l.value&&k.shareId?H.get("/plan/"+k.shareId+"/"+k.deleteKey).then(v.bind(this,k)):v(k)}function v(k){localStorage.removeItem(k.id?k.id:"plan_"+k.shareId),h(),ms.hide()}function W(k){const P=document.getElementById("submitForm");H.post(P.action,{title:k.title,plan:k.plan,query:k.query,password:k.password}).then(se=>{localStorage.removeItem(k.id);const J=se.data,Ce="plan_"+J.id;localStorage.setItem(Ce,JSON.stringify({id:Ce,shareId:J.id,title:k.title,createdOn:k.createdOn,deleteKey:J.deleteKey})),window.location.href="/plan/"+J.id})}function $(k){return new Date(k).toLocaleDateString(navigator.language,{weekday:"short",year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"})}return Jr(()=>{document.getElementsByTagName("textarea"),h(),sa=new Ua(document.getElementById("confirmSubmitModal")),ms=new Ua(document.getElementById("deletePlanModal"))}),ut(d,(k,P)=>{l.value=!1}),{samples:h0,titleInput:e,planInput:t,queryInput:a,passwordInput:s,draggingPlan:r,draggingQuery:i,plans:o,plan:n,planToDelete:d,deleteFromServer:l,checkForm:u,submitPlan:m,loadSample:R,handleDrop:b,loadPlan:B,getPlanUrl:S,deletePlan:O,formattedDate:$}}});Fa.use(zu);Fa.component("font-awesome-icon",Mr);Fa.mount("#app")});export default f0();
